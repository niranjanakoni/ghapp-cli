#!/usr/bin/env node
import{createRequire as e}from"module";var r={7864:e=>{var r=Object.defineProperty;var t=Object.getOwnPropertyDescriptor;var o=Object.getOwnPropertyNames;var s=Object.prototype.hasOwnProperty;var __export=(e,t)=>{for(var o in t)r(e,o,{get:t[o],enumerable:true})};var __copyProps=(e,n,i,a)=>{if(n&&typeof n==="object"||typeof n==="function"){for(let c of o(n))if(!s.call(e,c)&&c!==i)r(e,c,{get:()=>n[c],enumerable:!(a=t(n,c))||a.enumerable})}return e};var __toCommonJS=e=>__copyProps(r({},"__esModule",{value:true}),e);var n={};__export(n,{createTokenAuth:()=>l});e.exports=__toCommonJS(n);var i=/^v1\./;var a=/^ghs_/;var c=/^ghu_/;async function auth(e){const r=e.split(/\./).length===3;const t=i.test(e)||a.test(e);const o=c.test(e);const s=r?"app":t?"installation":o?"user-to-server":"oauth";return{type:"token",token:e,tokenType:s}}function withAuthorizationPrefix(e){if(e.split(/\./).length===3){return`bearer ${e}`}return`token ${e}`}async function hook(e,r,t,o){const s=r.endpoint.merge(t,o);s.headers.authorization=withAuthorizationPrefix(e);return r(s)}var l=function createTokenAuth2(e){if(!e){throw new Error("[@octokit/auth-token] No token passed to createTokenAuth")}if(typeof e!=="string"){throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string")}e=e.replace(/^(token|bearer) +/i,"");return Object.assign(auth.bind(null,e),{hook:hook.bind(null,e)})};0&&0},1897:(e,r,t)=>{var o=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var n=Object.getOwnPropertyNames;var i=Object.prototype.hasOwnProperty;var __export=(e,r)=>{for(var t in r)o(e,t,{get:r[t],enumerable:true})};var __copyProps=(e,r,t,a)=>{if(r&&typeof r==="object"||typeof r==="function"){for(let c of n(r))if(!i.call(e,c)&&c!==t)o(e,c,{get:()=>r[c],enumerable:!(a=s(r,c))||a.enumerable})}return e};var __toCommonJS=e=>__copyProps(o({},"__esModule",{value:true}),e);var a={};__export(a,{Octokit:()=>b});e.exports=__toCommonJS(a);var c=t(3843);var l=t(2732);var p=t(4558);var u=t(7);var m=t(7864);var d="5.2.1";var noop=()=>{};var g=console.warn.bind(console);var h=console.error.bind(console);var E=`octokit-core.js/${d} ${(0,c.getUserAgent)()}`;var b=class{static{this.VERSION=d}static defaults(e){const r=class extends(this){constructor(...r){const t=r[0]||{};if(typeof e==="function"){super(e(t));return}super(Object.assign({},e,t,t.userAgent&&e.userAgent?{userAgent:`${t.userAgent} ${e.userAgent}`}:null))}};return r}static{this.plugins=[]}static plugin(...e){const r=this.plugins;const t=class extends(this){static{this.plugins=r.concat(e.filter((e=>!r.includes(e))))}};return t}constructor(e={}){const r=new l.Collection;const t={baseUrl:p.request.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};t.headers["user-agent"]=e.userAgent?`${e.userAgent} ${E}`:E;if(e.baseUrl){t.baseUrl=e.baseUrl}if(e.previews){t.mediaType.previews=e.previews}if(e.timeZone){t.headers["time-zone"]=e.timeZone}this.request=p.request.defaults(t);this.graphql=(0,u.withCustomRequest)(this.request).defaults(t);this.log=Object.assign({debug:noop,info:noop,warn:g,error:h},e.log);this.hook=r;if(!e.authStrategy){if(!e.auth){this.auth=async()=>({type:"unauthenticated"})}else{const t=(0,m.createTokenAuth)(e.auth);r.wrap("request",t.hook);this.auth=t}}else{const{authStrategy:t,...o}=e;const s=t(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:o},e.auth));r.wrap("request",s.hook);this.auth=s}const o=this.constructor;for(let r=0;r<o.plugins.length;++r){Object.assign(this,o.plugins[r](this,e))}}};0&&0},7820:(e,r,t)=>{var o=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var n=Object.getOwnPropertyNames;var i=Object.prototype.hasOwnProperty;var __export=(e,r)=>{for(var t in r)o(e,t,{get:r[t],enumerable:true})};var __copyProps=(e,r,t,a)=>{if(r&&typeof r==="object"||typeof r==="function"){for(let c of n(r))if(!i.call(e,c)&&c!==t)o(e,c,{get:()=>r[c],enumerable:!(a=s(r,c))||a.enumerable})}return e};var __toCommonJS=e=>__copyProps(o({},"__esModule",{value:true}),e);var a={};__export(a,{endpoint:()=>d});e.exports=__toCommonJS(a);var c=t(3843);var l="9.0.6";var p=`octokit-endpoint.js/${l} ${(0,c.getUserAgent)()}`;var u={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":p},mediaType:{format:""}};function lowercaseKeys(e){if(!e){return{}}return Object.keys(e).reduce(((r,t)=>{r[t.toLowerCase()]=e[t];return r}),{})}function isPlainObject(e){if(typeof e!=="object"||e===null)return false;if(Object.prototype.toString.call(e)!=="[object Object]")return false;const r=Object.getPrototypeOf(e);if(r===null)return true;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t==="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}function mergeDeep(e,r){const t=Object.assign({},e);Object.keys(r).forEach((o=>{if(isPlainObject(r[o])){if(!(o in e))Object.assign(t,{[o]:r[o]});else t[o]=mergeDeep(e[o],r[o])}else{Object.assign(t,{[o]:r[o]})}}));return t}function removeUndefinedProperties(e){for(const r in e){if(e[r]===void 0){delete e[r]}}return e}function merge(e,r,t){if(typeof r==="string"){let[e,o]=r.split(" ");t=Object.assign(o?{method:e,url:o}:{url:e},t)}else{t=Object.assign({},r)}t.headers=lowercaseKeys(t.headers);removeUndefinedProperties(t);removeUndefinedProperties(t.headers);const o=mergeDeep(e||{},t);if(t.url==="/graphql"){if(e&&e.mediaType.previews?.length){o.mediaType.previews=e.mediaType.previews.filter((e=>!o.mediaType.previews.includes(e))).concat(o.mediaType.previews)}o.mediaType.previews=(o.mediaType.previews||[]).map((e=>e.replace(/-preview/,"")))}return o}function addQueryParameters(e,r){const t=/\?/.test(e)?"&":"?";const o=Object.keys(r);if(o.length===0){return e}return e+t+o.map((e=>{if(e==="q"){return"q="+r.q.split("+").map(encodeURIComponent).join("+")}return`${e}=${encodeURIComponent(r[e])}`})).join("&")}var m=/\{[^{}}]+\}/g;function removeNonChars(e){return e.replace(/(?:^\W+)|(?:(?<!\W)\W+$)/g,"").split(/,/)}function extractUrlVariableNames(e){const r=e.match(m);if(!r){return[]}return r.map(removeNonChars).reduce(((e,r)=>e.concat(r)),[])}function omit(e,r){const t={__proto__:null};for(const o of Object.keys(e)){if(r.indexOf(o)===-1){t[o]=e[o]}}return t}function encodeReserved(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){if(!/%[0-9A-Fa-f]/.test(e)){e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")}return e})).join("")}function encodeUnreserved(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function encodeValue(e,r,t){r=e==="+"||e==="#"?encodeReserved(r):encodeUnreserved(r);if(t){return encodeUnreserved(t)+"="+r}else{return r}}function isDefined(e){return e!==void 0&&e!==null}function isKeyOperator(e){return e===";"||e==="&"||e==="?"}function getValues(e,r,t,o){var s=e[t],n=[];if(isDefined(s)&&s!==""){if(typeof s==="string"||typeof s==="number"||typeof s==="boolean"){s=s.toString();if(o&&o!=="*"){s=s.substring(0,parseInt(o,10))}n.push(encodeValue(r,s,isKeyOperator(r)?t:""))}else{if(o==="*"){if(Array.isArray(s)){s.filter(isDefined).forEach((function(e){n.push(encodeValue(r,e,isKeyOperator(r)?t:""))}))}else{Object.keys(s).forEach((function(e){if(isDefined(s[e])){n.push(encodeValue(r,s[e],e))}}))}}else{const e=[];if(Array.isArray(s)){s.filter(isDefined).forEach((function(t){e.push(encodeValue(r,t))}))}else{Object.keys(s).forEach((function(t){if(isDefined(s[t])){e.push(encodeUnreserved(t));e.push(encodeValue(r,s[t].toString()))}}))}if(isKeyOperator(r)){n.push(encodeUnreserved(t)+"="+e.join(","))}else if(e.length!==0){n.push(e.join(","))}}}}else{if(r===";"){if(isDefined(s)){n.push(encodeUnreserved(t))}}else if(s===""&&(r==="&"||r==="?")){n.push(encodeUnreserved(t)+"=")}else if(s===""){n.push("")}}return n}function parseUrl(e){return{expand:expand.bind(null,e)}}function expand(e,r){var t=["+","#",".","/",";","?","&"];e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,o,s){if(o){let e="";const s=[];if(t.indexOf(o.charAt(0))!==-1){e=o.charAt(0);o=o.substr(1)}o.split(/,/g).forEach((function(t){var o=/([^:\*]*)(?::(\d+)|(\*))?/.exec(t);s.push(getValues(r,e,o[1],o[2]||o[3]))}));if(e&&e!=="+"){var n=",";if(e==="?"){n="&"}else if(e!=="#"){n=e}return(s.length!==0?e:"")+s.join(n)}else{return s.join(",")}}else{return encodeReserved(s)}}));if(e==="/"){return e}else{return e.replace(/\/$/,"")}}function parse(e){let r=e.method.toUpperCase();let t=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}");let o=Object.assign({},e.headers);let s;let n=omit(e,["method","baseUrl","url","headers","request","mediaType"]);const i=extractUrlVariableNames(t);t=parseUrl(t).expand(n);if(!/^http/.test(t)){t=e.baseUrl+t}const a=Object.keys(e).filter((e=>i.includes(e))).concat("baseUrl");const c=omit(n,a);const l=/application\/octet-stream/i.test(o.accept);if(!l){if(e.mediaType.format){o.accept=o.accept.split(/,/).map((r=>r.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`))).join(",")}if(t.endsWith("/graphql")){if(e.mediaType.previews?.length){const r=o.accept.match(/(?<![\w-])[\w-]+(?=-preview)/g)||[];o.accept=r.concat(e.mediaType.previews).map((r=>{const t=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${r}-preview${t}`})).join(",")}}}if(["GET","HEAD"].includes(r)){t=addQueryParameters(t,c)}else{if("data"in c){s=c.data}else{if(Object.keys(c).length){s=c}}}if(!o["content-type"]&&typeof s!=="undefined"){o["content-type"]="application/json; charset=utf-8"}if(["PATCH","PUT"].includes(r)&&typeof s==="undefined"){s=""}return Object.assign({method:r,url:t,headers:o},typeof s!=="undefined"?{body:s}:null,e.request?{request:e.request}:null)}function endpointWithDefaults(e,r,t){return parse(merge(e,r,t))}function withDefaults(e,r){const t=merge(e,r);const o=endpointWithDefaults.bind(null,t);return Object.assign(o,{DEFAULTS:t,defaults:withDefaults.bind(null,t),merge:merge.bind(null,t),parse:parse})}var d=withDefaults(null,u);0&&0},497:(e,r,t)=>{var o=Object.create;var s=Object.defineProperty;var n=Object.getOwnPropertyDescriptor;var i=Object.getOwnPropertyNames;var a=Object.getPrototypeOf;var c=Object.prototype.hasOwnProperty;var __export=(e,r)=>{for(var t in r)s(e,t,{get:r[t],enumerable:true})};var __copyProps=(e,r,t,o)=>{if(r&&typeof r==="object"||typeof r==="function"){for(let a of i(r))if(!c.call(e,a)&&a!==t)s(e,a,{get:()=>r[a],enumerable:!(o=n(r,a))||o.enumerable})}return e};var __toESM=(e,r,t)=>(t=e!=null?o(a(e)):{},__copyProps(r||!e||!e.__esModule?s(t,"default",{value:e,enumerable:true}):t,e));var __toCommonJS=e=>__copyProps(s({},"__esModule",{value:true}),e);var l={};__export(l,{RequestError:()=>g});e.exports=__toCommonJS(l);var p=t(4150);var u=__toESM(t(5560));var m=(0,u.default)((e=>console.warn(e)));var d=(0,u.default)((e=>console.warn(e)));var g=class extends Error{constructor(e,r,t){super(e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="HttpError";this.status=r;let o;if("headers"in t&&typeof t.headers!=="undefined"){o=t.headers}if("response"in t){this.response=t.response;o=t.response.headers}const s=Object.assign({},t.request);if(t.request.headers.authorization){s.headers=Object.assign({},t.request.headers,{authorization:t.request.headers.authorization.replace(/(?<! ) .*$/," [REDACTED]")})}s.url=s.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]");this.request=s;Object.defineProperty(this,"code",{get(){m(new p.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));return r}});Object.defineProperty(this,"headers",{get(){d(new p.Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`."));return o||{}}})}};0&&0},4558:(e,r,t)=>{var o=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var n=Object.getOwnPropertyNames;var i=Object.prototype.hasOwnProperty;var __export=(e,r)=>{for(var t in r)o(e,t,{get:r[t],enumerable:true})};var __copyProps=(e,r,t,a)=>{if(r&&typeof r==="object"||typeof r==="function"){for(let c of n(r))if(!i.call(e,c)&&c!==t)o(e,c,{get:()=>r[c],enumerable:!(a=s(r,c))||a.enumerable})}return e};var __toCommonJS=e=>__copyProps(o({},"__esModule",{value:true}),e);var a={};__export(a,{request:()=>m});e.exports=__toCommonJS(a);var c=t(7820);var l=t(3843);var p="8.4.1";function isPlainObject(e){if(typeof e!=="object"||e===null)return false;if(Object.prototype.toString.call(e)!=="[object Object]")return false;const r=Object.getPrototypeOf(e);if(r===null)return true;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t==="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}var u=t(497);function getBufferResponse(e){return e.arrayBuffer()}function fetchWrapper(e){var r,t,o,s;const n=e.request&&e.request.log?e.request.log:console;const i=((r=e.request)==null?void 0:r.parseSuccessResponseBody)!==false;if(isPlainObject(e.body)||Array.isArray(e.body)){e.body=JSON.stringify(e.body)}let a={};let c;let l;let{fetch:p}=globalThis;if((t=e.request)==null?void 0:t.fetch){p=e.request.fetch}if(!p){throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing")}return p(e.url,{method:e.method,body:e.body,redirect:(o=e.request)==null?void 0:o.redirect,headers:e.headers,signal:(s=e.request)==null?void 0:s.signal,...e.body&&{duplex:"half"}}).then((async r=>{l=r.url;c=r.status;for(const e of r.headers){a[e[0]]=e[1]}if("deprecation"in a){const r=a.link&&a.link.match(/<([^<>]+)>; rel="deprecation"/);const t=r&&r.pop();n.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${a.sunset}${t?`. See ${t}`:""}`)}if(c===204||c===205){return}if(e.method==="HEAD"){if(c<400){return}throw new u.RequestError(r.statusText,c,{response:{url:l,status:c,headers:a,data:void 0},request:e})}if(c===304){throw new u.RequestError("Not modified",c,{response:{url:l,status:c,headers:a,data:await getResponseData(r)},request:e})}if(c>=400){const t=await getResponseData(r);const o=new u.RequestError(toErrorMessage(t),c,{response:{url:l,status:c,headers:a,data:t},request:e});throw o}return i?await getResponseData(r):r.body})).then((e=>({status:c,url:l,headers:a,data:e}))).catch((r=>{if(r instanceof u.RequestError)throw r;else if(r.name==="AbortError")throw r;let t=r.message;if(r.name==="TypeError"&&"cause"in r){if(r.cause instanceof Error){t=r.cause.message}else if(typeof r.cause==="string"){t=r.cause}}throw new u.RequestError(t,500,{request:e})}))}async function getResponseData(e){const r=e.headers.get("content-type");if(/application\/json/.test(r)){return e.json().catch((()=>e.text())).catch((()=>""))}if(!r||/^text\/|charset=utf-8$/.test(r)){return e.text()}return getBufferResponse(e)}function toErrorMessage(e){if(typeof e==="string")return e;let r;if("documentation_url"in e){r=` - ${e.documentation_url}`}else{r=""}if("message"in e){if(Array.isArray(e.errors)){return`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}${r}`}return`${e.message}${r}`}return`Unknown error: ${JSON.stringify(e)}`}function withDefaults(e,r){const t=e.defaults(r);const newApi=function(e,r){const o=t.merge(e,r);if(!o.request||!o.request.hook){return fetchWrapper(t.parse(o))}const request2=(e,r)=>fetchWrapper(t.parse(t.merge(e,r)));Object.assign(request2,{endpoint:t,defaults:withDefaults.bind(null,t)});return o.request.hook(request2,o)};return Object.assign(newApi,{endpoint:t,defaults:withDefaults.bind(null,t)})}var m=withDefaults(c.endpoint,{headers:{"user-agent":`octokit-request.js/${p} ${(0,l.getUserAgent)()}`}});0&&0},7:(e,r,t)=>{var o=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var n=Object.getOwnPropertyNames;var i=Object.prototype.hasOwnProperty;var __export=(e,r)=>{for(var t in r)o(e,t,{get:r[t],enumerable:true})};var __copyProps=(e,r,t,a)=>{if(r&&typeof r==="object"||typeof r==="function"){for(let c of n(r))if(!i.call(e,c)&&c!==t)o(e,c,{get:()=>r[c],enumerable:!(a=s(r,c))||a.enumerable})}return e};var __toCommonJS=e=>__copyProps(o({},"__esModule",{value:true}),e);var a={};__export(a,{GraphqlResponseError:()=>d,graphql:()=>b,withCustomRequest:()=>withCustomRequest});e.exports=__toCommonJS(a);var c=t(2804);var l=t(3843);var p="7.1.1";var u=t(2804);var m=t(2804);function _buildMessageForResponseErrors(e){return`Request failed due to following response errors:\n`+e.errors.map((e=>` - ${e.message}`)).join("\n")}var d=class extends Error{constructor(e,r,t){super(_buildMessageForResponseErrors(t));this.request=e;this.headers=r;this.response=t;this.name="GraphqlResponseError";this.errors=t.errors;this.data=t.data;if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}}};var g=["method","baseUrl","url","headers","request","query","mediaType"];var h=["query","method","url"];var E=/\/api\/v3\/?$/;function graphql(e,r,t){if(t){if(typeof r==="string"&&"query"in t){return Promise.reject(new Error(`[@octokit/graphql] "query" cannot be used as variable name`))}for(const e in t){if(!h.includes(e))continue;return Promise.reject(new Error(`[@octokit/graphql] "${e}" cannot be used as variable name`))}}const o=typeof r==="string"?Object.assign({query:r},t):r;const s=Object.keys(o).reduce(((e,r)=>{if(g.includes(r)){e[r]=o[r];return e}if(!e.variables){e.variables={}}e.variables[r]=o[r];return e}),{});const n=o.baseUrl||e.endpoint.DEFAULTS.baseUrl;if(E.test(n)){s.url=n.replace(E,"/api/graphql")}return e(s).then((e=>{if(e.data.errors){const r={};for(const t of Object.keys(e.headers)){r[t]=e.headers[t]}throw new d(s,r,e.data)}return e.data.data}))}function withDefaults(e,r){const t=e.defaults(r);const newApi=(e,r)=>graphql(t,e,r);return Object.assign(newApi,{defaults:withDefaults.bind(null,t),endpoint:t.endpoint})}var b=withDefaults(c.request,{headers:{"user-agent":`octokit-graphql.js/${p} ${(0,l.getUserAgent)()}`},method:"POST",url:"/graphql"});function withCustomRequest(e){return withDefaults(e,{method:"POST",url:"/graphql"})}0&&0},7858:(e,r,t)=>{var o=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var n=Object.getOwnPropertyNames;var i=Object.prototype.hasOwnProperty;var __export=(e,r)=>{for(var t in r)o(e,t,{get:r[t],enumerable:true})};var __copyProps=(e,r,t,a)=>{if(r&&typeof r==="object"||typeof r==="function"){for(let c of n(r))if(!i.call(e,c)&&c!==t)o(e,c,{get:()=>r[c],enumerable:!(a=s(r,c))||a.enumerable})}return e};var __toCommonJS=e=>__copyProps(o({},"__esModule",{value:true}),e);var a={};__export(a,{endpoint:()=>d});e.exports=__toCommonJS(a);var c=t(3843);var l="9.0.6";var p=`octokit-endpoint.js/${l} ${(0,c.getUserAgent)()}`;var u={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":p},mediaType:{format:""}};function lowercaseKeys(e){if(!e){return{}}return Object.keys(e).reduce(((r,t)=>{r[t.toLowerCase()]=e[t];return r}),{})}function isPlainObject(e){if(typeof e!=="object"||e===null)return false;if(Object.prototype.toString.call(e)!=="[object Object]")return false;const r=Object.getPrototypeOf(e);if(r===null)return true;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t==="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}function mergeDeep(e,r){const t=Object.assign({},e);Object.keys(r).forEach((o=>{if(isPlainObject(r[o])){if(!(o in e))Object.assign(t,{[o]:r[o]});else t[o]=mergeDeep(e[o],r[o])}else{Object.assign(t,{[o]:r[o]})}}));return t}function removeUndefinedProperties(e){for(const r in e){if(e[r]===void 0){delete e[r]}}return e}function merge(e,r,t){if(typeof r==="string"){let[e,o]=r.split(" ");t=Object.assign(o?{method:e,url:o}:{url:e},t)}else{t=Object.assign({},r)}t.headers=lowercaseKeys(t.headers);removeUndefinedProperties(t);removeUndefinedProperties(t.headers);const o=mergeDeep(e||{},t);if(t.url==="/graphql"){if(e&&e.mediaType.previews?.length){o.mediaType.previews=e.mediaType.previews.filter((e=>!o.mediaType.previews.includes(e))).concat(o.mediaType.previews)}o.mediaType.previews=(o.mediaType.previews||[]).map((e=>e.replace(/-preview/,"")))}return o}function addQueryParameters(e,r){const t=/\?/.test(e)?"&":"?";const o=Object.keys(r);if(o.length===0){return e}return e+t+o.map((e=>{if(e==="q"){return"q="+r.q.split("+").map(encodeURIComponent).join("+")}return`${e}=${encodeURIComponent(r[e])}`})).join("&")}var m=/\{[^{}}]+\}/g;function removeNonChars(e){return e.replace(/(?:^\W+)|(?:(?<!\W)\W+$)/g,"").split(/,/)}function extractUrlVariableNames(e){const r=e.match(m);if(!r){return[]}return r.map(removeNonChars).reduce(((e,r)=>e.concat(r)),[])}function omit(e,r){const t={__proto__:null};for(const o of Object.keys(e)){if(r.indexOf(o)===-1){t[o]=e[o]}}return t}function encodeReserved(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){if(!/%[0-9A-Fa-f]/.test(e)){e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")}return e})).join("")}function encodeUnreserved(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function encodeValue(e,r,t){r=e==="+"||e==="#"?encodeReserved(r):encodeUnreserved(r);if(t){return encodeUnreserved(t)+"="+r}else{return r}}function isDefined(e){return e!==void 0&&e!==null}function isKeyOperator(e){return e===";"||e==="&"||e==="?"}function getValues(e,r,t,o){var s=e[t],n=[];if(isDefined(s)&&s!==""){if(typeof s==="string"||typeof s==="number"||typeof s==="boolean"){s=s.toString();if(o&&o!=="*"){s=s.substring(0,parseInt(o,10))}n.push(encodeValue(r,s,isKeyOperator(r)?t:""))}else{if(o==="*"){if(Array.isArray(s)){s.filter(isDefined).forEach((function(e){n.push(encodeValue(r,e,isKeyOperator(r)?t:""))}))}else{Object.keys(s).forEach((function(e){if(isDefined(s[e])){n.push(encodeValue(r,s[e],e))}}))}}else{const e=[];if(Array.isArray(s)){s.filter(isDefined).forEach((function(t){e.push(encodeValue(r,t))}))}else{Object.keys(s).forEach((function(t){if(isDefined(s[t])){e.push(encodeUnreserved(t));e.push(encodeValue(r,s[t].toString()))}}))}if(isKeyOperator(r)){n.push(encodeUnreserved(t)+"="+e.join(","))}else if(e.length!==0){n.push(e.join(","))}}}}else{if(r===";"){if(isDefined(s)){n.push(encodeUnreserved(t))}}else if(s===""&&(r==="&"||r==="?")){n.push(encodeUnreserved(t)+"=")}else if(s===""){n.push("")}}return n}function parseUrl(e){return{expand:expand.bind(null,e)}}function expand(e,r){var t=["+","#",".","/",";","?","&"];e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,o,s){if(o){let e="";const s=[];if(t.indexOf(o.charAt(0))!==-1){e=o.charAt(0);o=o.substr(1)}o.split(/,/g).forEach((function(t){var o=/([^:\*]*)(?::(\d+)|(\*))?/.exec(t);s.push(getValues(r,e,o[1],o[2]||o[3]))}));if(e&&e!=="+"){var n=",";if(e==="?"){n="&"}else if(e!=="#"){n=e}return(s.length!==0?e:"")+s.join(n)}else{return s.join(",")}}else{return encodeReserved(s)}}));if(e==="/"){return e}else{return e.replace(/\/$/,"")}}function parse(e){let r=e.method.toUpperCase();let t=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}");let o=Object.assign({},e.headers);let s;let n=omit(e,["method","baseUrl","url","headers","request","mediaType"]);const i=extractUrlVariableNames(t);t=parseUrl(t).expand(n);if(!/^http/.test(t)){t=e.baseUrl+t}const a=Object.keys(e).filter((e=>i.includes(e))).concat("baseUrl");const c=omit(n,a);const l=/application\/octet-stream/i.test(o.accept);if(!l){if(e.mediaType.format){o.accept=o.accept.split(/,/).map((r=>r.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`))).join(",")}if(t.endsWith("/graphql")){if(e.mediaType.previews?.length){const r=o.accept.match(/(?<![\w-])[\w-]+(?=-preview)/g)||[];o.accept=r.concat(e.mediaType.previews).map((r=>{const t=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${r}-preview${t}`})).join(",")}}}if(["GET","HEAD"].includes(r)){t=addQueryParameters(t,c)}else{if("data"in c){s=c.data}else{if(Object.keys(c).length){s=c}}}if(!o["content-type"]&&typeof s!=="undefined"){o["content-type"]="application/json; charset=utf-8"}if(["PATCH","PUT"].includes(r)&&typeof s==="undefined"){s=""}return Object.assign({method:r,url:t,headers:o},typeof s!=="undefined"?{body:s}:null,e.request?{request:e.request}:null)}function endpointWithDefaults(e,r,t){return parse(merge(e,r,t))}function withDefaults(e,r){const t=merge(e,r);const o=endpointWithDefaults.bind(null,t);return Object.assign(o,{DEFAULTS:t,defaults:withDefaults.bind(null,t),merge:merge.bind(null,t),parse:parse})}var d=withDefaults(null,u);0&&0},4751:(e,r,t)=>{var o=Object.create;var s=Object.defineProperty;var n=Object.getOwnPropertyDescriptor;var i=Object.getOwnPropertyNames;var a=Object.getPrototypeOf;var c=Object.prototype.hasOwnProperty;var __export=(e,r)=>{for(var t in r)s(e,t,{get:r[t],enumerable:true})};var __copyProps=(e,r,t,o)=>{if(r&&typeof r==="object"||typeof r==="function"){for(let a of i(r))if(!c.call(e,a)&&a!==t)s(e,a,{get:()=>r[a],enumerable:!(o=n(r,a))||o.enumerable})}return e};var __toESM=(e,r,t)=>(t=e!=null?o(a(e)):{},__copyProps(r||!e||!e.__esModule?s(t,"default",{value:e,enumerable:true}):t,e));var __toCommonJS=e=>__copyProps(s({},"__esModule",{value:true}),e);var l={};__export(l,{RequestError:()=>g});e.exports=__toCommonJS(l);var p=t(4150);var u=__toESM(t(5560));var m=(0,u.default)((e=>console.warn(e)));var d=(0,u.default)((e=>console.warn(e)));var g=class extends Error{constructor(e,r,t){super(e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="HttpError";this.status=r;let o;if("headers"in t&&typeof t.headers!=="undefined"){o=t.headers}if("response"in t){this.response=t.response;o=t.response.headers}const s=Object.assign({},t.request);if(t.request.headers.authorization){s.headers=Object.assign({},t.request.headers,{authorization:t.request.headers.authorization.replace(/(?<! ) .*$/," [REDACTED]")})}s.url=s.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]");this.request=s;Object.defineProperty(this,"code",{get(){m(new p.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));return r}});Object.defineProperty(this,"headers",{get(){d(new p.Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`."));return o||{}}})}};0&&0},2804:(e,r,t)=>{var o=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var n=Object.getOwnPropertyNames;var i=Object.prototype.hasOwnProperty;var __export=(e,r)=>{for(var t in r)o(e,t,{get:r[t],enumerable:true})};var __copyProps=(e,r,t,a)=>{if(r&&typeof r==="object"||typeof r==="function"){for(let c of n(r))if(!i.call(e,c)&&c!==t)o(e,c,{get:()=>r[c],enumerable:!(a=s(r,c))||a.enumerable})}return e};var __toCommonJS=e=>__copyProps(o({},"__esModule",{value:true}),e);var a={};__export(a,{request:()=>m});e.exports=__toCommonJS(a);var c=t(7858);var l=t(3843);var p="8.4.1";function isPlainObject(e){if(typeof e!=="object"||e===null)return false;if(Object.prototype.toString.call(e)!=="[object Object]")return false;const r=Object.getPrototypeOf(e);if(r===null)return true;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t==="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}var u=t(4751);function getBufferResponse(e){return e.arrayBuffer()}function fetchWrapper(e){var r,t,o,s;const n=e.request&&e.request.log?e.request.log:console;const i=((r=e.request)==null?void 0:r.parseSuccessResponseBody)!==false;if(isPlainObject(e.body)||Array.isArray(e.body)){e.body=JSON.stringify(e.body)}let a={};let c;let l;let{fetch:p}=globalThis;if((t=e.request)==null?void 0:t.fetch){p=e.request.fetch}if(!p){throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing")}return p(e.url,{method:e.method,body:e.body,redirect:(o=e.request)==null?void 0:o.redirect,headers:e.headers,signal:(s=e.request)==null?void 0:s.signal,...e.body&&{duplex:"half"}}).then((async r=>{l=r.url;c=r.status;for(const e of r.headers){a[e[0]]=e[1]}if("deprecation"in a){const r=a.link&&a.link.match(/<([^<>]+)>; rel="deprecation"/);const t=r&&r.pop();n.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${a.sunset}${t?`. See ${t}`:""}`)}if(c===204||c===205){return}if(e.method==="HEAD"){if(c<400){return}throw new u.RequestError(r.statusText,c,{response:{url:l,status:c,headers:a,data:void 0},request:e})}if(c===304){throw new u.RequestError("Not modified",c,{response:{url:l,status:c,headers:a,data:await getResponseData(r)},request:e})}if(c>=400){const t=await getResponseData(r);const o=new u.RequestError(toErrorMessage(t),c,{response:{url:l,status:c,headers:a,data:t},request:e});throw o}return i?await getResponseData(r):r.body})).then((e=>({status:c,url:l,headers:a,data:e}))).catch((r=>{if(r instanceof u.RequestError)throw r;else if(r.name==="AbortError")throw r;let t=r.message;if(r.name==="TypeError"&&"cause"in r){if(r.cause instanceof Error){t=r.cause.message}else if(typeof r.cause==="string"){t=r.cause}}throw new u.RequestError(t,500,{request:e})}))}async function getResponseData(e){const r=e.headers.get("content-type");if(/application\/json/.test(r)){return e.json().catch((()=>e.text())).catch((()=>""))}if(!r||/^text\/|charset=utf-8$/.test(r)){return e.text()}return getBufferResponse(e)}function toErrorMessage(e){if(typeof e==="string")return e;let r;if("documentation_url"in e){r=` - ${e.documentation_url}`}else{r=""}if("message"in e){if(Array.isArray(e.errors)){return`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}${r}`}return`${e.message}${r}`}return`Unknown error: ${JSON.stringify(e)}`}function withDefaults(e,r){const t=e.defaults(r);const newApi=function(e,r){const o=t.merge(e,r);if(!o.request||!o.request.hook){return fetchWrapper(t.parse(o))}const request2=(e,r)=>fetchWrapper(t.parse(t.merge(e,r)));Object.assign(request2,{endpoint:t,defaults:withDefaults.bind(null,t)});return o.request.hook(request2,o)};return Object.assign(newApi,{endpoint:t,defaults:withDefaults.bind(null,t)})}var m=withDefaults(c.endpoint,{headers:{"user-agent":`octokit-request.js/${p} ${(0,l.getUserAgent)()}`}});0&&0},8082:e=>{var r=Object.defineProperty;var t=Object.getOwnPropertyDescriptor;var o=Object.getOwnPropertyNames;var s=Object.prototype.hasOwnProperty;var __export=(e,t)=>{for(var o in t)r(e,o,{get:t[o],enumerable:true})};var __copyProps=(e,n,i,a)=>{if(n&&typeof n==="object"||typeof n==="function"){for(let c of o(n))if(!s.call(e,c)&&c!==i)r(e,c,{get:()=>n[c],enumerable:!(a=t(n,c))||a.enumerable})}return e};var __toCommonJS=e=>__copyProps(r({},"__esModule",{value:true}),e);var n={};__export(n,{composePaginateRest:()=>a,isPaginatingEndpoint:()=>isPaginatingEndpoint,paginateRest:()=>paginateRest,paginatingEndpoints:()=>c});e.exports=__toCommonJS(n);var i="11.4.4-cjs.2";function normalizePaginatedListResponse(e){if(!e.data){return{...e,data:[]}}const r="total_count"in e.data&&!("url"in e.data);if(!r)return e;const t=e.data.incomplete_results;const o=e.data.repository_selection;const s=e.data.total_count;delete e.data.incomplete_results;delete e.data.repository_selection;delete e.data.total_count;const n=Object.keys(e.data)[0];const i=e.data[n];e.data=i;if(typeof t!=="undefined"){e.data.incomplete_results=t}if(typeof o!=="undefined"){e.data.repository_selection=o}e.data.total_count=s;return e}function iterator(e,r,t){const o=typeof r==="function"?r.endpoint(t):e.request.endpoint(r,t);const s=typeof r==="function"?r:e.request;const n=o.method;const i=o.headers;let a=o.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:true};try{const e=await s({method:n,url:a,headers:i});const r=normalizePaginatedListResponse(e);a=((r.headers.link||"").match(/<([^<>]+)>;\s*rel="next"/)||[])[1];return{value:r}}catch(e){if(e.status!==409)throw e;a="";return{value:{status:200,headers:{},data:[]}}}}})}}function paginate(e,r,t,o){if(typeof t==="function"){o=t;t=void 0}return gather(e,[],iterator(e,r,t)[Symbol.asyncIterator](),o)}function gather(e,r,t,o){return t.next().then((s=>{if(s.done){return r}let n=false;function done(){n=true}r=r.concat(o?o(s.value,done):s.value.data);if(n){return r}return gather(e,r,t,o)}))}var a=Object.assign(paginate,{iterator:iterator});var c=["GET /advisories","GET /app/hook/deliveries","GET /app/installation-requests","GET /app/installations","GET /assignments/{assignment_id}/accepted_assignments","GET /classrooms","GET /classrooms/{classroom_id}/assignments","GET /enterprises/{enterprise}/code-security/configurations","GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories","GET /enterprises/{enterprise}/dependabot/alerts","GET /enterprises/{enterprise}/secret-scanning/alerts","GET /events","GET /gists","GET /gists/public","GET /gists/starred","GET /gists/{gist_id}/comments","GET /gists/{gist_id}/commits","GET /gists/{gist_id}/forks","GET /installation/repositories","GET /issues","GET /licenses","GET /marketplace_listing/plans","GET /marketplace_listing/plans/{plan_id}/accounts","GET /marketplace_listing/stubbed/plans","GET /marketplace_listing/stubbed/plans/{plan_id}/accounts","GET /networks/{owner}/{repo}/events","GET /notifications","GET /organizations","GET /orgs/{org}/actions/cache/usage-by-repository","GET /orgs/{org}/actions/permissions/repositories","GET /orgs/{org}/actions/runner-groups","GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories","GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners","GET /orgs/{org}/actions/runners","GET /orgs/{org}/actions/secrets","GET /orgs/{org}/actions/secrets/{secret_name}/repositories","GET /orgs/{org}/actions/variables","GET /orgs/{org}/actions/variables/{name}/repositories","GET /orgs/{org}/attestations/{subject_digest}","GET /orgs/{org}/blocks","GET /orgs/{org}/code-scanning/alerts","GET /orgs/{org}/code-security/configurations","GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories","GET /orgs/{org}/codespaces","GET /orgs/{org}/codespaces/secrets","GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories","GET /orgs/{org}/copilot/billing/seats","GET /orgs/{org}/copilot/metrics","GET /orgs/{org}/copilot/usage","GET /orgs/{org}/dependabot/alerts","GET /orgs/{org}/dependabot/secrets","GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories","GET /orgs/{org}/events","GET /orgs/{org}/failed_invitations","GET /orgs/{org}/hooks","GET /orgs/{org}/hooks/{hook_id}/deliveries","GET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}","GET /orgs/{org}/insights/api/subject-stats","GET /orgs/{org}/insights/api/user-stats/{user_id}","GET /orgs/{org}/installations","GET /orgs/{org}/invitations","GET /orgs/{org}/invitations/{invitation_id}/teams","GET /orgs/{org}/issues","GET /orgs/{org}/members","GET /orgs/{org}/members/{username}/codespaces","GET /orgs/{org}/migrations","GET /orgs/{org}/migrations/{migration_id}/repositories","GET /orgs/{org}/organization-roles/{role_id}/teams","GET /orgs/{org}/organization-roles/{role_id}/users","GET /orgs/{org}/outside_collaborators","GET /orgs/{org}/packages","GET /orgs/{org}/packages/{package_type}/{package_name}/versions","GET /orgs/{org}/personal-access-token-requests","GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories","GET /orgs/{org}/personal-access-tokens","GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories","GET /orgs/{org}/private-registries","GET /orgs/{org}/projects","GET /orgs/{org}/properties/values","GET /orgs/{org}/public_members","GET /orgs/{org}/repos","GET /orgs/{org}/rulesets","GET /orgs/{org}/rulesets/rule-suites","GET /orgs/{org}/secret-scanning/alerts","GET /orgs/{org}/security-advisories","GET /orgs/{org}/team/{team_slug}/copilot/metrics","GET /orgs/{org}/team/{team_slug}/copilot/usage","GET /orgs/{org}/teams","GET /orgs/{org}/teams/{team_slug}/discussions","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions","GET /orgs/{org}/teams/{team_slug}/invitations","GET /orgs/{org}/teams/{team_slug}/members","GET /orgs/{org}/teams/{team_slug}/projects","GET /orgs/{org}/teams/{team_slug}/repos","GET /orgs/{org}/teams/{team_slug}/teams","GET /projects/columns/{column_id}/cards","GET /projects/{project_id}/collaborators","GET /projects/{project_id}/columns","GET /repos/{owner}/{repo}/actions/artifacts","GET /repos/{owner}/{repo}/actions/caches","GET /repos/{owner}/{repo}/actions/organization-secrets","GET /repos/{owner}/{repo}/actions/organization-variables","GET /repos/{owner}/{repo}/actions/runners","GET /repos/{owner}/{repo}/actions/runs","GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts","GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs","GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs","GET /repos/{owner}/{repo}/actions/secrets","GET /repos/{owner}/{repo}/actions/variables","GET /repos/{owner}/{repo}/actions/workflows","GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs","GET /repos/{owner}/{repo}/activity","GET /repos/{owner}/{repo}/assignees","GET /repos/{owner}/{repo}/attestations/{subject_digest}","GET /repos/{owner}/{repo}/branches","GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations","GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs","GET /repos/{owner}/{repo}/code-scanning/alerts","GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances","GET /repos/{owner}/{repo}/code-scanning/analyses","GET /repos/{owner}/{repo}/codespaces","GET /repos/{owner}/{repo}/codespaces/devcontainers","GET /repos/{owner}/{repo}/codespaces/secrets","GET /repos/{owner}/{repo}/collaborators","GET /repos/{owner}/{repo}/comments","GET /repos/{owner}/{repo}/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/commits","GET /repos/{owner}/{repo}/commits/{commit_sha}/comments","GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls","GET /repos/{owner}/{repo}/commits/{ref}/check-runs","GET /repos/{owner}/{repo}/commits/{ref}/check-suites","GET /repos/{owner}/{repo}/commits/{ref}/status","GET /repos/{owner}/{repo}/commits/{ref}/statuses","GET /repos/{owner}/{repo}/contributors","GET /repos/{owner}/{repo}/dependabot/alerts","GET /repos/{owner}/{repo}/dependabot/secrets","GET /repos/{owner}/{repo}/deployments","GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses","GET /repos/{owner}/{repo}/environments","GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies","GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps","GET /repos/{owner}/{repo}/environments/{environment_name}/secrets","GET /repos/{owner}/{repo}/environments/{environment_name}/variables","GET /repos/{owner}/{repo}/events","GET /repos/{owner}/{repo}/forks","GET /repos/{owner}/{repo}/hooks","GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries","GET /repos/{owner}/{repo}/invitations","GET /repos/{owner}/{repo}/issues","GET /repos/{owner}/{repo}/issues/comments","GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/issues/events","GET /repos/{owner}/{repo}/issues/{issue_number}/comments","GET /repos/{owner}/{repo}/issues/{issue_number}/events","GET /repos/{owner}/{repo}/issues/{issue_number}/labels","GET /repos/{owner}/{repo}/issues/{issue_number}/reactions","GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues","GET /repos/{owner}/{repo}/issues/{issue_number}/timeline","GET /repos/{owner}/{repo}/keys","GET /repos/{owner}/{repo}/labels","GET /repos/{owner}/{repo}/milestones","GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels","GET /repos/{owner}/{repo}/notifications","GET /repos/{owner}/{repo}/pages/builds","GET /repos/{owner}/{repo}/projects","GET /repos/{owner}/{repo}/pulls","GET /repos/{owner}/{repo}/pulls/comments","GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/pulls/{pull_number}/comments","GET /repos/{owner}/{repo}/pulls/{pull_number}/commits","GET /repos/{owner}/{repo}/pulls/{pull_number}/files","GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews","GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments","GET /repos/{owner}/{repo}/releases","GET /repos/{owner}/{repo}/releases/{release_id}/assets","GET /repos/{owner}/{repo}/releases/{release_id}/reactions","GET /repos/{owner}/{repo}/rules/branches/{branch}","GET /repos/{owner}/{repo}/rulesets","GET /repos/{owner}/{repo}/rulesets/rule-suites","GET /repos/{owner}/{repo}/secret-scanning/alerts","GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations","GET /repos/{owner}/{repo}/security-advisories","GET /repos/{owner}/{repo}/stargazers","GET /repos/{owner}/{repo}/subscribers","GET /repos/{owner}/{repo}/tags","GET /repos/{owner}/{repo}/teams","GET /repos/{owner}/{repo}/topics","GET /repositories","GET /search/code","GET /search/commits","GET /search/issues","GET /search/labels","GET /search/repositories","GET /search/topics","GET /search/users","GET /teams/{team_id}/discussions","GET /teams/{team_id}/discussions/{discussion_number}/comments","GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions","GET /teams/{team_id}/discussions/{discussion_number}/reactions","GET /teams/{team_id}/invitations","GET /teams/{team_id}/members","GET /teams/{team_id}/projects","GET /teams/{team_id}/repos","GET /teams/{team_id}/teams","GET /user/blocks","GET /user/codespaces","GET /user/codespaces/secrets","GET /user/emails","GET /user/followers","GET /user/following","GET /user/gpg_keys","GET /user/installations","GET /user/installations/{installation_id}/repositories","GET /user/issues","GET /user/keys","GET /user/marketplace_purchases","GET /user/marketplace_purchases/stubbed","GET /user/memberships/orgs","GET /user/migrations","GET /user/migrations/{migration_id}/repositories","GET /user/orgs","GET /user/packages","GET /user/packages/{package_type}/{package_name}/versions","GET /user/public_emails","GET /user/repos","GET /user/repository_invitations","GET /user/social_accounts","GET /user/ssh_signing_keys","GET /user/starred","GET /user/subscriptions","GET /user/teams","GET /users","GET /users/{username}/attestations/{subject_digest}","GET /users/{username}/events","GET /users/{username}/events/orgs/{org}","GET /users/{username}/events/public","GET /users/{username}/followers","GET /users/{username}/following","GET /users/{username}/gists","GET /users/{username}/gpg_keys","GET /users/{username}/keys","GET /users/{username}/orgs","GET /users/{username}/packages","GET /users/{username}/projects","GET /users/{username}/received_events","GET /users/{username}/received_events/public","GET /users/{username}/repos","GET /users/{username}/social_accounts","GET /users/{username}/ssh_signing_keys","GET /users/{username}/starred","GET /users/{username}/subscriptions"];function isPaginatingEndpoint(e){if(typeof e==="string"){return c.includes(e)}else{return false}}function paginateRest(e){return{paginate:Object.assign(paginate.bind(null,e),{iterator:iterator.bind(null,e)})}}paginateRest.VERSION=i;0&&0},6966:e=>{var r=Object.defineProperty;var t=Object.getOwnPropertyDescriptor;var o=Object.getOwnPropertyNames;var s=Object.prototype.hasOwnProperty;var __export=(e,t)=>{for(var o in t)r(e,o,{get:t[o],enumerable:true})};var __copyProps=(e,n,i,a)=>{if(n&&typeof n==="object"||typeof n==="function"){for(let c of o(n))if(!s.call(e,c)&&c!==i)r(e,c,{get:()=>n[c],enumerable:!(a=t(n,c))||a.enumerable})}return e};var __toCommonJS=e=>__copyProps(r({},"__esModule",{value:true}),e);var n={};__export(n,{requestLog:()=>requestLog});e.exports=__toCommonJS(n);var i="4.0.1";function requestLog(e){e.hook.wrap("request",((r,t)=>{e.log.debug("request",t);const o=Date.now();const s=e.request.endpoint.parse(t);const n=s.url.replace(t.baseUrl,"");return r(t).then((r=>{e.log.info(`${s.method} ${n} - ${r.status} in ${Date.now()-o}ms`);return r})).catch((r=>{e.log.info(`${s.method} ${n} - ${r.status} in ${Date.now()-o}ms`);throw r}))}))}requestLog.VERSION=i;0&&0},4935:e=>{var r=Object.defineProperty;var t=Object.getOwnPropertyDescriptor;var o=Object.getOwnPropertyNames;var s=Object.prototype.hasOwnProperty;var __export=(e,t)=>{for(var o in t)r(e,o,{get:t[o],enumerable:true})};var __copyProps=(e,n,i,a)=>{if(n&&typeof n==="object"||typeof n==="function"){for(let c of o(n))if(!s.call(e,c)&&c!==i)r(e,c,{get:()=>n[c],enumerable:!(a=t(n,c))||a.enumerable})}return e};var __toCommonJS=e=>__copyProps(r({},"__esModule",{value:true}),e);var n={};__export(n,{legacyRestEndpointMethods:()=>legacyRestEndpointMethods,restEndpointMethods:()=>restEndpointMethods});e.exports=__toCommonJS(n);var i="13.3.2-cjs.1";var a={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addRepoAccessToSelfHostedRunnerGroupInOrg:["PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubBillingUsageReportOrg:["GET /organizations/{org}/settings/billing/usage"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{commitAutofix:["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commits"],createAutofix:["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],createVariantAnalysis:["POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses"],deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],deleteCodeqlDatabase:["DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getAutofix:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],getVariantAnalysis:["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}"],getVariantAnalysisRepoTask:["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codeSecurity:{attachConfiguration:["POST /orgs/{org}/code-security/configurations/{configuration_id}/attach"],attachEnterpriseConfiguration:["POST /enterprises/{enterprise}/code-security/configurations/{configuration_id}/attach"],createConfiguration:["POST /orgs/{org}/code-security/configurations"],createConfigurationForEnterprise:["POST /enterprises/{enterprise}/code-security/configurations"],deleteConfiguration:["DELETE /orgs/{org}/code-security/configurations/{configuration_id}"],deleteConfigurationForEnterprise:["DELETE /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],detachConfiguration:["DELETE /orgs/{org}/code-security/configurations/detach"],getConfiguration:["GET /orgs/{org}/code-security/configurations/{configuration_id}"],getConfigurationForRepository:["GET /repos/{owner}/{repo}/code-security-configuration"],getConfigurationsForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations"],getConfigurationsForOrg:["GET /orgs/{org}/code-security/configurations"],getDefaultConfigurations:["GET /orgs/{org}/code-security/configurations/defaults"],getDefaultConfigurationsForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations/defaults"],getRepositoriesForConfiguration:["GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories"],getRepositoriesForEnterpriseConfiguration:["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories"],getSingleConfigurationForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],setConfigurationAsDefault:["PUT /orgs/{org}/code-security/configurations/{configuration_id}/defaults"],setConfigurationAsDefaultForEnterprise:["PUT /enterprises/{enterprise}/code-security/configurations/{configuration_id}/defaults"],updateConfiguration:["PATCH /orgs/{org}/code-security/configurations/{configuration_id}"],updateEnterpriseConfiguration:["PATCH /enterprises/{enterprise}/code-security/configurations/{configuration_id}"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],copilotMetricsForOrganization:["GET /orgs/{org}/copilot/metrics"],copilotMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/metrics"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"],usageMetricsForOrg:["GET /orgs/{org}/copilot/usage"],usageMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/usage"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],addSubIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],listSubIssues:["GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],removeSubIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issue"],reprioritizeSubIssue:["PATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}",{},{deprecated:"octokit.rest.orgs.addSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#add-a-security-manager-team"}],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}",{},{deprecated:"octokit.rest.orgs.enableOrDisableSecurityProductOnAllOrgRepos() is deprecated, see https://docs.github.com/rest/orgs/orgs#enable-or-disable-a-security-feature-for-an-organization"}],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listAttestations:["GET /orgs/{org}/attestations/{subject_digest}"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers",{},{deprecated:"octokit.rest.orgs.listSecurityManagerTeams() is deprecated, see https://docs.github.com/rest/orgs/security-managers#list-security-manager-teams"}],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}",{},{deprecated:"octokit.rest.orgs.removeSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#remove-a-security-manager-team"}],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},privateRegistries:{createOrgPrivateRegistry:["POST /orgs/{org}/private-registries"],deleteOrgPrivateRegistry:["DELETE /orgs/{org}/private-registries/{secret_name}"],getOrgPrivateRegistry:["GET /orgs/{org}/private-registries/{secret_name}"],getOrgPublicKey:["GET /orgs/{org}/private-registries/public-key"],listOrgPrivateRegistries:["GET /orgs/{org}/private-registries"],updateOrgPrivateRegistry:["PATCH /orgs/{org}/private-registries/{secret_name}"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAttestation:["POST /repos/{owner}/{repo}/attestations"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAttestations:["GET /repos/{owner}/{repo}/attestations/{subject_digest}"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{createPushProtectionBypass:["POST /repos/{owner}/{repo}/secret-scanning/push-protection-bypasses"],getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],getScanHistory:["GET /repos/{owner}/{repo}/secret-scanning/scan-history"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getById:["GET /user/{account_id}"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listAttestations:["GET /users/{username}/attestations/{subject_digest}"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};var c=a;var l=new Map;for(const[e,r]of Object.entries(c)){for(const[t,o]of Object.entries(r)){const[r,s,n]=o;const[i,a]=r.split(/ /);const c=Object.assign({method:i,url:a},s);if(!l.has(e)){l.set(e,new Map)}l.get(e).set(t,{scope:e,methodName:t,endpointDefaults:c,decorations:n})}}var p={has({scope:e},r){return l.get(e).has(r)},getOwnPropertyDescriptor(e,r){return{value:this.get(e,r),configurable:true,writable:true,enumerable:true}},defineProperty(e,r,t){Object.defineProperty(e.cache,r,t);return true},deleteProperty(e,r){delete e.cache[r];return true},ownKeys({scope:e}){return[...l.get(e).keys()]},set(e,r,t){return e.cache[r]=t},get({octokit:e,scope:r,cache:t},o){if(t[o]){return t[o]}const s=l.get(r).get(o);if(!s){return void 0}const{endpointDefaults:n,decorations:i}=s;if(i){t[o]=decorate(e,r,o,n,i)}else{t[o]=e.request.defaults(n)}return t[o]}};function endpointsToMethods(e){const r={};for(const t of l.keys()){r[t]=new Proxy({octokit:e,scope:t,cache:{}},p)}return r}function decorate(e,r,t,o,s){const n=e.request.defaults(o);function withDecorations(...o){let i=n.endpoint.merge(...o);if(s.mapToData){i=Object.assign({},i,{data:i[s.mapToData],[s.mapToData]:void 0});return n(i)}if(s.renamed){const[o,n]=s.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${o}.${n}()`)}if(s.deprecated){e.log.warn(s.deprecated)}if(s.renamedParameters){const i=n.endpoint.merge(...o);for(const[o,n]of Object.entries(s.renamedParameters)){if(o in i){e.log.warn(`"${o}" parameter is deprecated for "octokit.${r}.${t}()". Use "${n}" instead`);if(!(n in i)){i[n]=i[o]}delete i[o]}}return n(i)}return n(...o)}return Object.assign(withDecorations,n)}function restEndpointMethods(e){const r=endpointsToMethods(e);return{rest:r}}restEndpointMethods.VERSION=i;function legacyRestEndpointMethods(e){const r=endpointsToMethods(e);return{...r,rest:r}}legacyRestEndpointMethods.VERSION=i;0&&0},5772:(e,r,t)=>{var o=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var n=Object.getOwnPropertyNames;var i=Object.prototype.hasOwnProperty;var __export=(e,r)=>{for(var t in r)o(e,t,{get:r[t],enumerable:true})};var __copyProps=(e,r,t,a)=>{if(r&&typeof r==="object"||typeof r==="function"){for(let c of n(r))if(!i.call(e,c)&&c!==t)o(e,c,{get:()=>r[c],enumerable:!(a=s(r,c))||a.enumerable})}return e};var __toCommonJS=e=>__copyProps(o({},"__esModule",{value:true}),e);var a={};__export(a,{Octokit:()=>d});e.exports=__toCommonJS(a);var c=t(1897);var l=t(6966);var p=t(8082);var u=t(4935);var m="20.1.2";var d=c.Octokit.plugin(l.requestLog,u.legacyRestEndpointMethods,p.paginateRest).defaults({userAgent:`octokit-rest.js/${m}`});0&&0},2732:(e,r,t)=>{var o=t(1063);var s=t(2027);var n=t(9934);var i=Function.bind;var a=i.bind(i);function bindApi(e,r,t){var o=a(n,null).apply(null,t?[r,t]:[r]);e.api={remove:o};e.remove=o;["before","error","after","wrap"].forEach((function(o){var n=t?[r,o,t]:[r,o];e[o]=e.api[o]=a(s,null).apply(null,n)}))}function HookSingular(){var e="h";var r={registry:{}};var t=o.bind(null,r,e);bindApi(t,r,e);return t}function HookCollection(){var e={registry:{}};var r=o.bind(null,e);bindApi(r,e);return r}var c=false;function Hook(){if(!c){console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4');c=true}return HookCollection()}Hook.Singular=HookSingular.bind();Hook.Collection=HookCollection.bind();e.exports=Hook;e.exports.Hook=Hook;e.exports.Singular=Hook.Singular;e.exports.Collection=Hook.Collection},2027:e=>{e.exports=addHook;function addHook(e,r,t,o){var s=o;if(!e.registry[t]){e.registry[t]=[]}if(r==="before"){o=function(e,r){return Promise.resolve().then(s.bind(null,r)).then(e.bind(null,r))}}if(r==="after"){o=function(e,r){var t;return Promise.resolve().then(e.bind(null,r)).then((function(e){t=e;return s(t,r)})).then((function(){return t}))}}if(r==="error"){o=function(e,r){return Promise.resolve().then(e.bind(null,r)).catch((function(e){return s(e,r)}))}}e.registry[t].push({hook:o,orig:s})}},1063:e=>{e.exports=register;function register(e,r,t,o){if(typeof t!=="function"){throw new Error("method for before hook must be a function")}if(!o){o={}}if(Array.isArray(r)){return r.reverse().reduce((function(r,t){return register.bind(null,e,t,r,o)}),t)()}return Promise.resolve().then((function(){if(!e.registry[r]){return t(o)}return e.registry[r].reduce((function(e,r){return r.hook.bind(null,e,o)}),t)()}))}},9934:e=>{e.exports=removeHook;function removeHook(e,r,t){if(!e.registry[r]){return}var o=e.registry[r].map((function(e){return e.orig})).indexOf(t);if(o===-1){return}e.registry[r].splice(o,1)}},9732:(e,r,t)=>{var o=t(181).Buffer;var s=t(181).SlowBuffer;e.exports=bufferEq;function bufferEq(e,r){if(!o.isBuffer(e)||!o.isBuffer(r)){return false}if(e.length!==r.length){return false}var t=0;for(var s=0;s<e.length;s++){t|=e[s]^r[s]}return t===0}bufferEq.install=function(){o.prototype.equal=s.prototype.equal=function equal(e){return bufferEq(this,e)}};var n=o.prototype.equal;var i=s.prototype.equal;bufferEq.restore=function(){o.prototype.equal=n;s.prototype.equal=i}},4150:(e,r)=>{Object.defineProperty(r,"__esModule",{value:true});class Deprecation extends Error{constructor(e){super(e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="Deprecation"}}r.Deprecation=Deprecation},8889:(e,r,t)=>{const o=t(9896);const s=t(6928);const n=t(857);const i=t(6982);const a=t(56);const c=a.version;const l=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function parse(e){const r={};let t=e.toString();t=t.replace(/\r\n?/gm,"\n");let o;while((o=l.exec(t))!=null){const e=o[1];let t=o[2]||"";t=t.trim();const s=t[0];t=t.replace(/^(['"`])([\s\S]*)\1$/gm,"$2");if(s==='"'){t=t.replace(/\\n/g,"\n");t=t.replace(/\\r/g,"\r")}r[e]=t}return r}function _parseVault(e){e=e||{};const r=_vaultPath(e);e.path=r;const t=p.configDotenv(e);if(!t.parsed){const e=new Error(`MISSING_DATA: Cannot parse ${r} for an unknown reason`);e.code="MISSING_DATA";throw e}const o=_dotenvKey(e).split(",");const s=o.length;let n;for(let e=0;e<s;e++){try{const r=o[e].trim();const s=_instructions(t,r);n=p.decrypt(s.ciphertext,s.key);break}catch(r){if(e+1>=s){throw r}}}return p.parse(n)}function _warn(e){console.log(`[dotenv@${c}][WARN] ${e}`)}function _debug(e){console.log(`[dotenv@${c}][DEBUG] ${e}`)}function _log(e){console.log(`[dotenv@${c}] ${e}`)}function _dotenvKey(e){if(e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0){return e.DOTENV_KEY}if(process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0){return process.env.DOTENV_KEY}return""}function _instructions(e,r){let t;try{t=new URL(r)}catch(e){if(e.code==="ERR_INVALID_URL"){const e=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");e.code="INVALID_DOTENV_KEY";throw e}throw e}const o=t.password;if(!o){const e=new Error("INVALID_DOTENV_KEY: Missing key part");e.code="INVALID_DOTENV_KEY";throw e}const s=t.searchParams.get("environment");if(!s){const e=new Error("INVALID_DOTENV_KEY: Missing environment part");e.code="INVALID_DOTENV_KEY";throw e}const n=`DOTENV_VAULT_${s.toUpperCase()}`;const i=e.parsed[n];if(!i){const e=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${n} in your .env.vault file.`);e.code="NOT_FOUND_DOTENV_ENVIRONMENT";throw e}return{ciphertext:i,key:o}}function _vaultPath(e){let r=null;if(e&&e.path&&e.path.length>0){if(Array.isArray(e.path)){for(const t of e.path){if(o.existsSync(t)){r=t.endsWith(".vault")?t:`${t}.vault`}}}else{r=e.path.endsWith(".vault")?e.path:`${e.path}.vault`}}else{r=s.resolve(process.cwd(),".env.vault")}if(o.existsSync(r)){return r}return null}function _resolveHome(e){return e[0]==="~"?s.join(n.homedir(),e.slice(1)):e}function _configVault(e){const r=Boolean(e&&e.debug);const t=e&&"quiet"in e?e.quiet:true;if(r||!t){_log("Loading env from encrypted .env.vault")}const o=p._parseVault(e);let s=process.env;if(e&&e.processEnv!=null){s=e.processEnv}p.populate(s,o,e);return{parsed:o}}function configDotenv(e){const r=s.resolve(process.cwd(),".env");let t="utf8";const n=Boolean(e&&e.debug);const i=e&&"quiet"in e?e.quiet:true;if(e&&e.encoding){t=e.encoding}else{if(n){_debug("No encoding is specified. UTF-8 is used by default")}}let a=[r];if(e&&e.path){if(!Array.isArray(e.path)){a=[_resolveHome(e.path)]}else{a=[];for(const r of e.path){a.push(_resolveHome(r))}}}let c;const l={};for(const r of a){try{const s=p.parse(o.readFileSync(r,{encoding:t}));p.populate(l,s,e)}catch(e){if(n){_debug(`Failed to load ${r} ${e.message}`)}c=e}}let u=process.env;if(e&&e.processEnv!=null){u=e.processEnv}p.populate(u,l,e);if(n||!i){const e=Object.keys(l).length;const r=[];for(const e of a){try{const t=s.relative(process.cwd(),e);r.push(t)}catch(r){if(n){_debug(`Failed to load ${e} ${r.message}`)}c=r}}_log(`injecting env (${e}) from ${r.join(",")}`)}if(c){return{parsed:l,error:c}}else{return{parsed:l}}}function config(e){if(_dotenvKey(e).length===0){return p.configDotenv(e)}const r=_vaultPath(e);if(!r){_warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${r}. Did you forget to build it?`);return p.configDotenv(e)}return p._configVault(e)}function decrypt(e,r){const t=Buffer.from(r.slice(-64),"hex");let o=Buffer.from(e,"base64");const s=o.subarray(0,12);const n=o.subarray(-16);o=o.subarray(12,-16);try{const e=i.createDecipheriv("aes-256-gcm",t,s);e.setAuthTag(n);return`${e.update(o)}${e.final()}`}catch(e){const r=e instanceof RangeError;const t=e.message==="Invalid key length";const o=e.message==="Unsupported state or unable to authenticate data";if(r||t){const e=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");e.code="INVALID_DOTENV_KEY";throw e}else if(o){const e=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");e.code="DECRYPTION_FAILED";throw e}else{throw e}}}function populate(e,r,t={}){const o=Boolean(t&&t.debug);const s=Boolean(t&&t.override);if(typeof r!=="object"){const e=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");e.code="OBJECT_REQUIRED";throw e}for(const t of Object.keys(r)){if(Object.prototype.hasOwnProperty.call(e,t)){if(s===true){e[t]=r[t]}if(o){if(s===true){_debug(`"${t}" is already defined and WAS overwritten`)}else{_debug(`"${t}" is already defined and was NOT overwritten`)}}}else{e[t]=r[t]}}}const p={configDotenv:configDotenv,_configVault:_configVault,_parseVault:_parseVault,config:config,decrypt:decrypt,parse:parse,populate:populate};e.exports.configDotenv=p.configDotenv;e.exports._configVault=p._configVault;e.exports._parseVault=p._parseVault;e.exports.config=p.config;e.exports.decrypt=p.decrypt;e.exports.parse=p.parse;e.exports.populate=p.populate;e.exports=p},325:(e,r,t)=>{var o=t(3058).Buffer;var s=t(5028);var n=128,i=0,a=32,c=16,l=2,p=c|a|i<<6,u=l|i<<6;function base64Url(e){return e.replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function signatureAsBuffer(e){if(o.isBuffer(e)){return e}else if("string"===typeof e){return o.from(e,"base64")}throw new TypeError("ECDSA signature must be a Base64 string or a Buffer")}function derToJose(e,r){e=signatureAsBuffer(e);var t=s(r);var i=t+1;var a=e.length;var c=0;if(e[c++]!==p){throw new Error('Could not find expected "seq"')}var l=e[c++];if(l===(n|1)){l=e[c++]}if(a-c<l){throw new Error('"seq" specified length of "'+l+'", only "'+(a-c)+'" remaining')}if(e[c++]!==u){throw new Error('Could not find expected "int" for "r"')}var m=e[c++];if(a-c-2<m){throw new Error('"r" specified length of "'+m+'", only "'+(a-c-2)+'" available')}if(i<m){throw new Error('"r" specified length of "'+m+'", max of "'+i+'" is acceptable')}var d=c;c+=m;if(e[c++]!==u){throw new Error('Could not find expected "int" for "s"')}var g=e[c++];if(a-c!==g){throw new Error('"s" specified length of "'+g+'", expected "'+(a-c)+'"')}if(i<g){throw new Error('"s" specified length of "'+g+'", max of "'+i+'" is acceptable')}var h=c;c+=g;if(c!==a){throw new Error('Expected to consume entire buffer, but "'+(a-c)+'" bytes remain')}var E=t-m,b=t-g;var y=o.allocUnsafe(E+m+b+g);for(c=0;c<E;++c){y[c]=0}e.copy(y,c,d+Math.max(-E,0),d+m);c=t;for(var w=c;c<w+b;++c){y[c]=0}e.copy(y,c,h+Math.max(-b,0),h+g);y=y.toString("base64");y=base64Url(y);return y}function countPadding(e,r,t){var o=0;while(r+o<t&&e[r+o]===0){++o}var s=e[r+o]>=n;if(s){--o}return o}function joseToDer(e,r){e=signatureAsBuffer(e);var t=s(r);var i=e.length;if(i!==t*2){throw new TypeError('"'+r+'" signatures must be "'+t*2+'" bytes, saw "'+i+'"')}var a=countPadding(e,0,t);var c=countPadding(e,t,e.length);var l=t-a;var m=t-c;var d=1+1+l+1+1+m;var g=d<n;var h=o.allocUnsafe((g?2:3)+d);var E=0;h[E++]=p;if(g){h[E++]=d}else{h[E++]=n|1;h[E++]=d&255}h[E++]=u;h[E++]=l;if(a<0){h[E++]=0;E+=e.copy(h,E,0,t)}else{E+=e.copy(h,E,a,t)}h[E++]=u;h[E++]=m;if(c<0){h[E++]=0;e.copy(h,E,t)}else{e.copy(h,E,t+c)}return h}e.exports={derToJose:derToJose,joseToDer:joseToDer}},5028:e=>{function getParamSize(e){var r=(e/8|0)+(e%8===0?0:1);return r}var r={ES256:getParamSize(256),ES384:getParamSize(384),ES512:getParamSize(521)};function getParamBytesForAlg(e){var t=r[e];if(t){return t}throw new Error('Unknown algorithm "'+e+'"')}e.exports=getParamBytesForAlg},2047:(e,r,t)=>{var o=t(3324);e.exports=function(e,r){r=r||{};var t=o.decode(e,r);if(!t){return null}var s=t.payload;if(typeof s==="string"){try{var n=JSON.parse(s);if(n!==null&&typeof n==="object"){s=n}}catch(e){}}if(r.complete===true){return{header:t.header,payload:s,signature:t.signature}}return s}},9653:(e,r,t)=>{e.exports={decode:t(2047),verify:t(772),sign:t(4912),JsonWebTokenError:t(6248),NotBeforeError:t(1269),TokenExpiredError:t(1241)}},6248:e=>{var JsonWebTokenError=function(e,r){Error.call(this,e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="JsonWebTokenError";this.message=e;if(r)this.inner=r};JsonWebTokenError.prototype=Object.create(Error.prototype);JsonWebTokenError.prototype.constructor=JsonWebTokenError;e.exports=JsonWebTokenError},1269:(e,r,t)=>{var o=t(6248);var NotBeforeError=function(e,r){o.call(this,e);this.name="NotBeforeError";this.date=r};NotBeforeError.prototype=Object.create(o.prototype);NotBeforeError.prototype.constructor=NotBeforeError;e.exports=NotBeforeError},1241:(e,r,t)=>{var o=t(6248);var TokenExpiredError=function(e,r){o.call(this,e);this.name="TokenExpiredError";this.expiredAt=r};TokenExpiredError.prototype=Object.create(o.prototype);TokenExpiredError.prototype.constructor=TokenExpiredError;e.exports=TokenExpiredError},1136:(e,r,t)=>{const o=t(2088);e.exports=o.satisfies(process.version,">=15.7.0")},3948:(e,r,t)=>{var o=t(2088);e.exports=o.satisfies(process.version,"^6.12.0 || >=8.0.0")},5318:(e,r,t)=>{const o=t(2088);e.exports=o.satisfies(process.version,">=16.9.0")},6688:(e,r,t)=>{var o=t(744);e.exports=function(e,r){var t=r||Math.floor(Date.now()/1e3);if(typeof e==="string"){var s=o(e);if(typeof s==="undefined"){return}return Math.floor(t+s/1e3)}else if(typeof e==="number"){return t+e}else{return}}},1006:(e,r,t)=>{const o=t(1136);const s=t(5318);const n={ec:["ES256","ES384","ES512"],rsa:["RS256","PS256","RS384","PS384","RS512","PS512"],"rsa-pss":["PS256","PS384","PS512"]};const i={ES256:"prime256v1",ES384:"secp384r1",ES512:"secp521r1"};e.exports=function(e,r){if(!e||!r)return;const t=r.asymmetricKeyType;if(!t)return;const a=n[t];if(!a){throw new Error(`Unknown key type "${t}".`)}if(!a.includes(e)){throw new Error(`"alg" parameter for "${t}" key type must be one of: ${a.join(", ")}.`)}if(o){switch(t){case"ec":const t=r.asymmetricKeyDetails.namedCurve;const o=i[e];if(t!==o){throw new Error(`"alg" parameter "${e}" requires curve "${o}".`)}break;case"rsa-pss":if(s){const t=parseInt(e.slice(-3),10);const{hashAlgorithm:o,mgf1HashAlgorithm:s,saltLength:n}=r.asymmetricKeyDetails;if(o!==`sha${t}`||s!==o){throw new Error(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of "alg" ${e}.`)}if(n!==undefined&&n>t>>3){throw new Error(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of "alg" ${e}.`)}}break}}}},4912:(e,r,t)=>{const o=t(6688);const s=t(3948);const n=t(1006);const i=t(3324);const a=t(3867);const c=t(1999);const l=t(9841);const p=t(116);const u=t(9888);const m=t(6172);const d=t(2192);const{KeyObject:g,createSecretKey:h,createPrivateKey:E}=t(6982);const b=["RS256","RS384","RS512","ES256","ES384","ES512","HS256","HS384","HS512","none"];if(s){b.splice(3,0,"PS256","PS384","PS512")}const y={expiresIn:{isValid:function(e){return l(e)||m(e)&&e},message:'"expiresIn" should be a number of seconds or string representing a timespan'},notBefore:{isValid:function(e){return l(e)||m(e)&&e},message:'"notBefore" should be a number of seconds or string representing a timespan'},audience:{isValid:function(e){return m(e)||Array.isArray(e)},message:'"audience" must be a string or array'},algorithm:{isValid:a.bind(null,b),message:'"algorithm" must be a valid string enum value'},header:{isValid:u,message:'"header" must be an object'},encoding:{isValid:m,message:'"encoding" must be a string'},issuer:{isValid:m,message:'"issuer" must be a string'},subject:{isValid:m,message:'"subject" must be a string'},jwtid:{isValid:m,message:'"jwtid" must be a string'},noTimestamp:{isValid:c,message:'"noTimestamp" must be a boolean'},keyid:{isValid:m,message:'"keyid" must be a string'},mutatePayload:{isValid:c,message:'"mutatePayload" must be a boolean'},allowInsecureKeySizes:{isValid:c,message:'"allowInsecureKeySizes" must be a boolean'},allowInvalidAsymmetricKeyTypes:{isValid:c,message:'"allowInvalidAsymmetricKeyTypes" must be a boolean'}};const w={iat:{isValid:p,message:'"iat" should be a number of seconds'},exp:{isValid:p,message:'"exp" should be a number of seconds'},nbf:{isValid:p,message:'"nbf" should be a number of seconds'}};function validate(e,r,t,o){if(!u(t)){throw new Error('Expected "'+o+'" to be a plain object.')}Object.keys(t).forEach((function(s){const n=e[s];if(!n){if(!r){throw new Error('"'+s+'" is not allowed in "'+o+'"')}return}if(!n.isValid(t[s])){throw new Error(n.message)}}))}function validateOptions(e){return validate(y,false,e,"options")}function validatePayload(e){return validate(w,true,e,"payload")}const v={audience:"aud",issuer:"iss",subject:"sub",jwtid:"jti"};const T=["expiresIn","notBefore","noTimestamp","audience","issuer","subject","jwtid"];e.exports=function(e,r,t,s){if(typeof t==="function"){s=t;t={}}else{t=t||{}}const a=typeof e==="object"&&!Buffer.isBuffer(e);const c=Object.assign({alg:t.algorithm||"HS256",typ:a?"JWT":undefined,kid:t.keyid},t.header);function failure(e){if(s){return s(e)}throw e}if(!r&&t.algorithm!=="none"){return failure(new Error("secretOrPrivateKey must have a value"))}if(r!=null&&!(r instanceof g)){try{r=E(r)}catch(e){try{r=h(typeof r==="string"?Buffer.from(r):r)}catch(e){return failure(new Error("secretOrPrivateKey is not valid key material"))}}}if(c.alg.startsWith("HS")&&r.type!=="secret"){return failure(new Error(`secretOrPrivateKey must be a symmetric key when using ${c.alg}`))}else if(/^(?:RS|PS|ES)/.test(c.alg)){if(r.type!=="private"){return failure(new Error(`secretOrPrivateKey must be an asymmetric key when using ${c.alg}`))}if(!t.allowInsecureKeySizes&&!c.alg.startsWith("ES")&&r.asymmetricKeyDetails!==undefined&&r.asymmetricKeyDetails.modulusLength<2048){return failure(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${c.alg}`))}}if(typeof e==="undefined"){return failure(new Error("payload is required"))}else if(a){try{validatePayload(e)}catch(e){return failure(e)}if(!t.mutatePayload){e=Object.assign({},e)}}else{const r=T.filter((function(e){return typeof t[e]!=="undefined"}));if(r.length>0){return failure(new Error("invalid "+r.join(",")+" option for "+typeof e+" payload"))}}if(typeof e.exp!=="undefined"&&typeof t.expiresIn!=="undefined"){return failure(new Error('Bad "options.expiresIn" option the payload already has an "exp" property.'))}if(typeof e.nbf!=="undefined"&&typeof t.notBefore!=="undefined"){return failure(new Error('Bad "options.notBefore" option the payload already has an "nbf" property.'))}try{validateOptions(t)}catch(e){return failure(e)}if(!t.allowInvalidAsymmetricKeyTypes){try{n(c.alg,r)}catch(e){return failure(e)}}const l=e.iat||Math.floor(Date.now()/1e3);if(t.noTimestamp){delete e.iat}else if(a){e.iat=l}if(typeof t.notBefore!=="undefined"){try{e.nbf=o(t.notBefore,l)}catch(e){return failure(e)}if(typeof e.nbf==="undefined"){return failure(new Error('"notBefore" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'))}}if(typeof t.expiresIn!=="undefined"&&typeof e==="object"){try{e.exp=o(t.expiresIn,l)}catch(e){return failure(e)}if(typeof e.exp==="undefined"){return failure(new Error('"expiresIn" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'))}}Object.keys(v).forEach((function(r){const o=v[r];if(typeof t[r]!=="undefined"){if(typeof e[o]!=="undefined"){return failure(new Error('Bad "options.'+r+'" option. The payload already has an "'+o+'" property.'))}e[o]=t[r]}}));const p=t.encoding||"utf8";if(typeof s==="function"){s=s&&d(s);i.createSign({header:c,privateKey:r,payload:e,encoding:p}).once("error",s).once("done",(function(e){if(!t.allowInsecureKeySizes&&/^(?:RS|PS)/.test(c.alg)&&e.length<256){return s(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${c.alg}`))}s(null,e)}))}else{let o=i.sign({header:c,payload:e,secret:r,encoding:p});if(!t.allowInsecureKeySizes&&/^(?:RS|PS)/.test(c.alg)&&o.length<256){throw new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${c.alg}`)}return o}}},772:(e,r,t)=>{const o=t(6248);const s=t(1269);const n=t(1241);const i=t(2047);const a=t(6688);const c=t(1006);const l=t(3948);const p=t(3324);const{KeyObject:u,createSecretKey:m,createPublicKey:d}=t(6982);const g=["RS256","RS384","RS512"];const h=["ES256","ES384","ES512"];const E=["RS256","RS384","RS512"];const b=["HS256","HS384","HS512"];if(l){g.splice(g.length,0,"PS256","PS384","PS512");E.splice(E.length,0,"PS256","PS384","PS512")}e.exports=function(e,r,t,l){if(typeof t==="function"&&!l){l=t;t={}}if(!t){t={}}t=Object.assign({},t);let y;if(l){y=l}else{y=function(e,r){if(e)throw e;return r}}if(t.clockTimestamp&&typeof t.clockTimestamp!=="number"){return y(new o("clockTimestamp must be a number"))}if(t.nonce!==undefined&&(typeof t.nonce!=="string"||t.nonce.trim()==="")){return y(new o("nonce must be a non-empty string"))}if(t.allowInvalidAsymmetricKeyTypes!==undefined&&typeof t.allowInvalidAsymmetricKeyTypes!=="boolean"){return y(new o("allowInvalidAsymmetricKeyTypes must be a boolean"))}const w=t.clockTimestamp||Math.floor(Date.now()/1e3);if(!e){return y(new o("jwt must be provided"))}if(typeof e!=="string"){return y(new o("jwt must be a string"))}const v=e.split(".");if(v.length!==3){return y(new o("jwt malformed"))}let T;try{T=i(e,{complete:true})}catch(e){return y(e)}if(!T){return y(new o("invalid token"))}const _=T.header;let k;if(typeof r==="function"){if(!l){return y(new o("verify must be called asynchronous if secret or public key is provided as a callback"))}k=r}else{k=function(e,t){return t(null,r)}}return k(_,(function(r,i){if(r){return y(new o("error in secret or public key callback: "+r.message))}const l=v[2].trim()!=="";if(!l&&i){return y(new o("jwt signature is required"))}if(l&&!i){return y(new o("secret or public key must be provided"))}if(!l&&!t.algorithms){return y(new o('please specify "none" in "algorithms" to verify unsigned tokens'))}if(i!=null&&!(i instanceof u)){try{i=d(i)}catch(e){try{i=m(typeof i==="string"?Buffer.from(i):i)}catch(e){return y(new o("secretOrPublicKey is not valid key material"))}}}if(!t.algorithms){if(i.type==="secret"){t.algorithms=b}else if(["rsa","rsa-pss"].includes(i.asymmetricKeyType)){t.algorithms=E}else if(i.asymmetricKeyType==="ec"){t.algorithms=h}else{t.algorithms=g}}if(t.algorithms.indexOf(T.header.alg)===-1){return y(new o("invalid algorithm"))}if(_.alg.startsWith("HS")&&i.type!=="secret"){return y(new o(`secretOrPublicKey must be a symmetric key when using ${_.alg}`))}else if(/^(?:RS|PS|ES)/.test(_.alg)&&i.type!=="public"){return y(new o(`secretOrPublicKey must be an asymmetric key when using ${_.alg}`))}if(!t.allowInvalidAsymmetricKeyTypes){try{c(_.alg,i)}catch(e){return y(e)}}let k;try{k=p.verify(e,T.header.alg,i)}catch(e){return y(e)}if(!k){return y(new o("invalid signature"))}const O=T.payload;if(typeof O.nbf!=="undefined"&&!t.ignoreNotBefore){if(typeof O.nbf!=="number"){return y(new o("invalid nbf value"))}if(O.nbf>w+(t.clockTolerance||0)){return y(new s("jwt not active",new Date(O.nbf*1e3)))}}if(typeof O.exp!=="undefined"&&!t.ignoreExpiration){if(typeof O.exp!=="number"){return y(new o("invalid exp value"))}if(w>=O.exp+(t.clockTolerance||0)){return y(new n("jwt expired",new Date(O.exp*1e3)))}}if(t.audience){const e=Array.isArray(t.audience)?t.audience:[t.audience];const r=Array.isArray(O.aud)?O.aud:[O.aud];const s=r.some((function(r){return e.some((function(e){return e instanceof RegExp?e.test(r):e===r}))}));if(!s){return y(new o("jwt audience invalid. expected: "+e.join(" or ")))}}if(t.issuer){const e=typeof t.issuer==="string"&&O.iss!==t.issuer||Array.isArray(t.issuer)&&t.issuer.indexOf(O.iss)===-1;if(e){return y(new o("jwt issuer invalid. expected: "+t.issuer))}}if(t.subject){if(O.sub!==t.subject){return y(new o("jwt subject invalid. expected: "+t.subject))}}if(t.jwtid){if(O.jti!==t.jwtid){return y(new o("jwt jwtid invalid. expected: "+t.jwtid))}}if(t.nonce){if(O.nonce!==t.nonce){return y(new o("jwt nonce invalid. expected: "+t.nonce))}}if(t.maxAge){if(typeof O.iat!=="number"){return y(new o("iat required when maxAge is specified"))}const e=a(t.maxAge,O.iat);if(typeof e==="undefined"){return y(new o('"maxAge" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'))}if(w>=e+(t.clockTolerance||0)){return y(new n("maxAge exceeded",new Date(e*1e3)))}}if(t.complete===true){const e=T.signature;return y(null,{header:_,payload:O,signature:e})}return y(null,O)}))}},8622:(e,r,t)=>{var o=t(3058).Buffer;var s=t(6982);var n=t(325);var i=t(9023);var a='"%s" is not a valid algorithm.\n  Supported algorithms are:\n  "HS256", "HS384", "HS512", "RS256", "RS384", "RS512", "PS256", "PS384", "PS512", "ES256", "ES384", "ES512" and "none".';var c="secret must be a string or buffer";var l="key must be a string or a buffer";var p="key must be a string, a buffer or an object";var u=typeof s.createPublicKey==="function";if(u){l+=" or a KeyObject";c+="or a KeyObject"}function checkIsPublicKey(e){if(o.isBuffer(e)){return}if(typeof e==="string"){return}if(!u){throw typeError(l)}if(typeof e!=="object"){throw typeError(l)}if(typeof e.type!=="string"){throw typeError(l)}if(typeof e.asymmetricKeyType!=="string"){throw typeError(l)}if(typeof e.export!=="function"){throw typeError(l)}}function checkIsPrivateKey(e){if(o.isBuffer(e)){return}if(typeof e==="string"){return}if(typeof e==="object"){return}throw typeError(p)}function checkIsSecretKey(e){if(o.isBuffer(e)){return}if(typeof e==="string"){return e}if(!u){throw typeError(c)}if(typeof e!=="object"){throw typeError(c)}if(e.type!=="secret"){throw typeError(c)}if(typeof e.export!=="function"){throw typeError(c)}}function fromBase64(e){return e.replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function toBase64(e){e=e.toString();var r=4-e.length%4;if(r!==4){for(var t=0;t<r;++t){e+="="}}return e.replace(/\-/g,"+").replace(/_/g,"/")}function typeError(e){var r=[].slice.call(arguments,1);var t=i.format.bind(i,e).apply(null,r);return new TypeError(t)}function bufferOrString(e){return o.isBuffer(e)||typeof e==="string"}function normalizeInput(e){if(!bufferOrString(e))e=JSON.stringify(e);return e}function createHmacSigner(e){return function sign(r,t){checkIsSecretKey(t);r=normalizeInput(r);var o=s.createHmac("sha"+e,t);var n=(o.update(r),o.digest("base64"));return fromBase64(n)}}var m;var d="timingSafeEqual"in s?function timingSafeEqual(e,r){if(e.byteLength!==r.byteLength){return false}return s.timingSafeEqual(e,r)}:function timingSafeEqual(e,r){if(!m){m=t(9732)}return m(e,r)};function createHmacVerifier(e){return function verify(r,t,s){var n=createHmacSigner(e)(r,s);return d(o.from(t),o.from(n))}}function createKeySigner(e){return function sign(r,t){checkIsPrivateKey(t);r=normalizeInput(r);var o=s.createSign("RSA-SHA"+e);var n=(o.update(r),o.sign(t,"base64"));return fromBase64(n)}}function createKeyVerifier(e){return function verify(r,t,o){checkIsPublicKey(o);r=normalizeInput(r);t=toBase64(t);var n=s.createVerify("RSA-SHA"+e);n.update(r);return n.verify(o,t,"base64")}}function createPSSKeySigner(e){return function sign(r,t){checkIsPrivateKey(t);r=normalizeInput(r);var o=s.createSign("RSA-SHA"+e);var n=(o.update(r),o.sign({key:t,padding:s.constants.RSA_PKCS1_PSS_PADDING,saltLength:s.constants.RSA_PSS_SALTLEN_DIGEST},"base64"));return fromBase64(n)}}function createPSSKeyVerifier(e){return function verify(r,t,o){checkIsPublicKey(o);r=normalizeInput(r);t=toBase64(t);var n=s.createVerify("RSA-SHA"+e);n.update(r);return n.verify({key:o,padding:s.constants.RSA_PKCS1_PSS_PADDING,saltLength:s.constants.RSA_PSS_SALTLEN_DIGEST},t,"base64")}}function createECDSASigner(e){var r=createKeySigner(e);return function sign(){var t=r.apply(null,arguments);t=n.derToJose(t,"ES"+e);return t}}function createECDSAVerifer(e){var r=createKeyVerifier(e);return function verify(t,o,s){o=n.joseToDer(o,"ES"+e).toString("base64");var i=r(t,o,s);return i}}function createNoneSigner(){return function sign(){return""}}function createNoneVerifier(){return function verify(e,r){return r===""}}e.exports=function jwa(e){var r={hs:createHmacSigner,rs:createKeySigner,ps:createPSSKeySigner,es:createECDSASigner,none:createNoneSigner};var t={hs:createHmacVerifier,rs:createKeyVerifier,ps:createPSSKeyVerifier,es:createECDSAVerifer,none:createNoneVerifier};var o=e.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);if(!o)throw typeError(a,e);var s=(o[1]||o[3]).toLowerCase();var n=o[2];return{sign:r[s](n),verify:t[s](n)}}},3324:(e,r,t)=>{var o=t(8600);var s=t(4368);var n=["HS256","HS384","HS512","RS256","RS384","RS512","PS256","PS384","PS512","ES256","ES384","ES512"];r.ALGORITHMS=n;r.sign=o.sign;r.verify=s.verify;r.decode=s.decode;r.isValid=s.isValid;r.createSign=function createSign(e){return new o(e)};r.createVerify=function createVerify(e){return new s(e)}},1831:(e,r,t)=>{var o=t(3058).Buffer;var s=t(2203);var n=t(9023);function DataStream(e){this.buffer=null;this.writable=true;this.readable=true;if(!e){this.buffer=o.alloc(0);return this}if(typeof e.pipe==="function"){this.buffer=o.alloc(0);e.pipe(this);return this}if(e.length||typeof e==="object"){this.buffer=e;this.writable=false;process.nextTick(function(){this.emit("end",e);this.readable=false;this.emit("close")}.bind(this));return this}throw new TypeError("Unexpected data type ("+typeof e+")")}n.inherits(DataStream,s);DataStream.prototype.write=function write(e){this.buffer=o.concat([this.buffer,o.from(e)]);this.emit("data",e)};DataStream.prototype.end=function end(e){if(e)this.write(e);this.emit("end",e);this.emit("close");this.writable=false;this.readable=false};e.exports=DataStream},8600:(e,r,t)=>{var o=t(3058).Buffer;var s=t(1831);var n=t(8622);var i=t(2203);var a=t(5126);var c=t(9023);function base64url(e,r){return o.from(e,r).toString("base64").replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function jwsSecuredInput(e,r,t){t=t||"utf8";var o=base64url(a(e),"binary");var s=base64url(a(r),t);return c.format("%s.%s",o,s)}function jwsSign(e){var r=e.header;var t=e.payload;var o=e.secret||e.privateKey;var s=e.encoding;var i=n(r.alg);var a=jwsSecuredInput(r,t,s);var l=i.sign(a,o);return c.format("%s.%s",a,l)}function SignStream(e){var r=e.secret||e.privateKey||e.key;var t=new s(r);this.readable=true;this.header=e.header;this.encoding=e.encoding;this.secret=this.privateKey=this.key=t;this.payload=new s(e.payload);this.secret.once("close",function(){if(!this.payload.writable&&this.readable)this.sign()}.bind(this));this.payload.once("close",function(){if(!this.secret.writable&&this.readable)this.sign()}.bind(this))}c.inherits(SignStream,i);SignStream.prototype.sign=function sign(){try{var e=jwsSign({header:this.header,payload:this.payload.buffer,secret:this.secret.buffer,encoding:this.encoding});this.emit("done",e);this.emit("data",e);this.emit("end");this.readable=false;return e}catch(e){this.readable=false;this.emit("error",e);this.emit("close")}};SignStream.sign=jwsSign;e.exports=SignStream},5126:(e,r,t)=>{var o=t(181).Buffer;e.exports=function toString(e){if(typeof e==="string")return e;if(typeof e==="number"||o.isBuffer(e))return e.toString();return JSON.stringify(e)}},4368:(e,r,t)=>{var o=t(3058).Buffer;var s=t(1831);var n=t(8622);var i=t(2203);var a=t(5126);var c=t(9023);var l=/^[a-zA-Z0-9\-_]+?\.[a-zA-Z0-9\-_]+?\.([a-zA-Z0-9\-_]+)?$/;function isObject(e){return Object.prototype.toString.call(e)==="[object Object]"}function safeJsonParse(e){if(isObject(e))return e;try{return JSON.parse(e)}catch(e){return undefined}}function headerFromJWS(e){var r=e.split(".",1)[0];return safeJsonParse(o.from(r,"base64").toString("binary"))}function securedInputFromJWS(e){return e.split(".",2).join(".")}function signatureFromJWS(e){return e.split(".")[2]}function payloadFromJWS(e,r){r=r||"utf8";var t=e.split(".")[1];return o.from(t,"base64").toString(r)}function isValidJws(e){return l.test(e)&&!!headerFromJWS(e)}function jwsVerify(e,r,t){if(!r){var o=new Error("Missing algorithm parameter for jws.verify");o.code="MISSING_ALGORITHM";throw o}e=a(e);var s=signatureFromJWS(e);var i=securedInputFromJWS(e);var c=n(r);return c.verify(i,s,t)}function jwsDecode(e,r){r=r||{};e=a(e);if(!isValidJws(e))return null;var t=headerFromJWS(e);if(!t)return null;var o=payloadFromJWS(e);if(t.typ==="JWT"||r.json)o=JSON.parse(o,r.encoding);return{header:t,payload:o,signature:signatureFromJWS(e)}}function VerifyStream(e){e=e||{};var r=e.secret||e.publicKey||e.key;var t=new s(r);this.readable=true;this.algorithm=e.algorithm;this.encoding=e.encoding;this.secret=this.publicKey=this.key=t;this.signature=new s(e.signature);this.secret.once("close",function(){if(!this.signature.writable&&this.readable)this.verify()}.bind(this));this.signature.once("close",function(){if(!this.secret.writable&&this.readable)this.verify()}.bind(this))}c.inherits(VerifyStream,i);VerifyStream.prototype.verify=function verify(){try{var e=jwsVerify(this.signature.buffer,this.algorithm,this.key.buffer);var r=jwsDecode(this.signature.buffer,this.encoding);this.emit("done",e,r);this.emit("data",e);this.emit("end");this.readable=false;return e}catch(e){this.readable=false;this.emit("error",e);this.emit("close")}};VerifyStream.decode=jwsDecode;VerifyStream.isValid=isValidJws;VerifyStream.verify=jwsVerify;e.exports=VerifyStream},3867:e=>{var r=1/0,t=9007199254740991,o=17976931348623157e292,s=0/0;var n="[object Arguments]",i="[object Function]",a="[object GeneratorFunction]",c="[object String]",l="[object Symbol]";var p=/^\s+|\s+$/g;var u=/^[-+]0x[0-9a-f]+$/i;var m=/^0b[01]+$/i;var d=/^0o[0-7]+$/i;var g=/^(?:0|[1-9]\d*)$/;var h=parseInt;function arrayMap(e,r){var t=-1,o=e?e.length:0,s=Array(o);while(++t<o){s[t]=r(e[t],t,e)}return s}function baseFindIndex(e,r,t,o){var s=e.length,n=t+(o?1:-1);while(o?n--:++n<s){if(r(e[n],n,e)){return n}}return-1}function baseIndexOf(e,r,t){if(r!==r){return baseFindIndex(e,baseIsNaN,t)}var o=t-1,s=e.length;while(++o<s){if(e[o]===r){return o}}return-1}function baseIsNaN(e){return e!==e}function baseTimes(e,r){var t=-1,o=Array(e);while(++t<e){o[t]=r(t)}return o}function baseValues(e,r){return arrayMap(r,(function(r){return e[r]}))}function overArg(e,r){return function(t){return e(r(t))}}var E=Object.prototype;var b=E.hasOwnProperty;var y=E.toString;var w=E.propertyIsEnumerable;var v=overArg(Object.keys,Object),T=Math.max;function arrayLikeKeys(e,r){var t=_(e)||isArguments(e)?baseTimes(e.length,String):[];var o=t.length,s=!!o;for(var n in e){if((r||b.call(e,n))&&!(s&&(n=="length"||isIndex(n,o)))){t.push(n)}}return t}function baseKeys(e){if(!isPrototype(e)){return v(e)}var r=[];for(var t in Object(e)){if(b.call(e,t)&&t!="constructor"){r.push(t)}}return r}function isIndex(e,r){r=r==null?t:r;return!!r&&(typeof e=="number"||g.test(e))&&(e>-1&&e%1==0&&e<r)}function isPrototype(e){var r=e&&e.constructor,t=typeof r=="function"&&r.prototype||E;return e===t}function includes(e,r,t,o){e=isArrayLike(e)?e:values(e);t=t&&!o?toInteger(t):0;var s=e.length;if(t<0){t=T(s+t,0)}return isString(e)?t<=s&&e.indexOf(r,t)>-1:!!s&&baseIndexOf(e,r,t)>-1}function isArguments(e){return isArrayLikeObject(e)&&b.call(e,"callee")&&(!w.call(e,"callee")||y.call(e)==n)}var _=Array.isArray;function isArrayLike(e){return e!=null&&isLength(e.length)&&!isFunction(e)}function isArrayLikeObject(e){return isObjectLike(e)&&isArrayLike(e)}function isFunction(e){var r=isObject(e)?y.call(e):"";return r==i||r==a}function isLength(e){return typeof e=="number"&&e>-1&&e%1==0&&e<=t}function isObject(e){var r=typeof e;return!!e&&(r=="object"||r=="function")}function isObjectLike(e){return!!e&&typeof e=="object"}function isString(e){return typeof e=="string"||!_(e)&&isObjectLike(e)&&y.call(e)==c}function isSymbol(e){return typeof e=="symbol"||isObjectLike(e)&&y.call(e)==l}function toFinite(e){if(!e){return e===0?e:0}e=toNumber(e);if(e===r||e===-r){var t=e<0?-1:1;return t*o}return e===e?e:0}function toInteger(e){var r=toFinite(e),t=r%1;return r===r?t?r-t:r:0}function toNumber(e){if(typeof e=="number"){return e}if(isSymbol(e)){return s}if(isObject(e)){var r=typeof e.valueOf=="function"?e.valueOf():e;e=isObject(r)?r+"":r}if(typeof e!="string"){return e===0?e:+e}e=e.replace(p,"");var t=m.test(e);return t||d.test(e)?h(e.slice(2),t?2:8):u.test(e)?s:+e}function keys(e){return isArrayLike(e)?arrayLikeKeys(e):baseKeys(e)}function values(e){return e?baseValues(e,keys(e)):[]}e.exports=includes},1999:e=>{var r="[object Boolean]";var t=Object.prototype;var o=t.toString;function isBoolean(e){return e===true||e===false||isObjectLike(e)&&o.call(e)==r}function isObjectLike(e){return!!e&&typeof e=="object"}e.exports=isBoolean},9841:e=>{var r=1/0,t=17976931348623157e292,o=0/0;var s="[object Symbol]";var n=/^\s+|\s+$/g;var i=/^[-+]0x[0-9a-f]+$/i;var a=/^0b[01]+$/i;var c=/^0o[0-7]+$/i;var l=parseInt;var p=Object.prototype;var u=p.toString;function isInteger(e){return typeof e=="number"&&e==toInteger(e)}function isObject(e){var r=typeof e;return!!e&&(r=="object"||r=="function")}function isObjectLike(e){return!!e&&typeof e=="object"}function isSymbol(e){return typeof e=="symbol"||isObjectLike(e)&&u.call(e)==s}function toFinite(e){if(!e){return e===0?e:0}e=toNumber(e);if(e===r||e===-r){var o=e<0?-1:1;return o*t}return e===e?e:0}function toInteger(e){var r=toFinite(e),t=r%1;return r===r?t?r-t:r:0}function toNumber(e){if(typeof e=="number"){return e}if(isSymbol(e)){return o}if(isObject(e)){var r=typeof e.valueOf=="function"?e.valueOf():e;e=isObject(r)?r+"":r}if(typeof e!="string"){return e===0?e:+e}e=e.replace(n,"");var t=a.test(e);return t||c.test(e)?l(e.slice(2),t?2:8):i.test(e)?o:+e}e.exports=isInteger},116:e=>{var r="[object Number]";var t=Object.prototype;var o=t.toString;function isObjectLike(e){return!!e&&typeof e=="object"}function isNumber(e){return typeof e=="number"||isObjectLike(e)&&o.call(e)==r}e.exports=isNumber},9888:e=>{var r="[object Object]";function isHostObject(e){var r=false;if(e!=null&&typeof e.toString!="function"){try{r=!!(e+"")}catch(e){}}return r}function overArg(e,r){return function(t){return e(r(t))}}var t=Function.prototype,o=Object.prototype;var s=t.toString;var n=o.hasOwnProperty;var i=s.call(Object);var a=o.toString;var c=overArg(Object.getPrototypeOf,Object);function isObjectLike(e){return!!e&&typeof e=="object"}function isPlainObject(e){if(!isObjectLike(e)||a.call(e)!=r||isHostObject(e)){return false}var t=c(e);if(t===null){return true}var o=n.call(t,"constructor")&&t.constructor;return typeof o=="function"&&o instanceof o&&s.call(o)==i}e.exports=isPlainObject},6172:e=>{var r="[object String]";var t=Object.prototype;var o=t.toString;var s=Array.isArray;function isObjectLike(e){return!!e&&typeof e=="object"}function isString(e){return typeof e=="string"||!s(e)&&isObjectLike(e)&&o.call(e)==r}e.exports=isString},2192:e=>{var r="Expected a function";var t=1/0,o=17976931348623157e292,s=0/0;var n="[object Symbol]";var i=/^\s+|\s+$/g;var a=/^[-+]0x[0-9a-f]+$/i;var c=/^0b[01]+$/i;var l=/^0o[0-7]+$/i;var p=parseInt;var u=Object.prototype;var m=u.toString;function before(e,t){var o;if(typeof t!="function"){throw new TypeError(r)}e=toInteger(e);return function(){if(--e>0){o=t.apply(this,arguments)}if(e<=1){t=undefined}return o}}function once(e){return before(2,e)}function isObject(e){var r=typeof e;return!!e&&(r=="object"||r=="function")}function isObjectLike(e){return!!e&&typeof e=="object"}function isSymbol(e){return typeof e=="symbol"||isObjectLike(e)&&m.call(e)==n}function toFinite(e){if(!e){return e===0?e:0}e=toNumber(e);if(e===t||e===-t){var r=e<0?-1:1;return r*o}return e===e?e:0}function toInteger(e){var r=toFinite(e),t=r%1;return r===r?t?r-t:r:0}function toNumber(e){if(typeof e=="number"){return e}if(isSymbol(e)){return s}if(isObject(e)){var r=typeof e.valueOf=="function"?e.valueOf():e;e=isObject(r)?r+"":r}if(typeof e!="string"){return e===0?e:+e}e=e.replace(i,"");var t=c.test(e);return t||l.test(e)?p(e.slice(2),t?2:8):a.test(e)?s:+e}e.exports=once},744:e=>{var r=1e3;var t=r*60;var o=t*60;var s=o*24;var n=s*7;var i=s*365.25;e.exports=function(e,r){r=r||{};var t=typeof e;if(t==="string"&&e.length>0){return parse(e)}else if(t==="number"&&isFinite(e)){return r.long?fmtLong(e):fmtShort(e)}throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function parse(e){e=String(e);if(e.length>100){return}var a=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!a){return}var c=parseFloat(a[1]);var l=(a[2]||"ms").toLowerCase();switch(l){case"years":case"year":case"yrs":case"yr":case"y":return c*i;case"weeks":case"week":case"w":return c*n;case"days":case"day":case"d":return c*s;case"hours":case"hour":case"hrs":case"hr":case"h":return c*o;case"minutes":case"minute":case"mins":case"min":case"m":return c*t;case"seconds":case"second":case"secs":case"sec":case"s":return c*r;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return c;default:return undefined}}function fmtShort(e){var n=Math.abs(e);if(n>=s){return Math.round(e/s)+"d"}if(n>=o){return Math.round(e/o)+"h"}if(n>=t){return Math.round(e/t)+"m"}if(n>=r){return Math.round(e/r)+"s"}return e+"ms"}function fmtLong(e){var n=Math.abs(e);if(n>=s){return plural(e,n,s,"day")}if(n>=o){return plural(e,n,o,"hour")}if(n>=t){return plural(e,n,t,"minute")}if(n>=r){return plural(e,n,r,"second")}return e+" ms"}function plural(e,r,t,o){var s=r>=t*1.5;return Math.round(e/t)+" "+o+(s?"s":"")}},5560:(e,r,t)=>{var o=t(8264);e.exports=o(once);e.exports.strict=o(onceStrict);once.proto=once((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return once(this)},configurable:true});Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return onceStrict(this)},configurable:true})}));function once(e){var f=function(){if(f.called)return f.value;f.called=true;return f.value=e.apply(this,arguments)};f.called=false;return f}function onceStrict(e){var f=function(){if(f.called)throw new Error(f.onceError);f.called=true;return f.value=e.apply(this,arguments)};var r=e.name||"Function wrapped with `once`";f.onceError=r+" shouldn't be called more than once";f.called=false;return f}},3058:(e,r,t)=>{
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
var o=t(181);var s=o.Buffer;function copyProps(e,r){for(var t in e){r[t]=e[t]}}if(s.from&&s.alloc&&s.allocUnsafe&&s.allocUnsafeSlow){e.exports=o}else{copyProps(o,r);r.Buffer=SafeBuffer}function SafeBuffer(e,r,t){return s(e,r,t)}SafeBuffer.prototype=Object.create(s.prototype);copyProps(s,SafeBuffer);SafeBuffer.from=function(e,r,t){if(typeof e==="number"){throw new TypeError("Argument must not be a number")}return s(e,r,t)};SafeBuffer.alloc=function(e,r,t){if(typeof e!=="number"){throw new TypeError("Argument must be a number")}var o=s(e);if(r!==undefined){if(typeof t==="string"){o.fill(r,t)}else{o.fill(r)}}else{o.fill(0)}return o};SafeBuffer.allocUnsafe=function(e){if(typeof e!=="number"){throw new TypeError("Argument must be a number")}return s(e)};SafeBuffer.allocUnsafeSlow=function(e){if(typeof e!=="number"){throw new TypeError("Argument must be a number")}return o.SlowBuffer(e)}},9379:(e,r,t)=>{const o=Symbol("SemVer ANY");class Comparator{static get ANY(){return o}constructor(e,r){r=s(r);if(e instanceof Comparator){if(e.loose===!!r.loose){return e}else{e=e.value}}e=e.trim().split(/\s+/).join(" ");c("comparator",e,r);this.options=r;this.loose=!!r.loose;this.parse(e);if(this.semver===o){this.value=""}else{this.value=this.operator+this.semver.version}c("comp",this)}parse(e){const r=this.options.loose?n[i.COMPARATORLOOSE]:n[i.COMPARATOR];const t=e.match(r);if(!t){throw new TypeError(`Invalid comparator: ${e}`)}this.operator=t[1]!==undefined?t[1]:"";if(this.operator==="="){this.operator=""}if(!t[2]){this.semver=o}else{this.semver=new l(t[2],this.options.loose)}}toString(){return this.value}test(e){c("Comparator.test",e,this.options.loose);if(this.semver===o||e===o){return true}if(typeof e==="string"){try{e=new l(e,this.options)}catch(e){return false}}return a(e,this.operator,this.semver,this.options)}intersects(e,r){if(!(e instanceof Comparator)){throw new TypeError("a Comparator is required")}if(this.operator===""){if(this.value===""){return true}return new p(e.value,r).test(this.value)}else if(e.operator===""){if(e.value===""){return true}return new p(this.value,r).test(e.semver)}r=s(r);if(r.includePrerelease&&(this.value==="<0.0.0-0"||e.value==="<0.0.0-0")){return false}if(!r.includePrerelease&&(this.value.startsWith("<0.0.0")||e.value.startsWith("<0.0.0"))){return false}if(this.operator.startsWith(">")&&e.operator.startsWith(">")){return true}if(this.operator.startsWith("<")&&e.operator.startsWith("<")){return true}if(this.semver.version===e.semver.version&&this.operator.includes("=")&&e.operator.includes("=")){return true}if(a(this.semver,"<",e.semver,r)&&this.operator.startsWith(">")&&e.operator.startsWith("<")){return true}if(a(this.semver,">",e.semver,r)&&this.operator.startsWith("<")&&e.operator.startsWith(">")){return true}return false}}e.exports=Comparator;const s=t(356);const{safeRe:n,t:i}=t(5471);const a=t(8646);const c=t(1159);const l=t(7163);const p=t(6782)},6782:(e,r,t)=>{const o=/\s+/g;class Range{constructor(e,r){r=i(r);if(e instanceof Range){if(e.loose===!!r.loose&&e.includePrerelease===!!r.includePrerelease){return e}else{return new Range(e.raw,r)}}if(e instanceof a){this.raw=e.value;this.set=[[e]];this.formatted=undefined;return this}this.options=r;this.loose=!!r.loose;this.includePrerelease=!!r.includePrerelease;this.raw=e.trim().replace(o," ");this.set=this.raw.split("||").map((e=>this.parseRange(e.trim()))).filter((e=>e.length));if(!this.set.length){throw new TypeError(`Invalid SemVer Range: ${this.raw}`)}if(this.set.length>1){const e=this.set[0];this.set=this.set.filter((e=>!isNullSet(e[0])));if(this.set.length===0){this.set=[e]}else if(this.set.length>1){for(const e of this.set){if(e.length===1&&isAny(e[0])){this.set=[e];break}}}}this.formatted=undefined}get range(){if(this.formatted===undefined){this.formatted="";for(let e=0;e<this.set.length;e++){if(e>0){this.formatted+="||"}const r=this.set[e];for(let e=0;e<r.length;e++){if(e>0){this.formatted+=" "}this.formatted+=r[e].toString().trim()}}}return this.formatted}format(){return this.range}toString(){return this.range}parseRange(e){const r=(this.options.includePrerelease&&h)|(this.options.loose&&E);const t=r+":"+e;const o=n.get(t);if(o){return o}const s=this.options.loose;const i=s?p[u.HYPHENRANGELOOSE]:p[u.HYPHENRANGE];e=e.replace(i,hyphenReplace(this.options.includePrerelease));c("hyphen replace",e);e=e.replace(p[u.COMPARATORTRIM],m);c("comparator trim",e);e=e.replace(p[u.TILDETRIM],d);c("tilde trim",e);e=e.replace(p[u.CARETTRIM],g);c("caret trim",e);let l=e.split(" ").map((e=>parseComparator(e,this.options))).join(" ").split(/\s+/).map((e=>replaceGTE0(e,this.options)));if(s){l=l.filter((e=>{c("loose invalid filter",e,this.options);return!!e.match(p[u.COMPARATORLOOSE])}))}c("range list",l);const b=new Map;const y=l.map((e=>new a(e,this.options)));for(const e of y){if(isNullSet(e)){return[e]}b.set(e.value,e)}if(b.size>1&&b.has("")){b.delete("")}const w=[...b.values()];n.set(t,w);return w}intersects(e,r){if(!(e instanceof Range)){throw new TypeError("a Range is required")}return this.set.some((t=>isSatisfiable(t,r)&&e.set.some((e=>isSatisfiable(e,r)&&t.every((t=>e.every((e=>t.intersects(e,r)))))))))}test(e){if(!e){return false}if(typeof e==="string"){try{e=new l(e,this.options)}catch(e){return false}}for(let r=0;r<this.set.length;r++){if(testSet(this.set[r],e,this.options)){return true}}return false}}e.exports=Range;const s=t(1383);const n=new s;const i=t(356);const a=t(9379);const c=t(1159);const l=t(7163);const{safeRe:p,t:u,comparatorTrimReplace:m,tildeTrimReplace:d,caretTrimReplace:g}=t(5471);const{FLAG_INCLUDE_PRERELEASE:h,FLAG_LOOSE:E}=t(5101);const isNullSet=e=>e.value==="<0.0.0-0";const isAny=e=>e.value==="";const isSatisfiable=(e,r)=>{let t=true;const o=e.slice();let s=o.pop();while(t&&o.length){t=o.every((e=>s.intersects(e,r)));s=o.pop()}return t};const parseComparator=(e,r)=>{c("comp",e,r);e=replaceCarets(e,r);c("caret",e);e=replaceTildes(e,r);c("tildes",e);e=replaceXRanges(e,r);c("xrange",e);e=replaceStars(e,r);c("stars",e);return e};const isX=e=>!e||e.toLowerCase()==="x"||e==="*";const replaceTildes=(e,r)=>e.trim().split(/\s+/).map((e=>replaceTilde(e,r))).join(" ");const replaceTilde=(e,r)=>{const t=r.loose?p[u.TILDELOOSE]:p[u.TILDE];return e.replace(t,((r,t,o,s,n)=>{c("tilde",e,r,t,o,s,n);let i;if(isX(t)){i=""}else if(isX(o)){i=`>=${t}.0.0 <${+t+1}.0.0-0`}else if(isX(s)){i=`>=${t}.${o}.0 <${t}.${+o+1}.0-0`}else if(n){c("replaceTilde pr",n);i=`>=${t}.${o}.${s}-${n} <${t}.${+o+1}.0-0`}else{i=`>=${t}.${o}.${s} <${t}.${+o+1}.0-0`}c("tilde return",i);return i}))};const replaceCarets=(e,r)=>e.trim().split(/\s+/).map((e=>replaceCaret(e,r))).join(" ");const replaceCaret=(e,r)=>{c("caret",e,r);const t=r.loose?p[u.CARETLOOSE]:p[u.CARET];const o=r.includePrerelease?"-0":"";return e.replace(t,((r,t,s,n,i)=>{c("caret",e,r,t,s,n,i);let a;if(isX(t)){a=""}else if(isX(s)){a=`>=${t}.0.0${o} <${+t+1}.0.0-0`}else if(isX(n)){if(t==="0"){a=`>=${t}.${s}.0${o} <${t}.${+s+1}.0-0`}else{a=`>=${t}.${s}.0${o} <${+t+1}.0.0-0`}}else if(i){c("replaceCaret pr",i);if(t==="0"){if(s==="0"){a=`>=${t}.${s}.${n}-${i} <${t}.${s}.${+n+1}-0`}else{a=`>=${t}.${s}.${n}-${i} <${t}.${+s+1}.0-0`}}else{a=`>=${t}.${s}.${n}-${i} <${+t+1}.0.0-0`}}else{c("no pr");if(t==="0"){if(s==="0"){a=`>=${t}.${s}.${n}${o} <${t}.${s}.${+n+1}-0`}else{a=`>=${t}.${s}.${n}${o} <${t}.${+s+1}.0-0`}}else{a=`>=${t}.${s}.${n} <${+t+1}.0.0-0`}}c("caret return",a);return a}))};const replaceXRanges=(e,r)=>{c("replaceXRanges",e,r);return e.split(/\s+/).map((e=>replaceXRange(e,r))).join(" ")};const replaceXRange=(e,r)=>{e=e.trim();const t=r.loose?p[u.XRANGELOOSE]:p[u.XRANGE];return e.replace(t,((t,o,s,n,i,a)=>{c("xRange",e,t,o,s,n,i,a);const l=isX(s);const p=l||isX(n);const u=p||isX(i);const m=u;if(o==="="&&m){o=""}a=r.includePrerelease?"-0":"";if(l){if(o===">"||o==="<"){t="<0.0.0-0"}else{t="*"}}else if(o&&m){if(p){n=0}i=0;if(o===">"){o=">=";if(p){s=+s+1;n=0;i=0}else{n=+n+1;i=0}}else if(o==="<="){o="<";if(p){s=+s+1}else{n=+n+1}}if(o==="<"){a="-0"}t=`${o+s}.${n}.${i}${a}`}else if(p){t=`>=${s}.0.0${a} <${+s+1}.0.0-0`}else if(u){t=`>=${s}.${n}.0${a} <${s}.${+n+1}.0-0`}c("xRange return",t);return t}))};const replaceStars=(e,r)=>{c("replaceStars",e,r);return e.trim().replace(p[u.STAR],"")};const replaceGTE0=(e,r)=>{c("replaceGTE0",e,r);return e.trim().replace(p[r.includePrerelease?u.GTE0PRE:u.GTE0],"")};const hyphenReplace=e=>(r,t,o,s,n,i,a,c,l,p,u,m)=>{if(isX(o)){t=""}else if(isX(s)){t=`>=${o}.0.0${e?"-0":""}`}else if(isX(n)){t=`>=${o}.${s}.0${e?"-0":""}`}else if(i){t=`>=${t}`}else{t=`>=${t}${e?"-0":""}`}if(isX(l)){c=""}else if(isX(p)){c=`<${+l+1}.0.0-0`}else if(isX(u)){c=`<${l}.${+p+1}.0-0`}else if(m){c=`<=${l}.${p}.${u}-${m}`}else if(e){c=`<${l}.${p}.${+u+1}-0`}else{c=`<=${c}`}return`${t} ${c}`.trim()};const testSet=(e,r,t)=>{for(let t=0;t<e.length;t++){if(!e[t].test(r)){return false}}if(r.prerelease.length&&!t.includePrerelease){for(let t=0;t<e.length;t++){c(e[t].semver);if(e[t].semver===a.ANY){continue}if(e[t].semver.prerelease.length>0){const o=e[t].semver;if(o.major===r.major&&o.minor===r.minor&&o.patch===r.patch){return true}}}return false}return true}},7163:(e,r,t)=>{const o=t(1159);const{MAX_LENGTH:s,MAX_SAFE_INTEGER:n}=t(5101);const{safeRe:i,t:a}=t(5471);const c=t(356);const{compareIdentifiers:l}=t(3348);class SemVer{constructor(e,r){r=c(r);if(e instanceof SemVer){if(e.loose===!!r.loose&&e.includePrerelease===!!r.includePrerelease){return e}else{e=e.version}}else if(typeof e!=="string"){throw new TypeError(`Invalid version. Must be a string. Got type "${typeof e}".`)}if(e.length>s){throw new TypeError(`version is longer than ${s} characters`)}o("SemVer",e,r);this.options=r;this.loose=!!r.loose;this.includePrerelease=!!r.includePrerelease;const t=e.trim().match(r.loose?i[a.LOOSE]:i[a.FULL]);if(!t){throw new TypeError(`Invalid Version: ${e}`)}this.raw=e;this.major=+t[1];this.minor=+t[2];this.patch=+t[3];if(this.major>n||this.major<0){throw new TypeError("Invalid major version")}if(this.minor>n||this.minor<0){throw new TypeError("Invalid minor version")}if(this.patch>n||this.patch<0){throw new TypeError("Invalid patch version")}if(!t[4]){this.prerelease=[]}else{this.prerelease=t[4].split(".").map((e=>{if(/^[0-9]+$/.test(e)){const r=+e;if(r>=0&&r<n){return r}}return e}))}this.build=t[5]?t[5].split("."):[];this.format()}format(){this.version=`${this.major}.${this.minor}.${this.patch}`;if(this.prerelease.length){this.version+=`-${this.prerelease.join(".")}`}return this.version}toString(){return this.version}compare(e){o("SemVer.compare",this.version,this.options,e);if(!(e instanceof SemVer)){if(typeof e==="string"&&e===this.version){return 0}e=new SemVer(e,this.options)}if(e.version===this.version){return 0}return this.compareMain(e)||this.comparePre(e)}compareMain(e){if(!(e instanceof SemVer)){e=new SemVer(e,this.options)}return l(this.major,e.major)||l(this.minor,e.minor)||l(this.patch,e.patch)}comparePre(e){if(!(e instanceof SemVer)){e=new SemVer(e,this.options)}if(this.prerelease.length&&!e.prerelease.length){return-1}else if(!this.prerelease.length&&e.prerelease.length){return 1}else if(!this.prerelease.length&&!e.prerelease.length){return 0}let r=0;do{const t=this.prerelease[r];const s=e.prerelease[r];o("prerelease compare",r,t,s);if(t===undefined&&s===undefined){return 0}else if(s===undefined){return 1}else if(t===undefined){return-1}else if(t===s){continue}else{return l(t,s)}}while(++r)}compareBuild(e){if(!(e instanceof SemVer)){e=new SemVer(e,this.options)}let r=0;do{const t=this.build[r];const s=e.build[r];o("build compare",r,t,s);if(t===undefined&&s===undefined){return 0}else if(s===undefined){return 1}else if(t===undefined){return-1}else if(t===s){continue}else{return l(t,s)}}while(++r)}inc(e,r,t){if(e.startsWith("pre")){if(!r&&t===false){throw new Error("invalid increment argument: identifier is empty")}if(r){const e=`-${r}`.match(this.options.loose?i[a.PRERELEASELOOSE]:i[a.PRERELEASE]);if(!e||e[1]!==r){throw new Error(`invalid identifier: ${r}`)}}}switch(e){case"premajor":this.prerelease.length=0;this.patch=0;this.minor=0;this.major++;this.inc("pre",r,t);break;case"preminor":this.prerelease.length=0;this.patch=0;this.minor++;this.inc("pre",r,t);break;case"prepatch":this.prerelease.length=0;this.inc("patch",r,t);this.inc("pre",r,t);break;case"prerelease":if(this.prerelease.length===0){this.inc("patch",r,t)}this.inc("pre",r,t);break;case"release":if(this.prerelease.length===0){throw new Error(`version ${this.raw} is not a prerelease`)}this.prerelease.length=0;break;case"major":if(this.minor!==0||this.patch!==0||this.prerelease.length===0){this.major++}this.minor=0;this.patch=0;this.prerelease=[];break;case"minor":if(this.patch!==0||this.prerelease.length===0){this.minor++}this.patch=0;this.prerelease=[];break;case"patch":if(this.prerelease.length===0){this.patch++}this.prerelease=[];break;case"pre":{const e=Number(t)?1:0;if(this.prerelease.length===0){this.prerelease=[e]}else{let o=this.prerelease.length;while(--o>=0){if(typeof this.prerelease[o]==="number"){this.prerelease[o]++;o=-2}}if(o===-1){if(r===this.prerelease.join(".")&&t===false){throw new Error("invalid increment argument: identifier already exists")}this.prerelease.push(e)}}if(r){let o=[r,e];if(t===false){o=[r]}if(l(this.prerelease[0],r)===0){if(isNaN(this.prerelease[1])){this.prerelease=o}}else{this.prerelease=o}}break}default:throw new Error(`invalid increment argument: ${e}`)}this.raw=this.format();if(this.build.length){this.raw+=`+${this.build.join(".")}`}return this}}e.exports=SemVer},1799:(e,r,t)=>{const o=t(6353);const clean=(e,r)=>{const t=o(e.trim().replace(/^[=v]+/,""),r);return t?t.version:null};e.exports=clean},8646:(e,r,t)=>{const o=t(5082);const s=t(4974);const n=t(6599);const i=t(1236);const a=t(3872);const c=t(6717);const cmp=(e,r,t,l)=>{switch(r){case"===":if(typeof e==="object"){e=e.version}if(typeof t==="object"){t=t.version}return e===t;case"!==":if(typeof e==="object"){e=e.version}if(typeof t==="object"){t=t.version}return e!==t;case"":case"=":case"==":return o(e,t,l);case"!=":return s(e,t,l);case">":return n(e,t,l);case">=":return i(e,t,l);case"<":return a(e,t,l);case"<=":return c(e,t,l);default:throw new TypeError(`Invalid operator: ${r}`)}};e.exports=cmp},5385:(e,r,t)=>{const o=t(7163);const s=t(6353);const{safeRe:n,t:i}=t(5471);const coerce=(e,r)=>{if(e instanceof o){return e}if(typeof e==="number"){e=String(e)}if(typeof e!=="string"){return null}r=r||{};let t=null;if(!r.rtl){t=e.match(r.includePrerelease?n[i.COERCEFULL]:n[i.COERCE])}else{const o=r.includePrerelease?n[i.COERCERTLFULL]:n[i.COERCERTL];let s;while((s=o.exec(e))&&(!t||t.index+t[0].length!==e.length)){if(!t||s.index+s[0].length!==t.index+t[0].length){t=s}o.lastIndex=s.index+s[1].length+s[2].length}o.lastIndex=-1}if(t===null){return null}const a=t[2];const c=t[3]||"0";const l=t[4]||"0";const p=r.includePrerelease&&t[5]?`-${t[5]}`:"";const u=r.includePrerelease&&t[6]?`+${t[6]}`:"";return s(`${a}.${c}.${l}${p}${u}`,r)};e.exports=coerce},7648:(e,r,t)=>{const o=t(7163);const compareBuild=(e,r,t)=>{const s=new o(e,t);const n=new o(r,t);return s.compare(n)||s.compareBuild(n)};e.exports=compareBuild},6874:(e,r,t)=>{const o=t(8469);const compareLoose=(e,r)=>o(e,r,true);e.exports=compareLoose},8469:(e,r,t)=>{const o=t(7163);const compare=(e,r,t)=>new o(e,t).compare(new o(r,t));e.exports=compare},711:(e,r,t)=>{const o=t(6353);const diff=(e,r)=>{const t=o(e,null,true);const s=o(r,null,true);const n=t.compare(s);if(n===0){return null}const i=n>0;const a=i?t:s;const c=i?s:t;const l=!!a.prerelease.length;const p=!!c.prerelease.length;if(p&&!l){if(!c.patch&&!c.minor){return"major"}if(c.compareMain(a)===0){if(c.minor&&!c.patch){return"minor"}return"patch"}}const u=l?"pre":"";if(t.major!==s.major){return u+"major"}if(t.minor!==s.minor){return u+"minor"}if(t.patch!==s.patch){return u+"patch"}return"prerelease"};e.exports=diff},5082:(e,r,t)=>{const o=t(8469);const eq=(e,r,t)=>o(e,r,t)===0;e.exports=eq},6599:(e,r,t)=>{const o=t(8469);const gt=(e,r,t)=>o(e,r,t)>0;e.exports=gt},1236:(e,r,t)=>{const o=t(8469);const gte=(e,r,t)=>o(e,r,t)>=0;e.exports=gte},2338:(e,r,t)=>{const o=t(7163);const inc=(e,r,t,s,n)=>{if(typeof t==="string"){n=s;s=t;t=undefined}try{return new o(e instanceof o?e.version:e,t).inc(r,s,n).version}catch(e){return null}};e.exports=inc},3872:(e,r,t)=>{const o=t(8469);const lt=(e,r,t)=>o(e,r,t)<0;e.exports=lt},6717:(e,r,t)=>{const o=t(8469);const lte=(e,r,t)=>o(e,r,t)<=0;e.exports=lte},8511:(e,r,t)=>{const o=t(7163);const major=(e,r)=>new o(e,r).major;e.exports=major},2603:(e,r,t)=>{const o=t(7163);const minor=(e,r)=>new o(e,r).minor;e.exports=minor},4974:(e,r,t)=>{const o=t(8469);const neq=(e,r,t)=>o(e,r,t)!==0;e.exports=neq},6353:(e,r,t)=>{const o=t(7163);const parse=(e,r,t=false)=>{if(e instanceof o){return e}try{return new o(e,r)}catch(e){if(!t){return null}throw e}};e.exports=parse},8756:(e,r,t)=>{const o=t(7163);const patch=(e,r)=>new o(e,r).patch;e.exports=patch},5714:(e,r,t)=>{const o=t(6353);const prerelease=(e,r)=>{const t=o(e,r);return t&&t.prerelease.length?t.prerelease:null};e.exports=prerelease},2173:(e,r,t)=>{const o=t(8469);const rcompare=(e,r,t)=>o(r,e,t);e.exports=rcompare},7192:(e,r,t)=>{const o=t(7648);const rsort=(e,r)=>e.sort(((e,t)=>o(t,e,r)));e.exports=rsort},8011:(e,r,t)=>{const o=t(6782);const satisfies=(e,r,t)=>{try{r=new o(r,t)}catch(e){return false}return r.test(e)};e.exports=satisfies},9872:(e,r,t)=>{const o=t(7648);const sort=(e,r)=>e.sort(((e,t)=>o(e,t,r)));e.exports=sort},8780:(e,r,t)=>{const o=t(6353);const valid=(e,r)=>{const t=o(e,r);return t?t.version:null};e.exports=valid},2088:(e,r,t)=>{const o=t(5471);const s=t(5101);const n=t(7163);const i=t(3348);const a=t(6353);const c=t(8780);const l=t(1799);const p=t(2338);const u=t(711);const m=t(8511);const d=t(2603);const g=t(8756);const h=t(5714);const E=t(8469);const b=t(2173);const y=t(6874);const w=t(7648);const v=t(9872);const T=t(7192);const _=t(6599);const k=t(3872);const O=t(5082);const S=t(4974);const P=t(1236);const A=t(6717);const G=t(8646);const R=t(5385);const C=t(9379);const $=t(6782);const F=t(8011);const D=t(4750);const j=t(3193);const I=t(8595);const L=t(1866);const U=t(4737);const x=t(280);const N=t(2276);const V=t(5213);const H=t(3465);const M=t(2028);const q=t(1489);e.exports={parse:a,valid:c,clean:l,inc:p,diff:u,major:m,minor:d,patch:g,prerelease:h,compare:E,rcompare:b,compareLoose:y,compareBuild:w,sort:v,rsort:T,gt:_,lt:k,eq:O,neq:S,gte:P,lte:A,cmp:G,coerce:R,Comparator:C,Range:$,satisfies:F,toComparators:D,maxSatisfying:j,minSatisfying:I,minVersion:L,validRange:U,outside:x,gtr:N,ltr:V,intersects:H,simplifyRange:M,subset:q,SemVer:n,re:o.re,src:o.src,tokens:o.t,SEMVER_SPEC_VERSION:s.SEMVER_SPEC_VERSION,RELEASE_TYPES:s.RELEASE_TYPES,compareIdentifiers:i.compareIdentifiers,rcompareIdentifiers:i.rcompareIdentifiers}},5101:e=>{const r="2.0.0";const t=256;const o=Number.MAX_SAFE_INTEGER||9007199254740991;const s=16;const n=t-6;const i=["major","premajor","minor","preminor","patch","prepatch","prerelease"];e.exports={MAX_LENGTH:t,MAX_SAFE_COMPONENT_LENGTH:s,MAX_SAFE_BUILD_LENGTH:n,MAX_SAFE_INTEGER:o,RELEASE_TYPES:i,SEMVER_SPEC_VERSION:r,FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2}},1159:e=>{const r=typeof process==="object"&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{};e.exports=r},3348:e=>{const r=/^[0-9]+$/;const compareIdentifiers=(e,t)=>{const o=r.test(e);const s=r.test(t);if(o&&s){e=+e;t=+t}return e===t?0:o&&!s?-1:s&&!o?1:e<t?-1:1};const rcompareIdentifiers=(e,r)=>compareIdentifiers(r,e);e.exports={compareIdentifiers:compareIdentifiers,rcompareIdentifiers:rcompareIdentifiers}},1383:e=>{class LRUCache{constructor(){this.max=1e3;this.map=new Map}get(e){const r=this.map.get(e);if(r===undefined){return undefined}else{this.map.delete(e);this.map.set(e,r);return r}}delete(e){return this.map.delete(e)}set(e,r){const t=this.delete(e);if(!t&&r!==undefined){if(this.map.size>=this.max){const e=this.map.keys().next().value;this.delete(e)}this.map.set(e,r)}return this}}e.exports=LRUCache},356:e=>{const r=Object.freeze({loose:true});const t=Object.freeze({});const parseOptions=e=>{if(!e){return t}if(typeof e!=="object"){return r}return e};e.exports=parseOptions},5471:(e,r,t)=>{const{MAX_SAFE_COMPONENT_LENGTH:o,MAX_SAFE_BUILD_LENGTH:s,MAX_LENGTH:n}=t(5101);const i=t(1159);r=e.exports={};const a=r.re=[];const c=r.safeRe=[];const l=r.src=[];const p=r.safeSrc=[];const u=r.t={};let m=0;const d="[a-zA-Z0-9-]";const g=[["\\s",1],["\\d",n],[d,s]];const makeSafeRegex=e=>{for(const[r,t]of g){e=e.split(`${r}*`).join(`${r}{0,${t}}`).split(`${r}+`).join(`${r}{1,${t}}`)}return e};const createToken=(e,r,t)=>{const o=makeSafeRegex(r);const s=m++;i(e,s,r);u[e]=s;l[s]=r;p[s]=o;a[s]=new RegExp(r,t?"g":undefined);c[s]=new RegExp(o,t?"g":undefined)};createToken("NUMERICIDENTIFIER","0|[1-9]\\d*");createToken("NUMERICIDENTIFIERLOOSE","\\d+");createToken("NONNUMERICIDENTIFIER",`\\d*[a-zA-Z-]${d}*`);createToken("MAINVERSION",`(${l[u.NUMERICIDENTIFIER]})\\.`+`(${l[u.NUMERICIDENTIFIER]})\\.`+`(${l[u.NUMERICIDENTIFIER]})`);createToken("MAINVERSIONLOOSE",`(${l[u.NUMERICIDENTIFIERLOOSE]})\\.`+`(${l[u.NUMERICIDENTIFIERLOOSE]})\\.`+`(${l[u.NUMERICIDENTIFIERLOOSE]})`);createToken("PRERELEASEIDENTIFIER",`(?:${l[u.NONNUMERICIDENTIFIER]}|${l[u.NUMERICIDENTIFIER]})`);createToken("PRERELEASEIDENTIFIERLOOSE",`(?:${l[u.NONNUMERICIDENTIFIER]}|${l[u.NUMERICIDENTIFIERLOOSE]})`);createToken("PRERELEASE",`(?:-(${l[u.PRERELEASEIDENTIFIER]}(?:\\.${l[u.PRERELEASEIDENTIFIER]})*))`);createToken("PRERELEASELOOSE",`(?:-?(${l[u.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${l[u.PRERELEASEIDENTIFIERLOOSE]})*))`);createToken("BUILDIDENTIFIER",`${d}+`);createToken("BUILD",`(?:\\+(${l[u.BUILDIDENTIFIER]}(?:\\.${l[u.BUILDIDENTIFIER]})*))`);createToken("FULLPLAIN",`v?${l[u.MAINVERSION]}${l[u.PRERELEASE]}?${l[u.BUILD]}?`);createToken("FULL",`^${l[u.FULLPLAIN]}$`);createToken("LOOSEPLAIN",`[v=\\s]*${l[u.MAINVERSIONLOOSE]}${l[u.PRERELEASELOOSE]}?${l[u.BUILD]}?`);createToken("LOOSE",`^${l[u.LOOSEPLAIN]}$`);createToken("GTLT","((?:<|>)?=?)");createToken("XRANGEIDENTIFIERLOOSE",`${l[u.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`);createToken("XRANGEIDENTIFIER",`${l[u.NUMERICIDENTIFIER]}|x|X|\\*`);createToken("XRANGEPLAIN",`[v=\\s]*(${l[u.XRANGEIDENTIFIER]})`+`(?:\\.(${l[u.XRANGEIDENTIFIER]})`+`(?:\\.(${l[u.XRANGEIDENTIFIER]})`+`(?:${l[u.PRERELEASE]})?${l[u.BUILD]}?`+`)?)?`);createToken("XRANGEPLAINLOOSE",`[v=\\s]*(${l[u.XRANGEIDENTIFIERLOOSE]})`+`(?:\\.(${l[u.XRANGEIDENTIFIERLOOSE]})`+`(?:\\.(${l[u.XRANGEIDENTIFIERLOOSE]})`+`(?:${l[u.PRERELEASELOOSE]})?${l[u.BUILD]}?`+`)?)?`);createToken("XRANGE",`^${l[u.GTLT]}\\s*${l[u.XRANGEPLAIN]}$`);createToken("XRANGELOOSE",`^${l[u.GTLT]}\\s*${l[u.XRANGEPLAINLOOSE]}$`);createToken("COERCEPLAIN",`${"(^|[^\\d])"+"(\\d{1,"}${o}})`+`(?:\\.(\\d{1,${o}}))?`+`(?:\\.(\\d{1,${o}}))?`);createToken("COERCE",`${l[u.COERCEPLAIN]}(?:$|[^\\d])`);createToken("COERCEFULL",l[u.COERCEPLAIN]+`(?:${l[u.PRERELEASE]})?`+`(?:${l[u.BUILD]})?`+`(?:$|[^\\d])`);createToken("COERCERTL",l[u.COERCE],true);createToken("COERCERTLFULL",l[u.COERCEFULL],true);createToken("LONETILDE","(?:~>?)");createToken("TILDETRIM",`(\\s*)${l[u.LONETILDE]}\\s+`,true);r.tildeTrimReplace="$1~";createToken("TILDE",`^${l[u.LONETILDE]}${l[u.XRANGEPLAIN]}$`);createToken("TILDELOOSE",`^${l[u.LONETILDE]}${l[u.XRANGEPLAINLOOSE]}$`);createToken("LONECARET","(?:\\^)");createToken("CARETTRIM",`(\\s*)${l[u.LONECARET]}\\s+`,true);r.caretTrimReplace="$1^";createToken("CARET",`^${l[u.LONECARET]}${l[u.XRANGEPLAIN]}$`);createToken("CARETLOOSE",`^${l[u.LONECARET]}${l[u.XRANGEPLAINLOOSE]}$`);createToken("COMPARATORLOOSE",`^${l[u.GTLT]}\\s*(${l[u.LOOSEPLAIN]})$|^$`);createToken("COMPARATOR",`^${l[u.GTLT]}\\s*(${l[u.FULLPLAIN]})$|^$`);createToken("COMPARATORTRIM",`(\\s*)${l[u.GTLT]}\\s*(${l[u.LOOSEPLAIN]}|${l[u.XRANGEPLAIN]})`,true);r.comparatorTrimReplace="$1$2$3";createToken("HYPHENRANGE",`^\\s*(${l[u.XRANGEPLAIN]})`+`\\s+-\\s+`+`(${l[u.XRANGEPLAIN]})`+`\\s*$`);createToken("HYPHENRANGELOOSE",`^\\s*(${l[u.XRANGEPLAINLOOSE]})`+`\\s+-\\s+`+`(${l[u.XRANGEPLAINLOOSE]})`+`\\s*$`);createToken("STAR","(<|>)?=?\\s*\\*");createToken("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$");createToken("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")},2276:(e,r,t)=>{const o=t(280);const gtr=(e,r,t)=>o(e,r,">",t);e.exports=gtr},3465:(e,r,t)=>{const o=t(6782);const intersects=(e,r,t)=>{e=new o(e,t);r=new o(r,t);return e.intersects(r,t)};e.exports=intersects},5213:(e,r,t)=>{const o=t(280);const ltr=(e,r,t)=>o(e,r,"<",t);e.exports=ltr},3193:(e,r,t)=>{const o=t(7163);const s=t(6782);const maxSatisfying=(e,r,t)=>{let n=null;let i=null;let a=null;try{a=new s(r,t)}catch(e){return null}e.forEach((e=>{if(a.test(e)){if(!n||i.compare(e)===-1){n=e;i=new o(n,t)}}}));return n};e.exports=maxSatisfying},8595:(e,r,t)=>{const o=t(7163);const s=t(6782);const minSatisfying=(e,r,t)=>{let n=null;let i=null;let a=null;try{a=new s(r,t)}catch(e){return null}e.forEach((e=>{if(a.test(e)){if(!n||i.compare(e)===1){n=e;i=new o(n,t)}}}));return n};e.exports=minSatisfying},1866:(e,r,t)=>{const o=t(7163);const s=t(6782);const n=t(6599);const minVersion=(e,r)=>{e=new s(e,r);let t=new o("0.0.0");if(e.test(t)){return t}t=new o("0.0.0-0");if(e.test(t)){return t}t=null;for(let r=0;r<e.set.length;++r){const s=e.set[r];let i=null;s.forEach((e=>{const r=new o(e.semver.version);switch(e.operator){case">":if(r.prerelease.length===0){r.patch++}else{r.prerelease.push(0)}r.raw=r.format();case"":case">=":if(!i||n(r,i)){i=r}break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${e.operator}`)}}));if(i&&(!t||n(t,i))){t=i}}if(t&&e.test(t)){return t}return null};e.exports=minVersion},280:(e,r,t)=>{const o=t(7163);const s=t(9379);const{ANY:n}=s;const i=t(6782);const a=t(8011);const c=t(6599);const l=t(3872);const p=t(6717);const u=t(1236);const outside=(e,r,t,m)=>{e=new o(e,m);r=new i(r,m);let d,g,h,E,b;switch(t){case">":d=c;g=p;h=l;E=">";b=">=";break;case"<":d=l;g=u;h=c;E="<";b="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(a(e,r,m)){return false}for(let t=0;t<r.set.length;++t){const o=r.set[t];let i=null;let a=null;o.forEach((e=>{if(e.semver===n){e=new s(">=0.0.0")}i=i||e;a=a||e;if(d(e.semver,i.semver,m)){i=e}else if(h(e.semver,a.semver,m)){a=e}}));if(i.operator===E||i.operator===b){return false}if((!a.operator||a.operator===E)&&g(e,a.semver)){return false}else if(a.operator===b&&h(e,a.semver)){return false}}return true};e.exports=outside},2028:(e,r,t)=>{const o=t(8011);const s=t(8469);e.exports=(e,r,t)=>{const n=[];let i=null;let a=null;const c=e.sort(((e,r)=>s(e,r,t)));for(const e of c){const s=o(e,r,t);if(s){a=e;if(!i){i=e}}else{if(a){n.push([i,a])}a=null;i=null}}if(i){n.push([i,null])}const l=[];for(const[e,r]of n){if(e===r){l.push(e)}else if(!r&&e===c[0]){l.push("*")}else if(!r){l.push(`>=${e}`)}else if(e===c[0]){l.push(`<=${r}`)}else{l.push(`${e} - ${r}`)}}const p=l.join(" || ");const u=typeof r.raw==="string"?r.raw:String(r);return p.length<u.length?p:r}},1489:(e,r,t)=>{const o=t(6782);const s=t(9379);const{ANY:n}=s;const i=t(8011);const a=t(8469);const subset=(e,r,t={})=>{if(e===r){return true}e=new o(e,t);r=new o(r,t);let s=false;e:for(const o of e.set){for(const e of r.set){const r=simpleSubset(o,e,t);s=s||r!==null;if(r){continue e}}if(s){return false}}return true};const c=[new s(">=0.0.0-0")];const l=[new s(">=0.0.0")];const simpleSubset=(e,r,t)=>{if(e===r){return true}if(e.length===1&&e[0].semver===n){if(r.length===1&&r[0].semver===n){return true}else if(t.includePrerelease){e=c}else{e=l}}if(r.length===1&&r[0].semver===n){if(t.includePrerelease){return true}else{r=l}}const o=new Set;let s,p;for(const r of e){if(r.operator===">"||r.operator===">="){s=higherGT(s,r,t)}else if(r.operator==="<"||r.operator==="<="){p=lowerLT(p,r,t)}else{o.add(r.semver)}}if(o.size>1){return null}let u;if(s&&p){u=a(s.semver,p.semver,t);if(u>0){return null}else if(u===0&&(s.operator!==">="||p.operator!=="<=")){return null}}for(const e of o){if(s&&!i(e,String(s),t)){return null}if(p&&!i(e,String(p),t)){return null}for(const o of r){if(!i(e,String(o),t)){return false}}return true}let m,d;let g,h;let E=p&&!t.includePrerelease&&p.semver.prerelease.length?p.semver:false;let b=s&&!t.includePrerelease&&s.semver.prerelease.length?s.semver:false;if(E&&E.prerelease.length===1&&p.operator==="<"&&E.prerelease[0]===0){E=false}for(const e of r){h=h||e.operator===">"||e.operator===">=";g=g||e.operator==="<"||e.operator==="<=";if(s){if(b){if(e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===b.major&&e.semver.minor===b.minor&&e.semver.patch===b.patch){b=false}}if(e.operator===">"||e.operator===">="){m=higherGT(s,e,t);if(m===e&&m!==s){return false}}else if(s.operator===">="&&!i(s.semver,String(e),t)){return false}}if(p){if(E){if(e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===E.major&&e.semver.minor===E.minor&&e.semver.patch===E.patch){E=false}}if(e.operator==="<"||e.operator==="<="){d=lowerLT(p,e,t);if(d===e&&d!==p){return false}}else if(p.operator==="<="&&!i(p.semver,String(e),t)){return false}}if(!e.operator&&(p||s)&&u!==0){return false}}if(s&&g&&!p&&u!==0){return false}if(p&&h&&!s&&u!==0){return false}if(b||E){return false}return true};const higherGT=(e,r,t)=>{if(!e){return r}const o=a(e.semver,r.semver,t);return o>0?e:o<0?r:r.operator===">"&&e.operator===">="?r:e};const lowerLT=(e,r,t)=>{if(!e){return r}const o=a(e.semver,r.semver,t);return o<0?e:o>0?r:r.operator==="<"&&e.operator==="<="?r:e};e.exports=subset},4750:(e,r,t)=>{const o=t(6782);const toComparators=(e,r)=>new o(e,r).set.map((e=>e.map((e=>e.value)).join(" ").trim().split(" ")));e.exports=toComparators},4737:(e,r,t)=>{const o=t(6782);const validRange=(e,r)=>{try{return new o(e,r).range||"*"}catch(e){return null}};e.exports=validRange},3843:(e,r)=>{Object.defineProperty(r,"__esModule",{value:true});function getUserAgent(){if(typeof navigator==="object"&&"userAgent"in navigator){return navigator.userAgent}if(typeof process==="object"&&process.version!==undefined){return`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`}return"<environment undetectable>"}r.getUserAgent=getUserAgent},8264:e=>{e.exports=wrappy;function wrappy(e,r){if(e&&r)return wrappy(e)(r);if(typeof e!=="function")throw new TypeError("need wrapper function");Object.keys(e).forEach((function(r){wrapper[r]=e[r]}));return wrapper;function wrapper(){var r=new Array(arguments.length);for(var t=0;t<r.length;t++){r[t]=arguments[t]}var o=e.apply(this,r);var s=r[r.length-1];if(typeof o==="function"&&o!==s){Object.keys(s).forEach((function(e){o[e]=s[e]}))}return o}}},181:r=>{r.exports=e(import.meta.url)("buffer")},5317:r=>{r.exports=e(import.meta.url)("child_process")},6982:r=>{r.exports=e(import.meta.url)("crypto")},4434:r=>{r.exports=e(import.meta.url)("events")},9896:r=>{r.exports=e(import.meta.url)("fs")},857:r=>{r.exports=e(import.meta.url)("os")},6928:r=>{r.exports=e(import.meta.url)("path")},932:r=>{r.exports=e(import.meta.url)("process")},2203:r=>{r.exports=e(import.meta.url)("stream")},9023:r=>{r.exports=e(import.meta.url)("util")},8909:(e,r,t)=>{const{Argument:o}=t(9154);const{Command:s}=t(4348);const{CommanderError:n,InvalidArgumentError:i}=t(1135);const{Help:a}=t(9754);const{Option:c}=t(5240);r=e.exports=new s;r.program=r;r.Command=s;r.Option=c;r.Argument=o;r.Help=a;r.CommanderError=n;r.InvalidArgumentError=i;r.InvalidOptionArgumentError=i},9154:(e,r,t)=>{const{InvalidArgumentError:o}=t(1135);class Argument{constructor(e,r){this.description=r||"";this.variadic=false;this.parseArg=undefined;this.defaultValue=undefined;this.defaultValueDescription=undefined;this.argChoices=undefined;switch(e[0]){case"<":this.required=true;this._name=e.slice(1,-1);break;case"[":this.required=false;this._name=e.slice(1,-1);break;default:this.required=true;this._name=e;break}if(this._name.length>3&&this._name.slice(-3)==="..."){this.variadic=true;this._name=this._name.slice(0,-3)}}name(){return this._name}_concatValue(e,r){if(r===this.defaultValue||!Array.isArray(r)){return[e]}return r.concat(e)}default(e,r){this.defaultValue=e;this.defaultValueDescription=r;return this}argParser(e){this.parseArg=e;return this}choices(e){this.argChoices=e.slice();this.parseArg=(e,r)=>{if(!this.argChoices.includes(e)){throw new o(`Allowed choices are ${this.argChoices.join(", ")}.`)}if(this.variadic){return this._concatValue(e,r)}return e};return this}argRequired(){this.required=true;return this}argOptional(){this.required=false;return this}}function humanReadableArgName(e){const r=e.name()+(e.variadic===true?"...":"");return e.required?"<"+r+">":"["+r+"]"}r.Argument=Argument;r.humanReadableArgName=humanReadableArgName},4348:(e,r,t)=>{const o=t(4434).EventEmitter;const s=t(5317);const n=t(6928);const i=t(9896);const a=t(932);const{Argument:c,humanReadableArgName:l}=t(9154);const{CommanderError:p}=t(1135);const{Help:u}=t(9754);const{Option:m,splitOptionFlags:d,DualOptions:g}=t(5240);const{suggestSimilar:h}=t(5030);class Command extends o{constructor(e){super();this.commands=[];this.options=[];this.parent=null;this._allowUnknownOption=false;this._allowExcessArguments=true;this.registeredArguments=[];this._args=this.registeredArguments;this.args=[];this.rawArgs=[];this.processedArgs=[];this._scriptPath=null;this._name=e||"";this._optionValues={};this._optionValueSources={};this._storeOptionsAsProperties=false;this._actionHandler=null;this._executableHandler=false;this._executableFile=null;this._executableDir=null;this._defaultCommandName=null;this._exitCallback=null;this._aliases=[];this._combineFlagAndOptionalValue=true;this._description="";this._summary="";this._argsDescription=undefined;this._enablePositionalOptions=false;this._passThroughOptions=false;this._lifeCycleHooks={};this._showHelpAfterError=false;this._showSuggestionAfterError=true;this._outputConfiguration={writeOut:e=>a.stdout.write(e),writeErr:e=>a.stderr.write(e),getOutHelpWidth:()=>a.stdout.isTTY?a.stdout.columns:undefined,getErrHelpWidth:()=>a.stderr.isTTY?a.stderr.columns:undefined,outputError:(e,r)=>r(e)};this._hidden=false;this._hasHelpOption=true;this._helpFlags="-h, --help";this._helpDescription="display help for command";this._helpShortFlag="-h";this._helpLongFlag="--help";this._addImplicitHelpCommand=undefined;this._helpCommandName="help";this._helpCommandnameAndArgs="help [command]";this._helpCommandDescription="display help for command";this._helpConfiguration={}}copyInheritedSettings(e){this._outputConfiguration=e._outputConfiguration;this._hasHelpOption=e._hasHelpOption;this._helpFlags=e._helpFlags;this._helpDescription=e._helpDescription;this._helpShortFlag=e._helpShortFlag;this._helpLongFlag=e._helpLongFlag;this._helpCommandName=e._helpCommandName;this._helpCommandnameAndArgs=e._helpCommandnameAndArgs;this._helpCommandDescription=e._helpCommandDescription;this._helpConfiguration=e._helpConfiguration;this._exitCallback=e._exitCallback;this._storeOptionsAsProperties=e._storeOptionsAsProperties;this._combineFlagAndOptionalValue=e._combineFlagAndOptionalValue;this._allowExcessArguments=e._allowExcessArguments;this._enablePositionalOptions=e._enablePositionalOptions;this._showHelpAfterError=e._showHelpAfterError;this._showSuggestionAfterError=e._showSuggestionAfterError;return this}_getCommandAndAncestors(){const e=[];for(let r=this;r;r=r.parent){e.push(r)}return e}command(e,r,t){let o=r;let s=t;if(typeof o==="object"&&o!==null){s=o;o=null}s=s||{};const[,n,i]=e.match(/([^ ]+) *(.*)/);const a=this.createCommand(n);if(o){a.description(o);a._executableHandler=true}if(s.isDefault)this._defaultCommandName=a._name;a._hidden=!!(s.noHelp||s.hidden);a._executableFile=s.executableFile||null;if(i)a.arguments(i);this.commands.push(a);a.parent=this;a.copyInheritedSettings(this);if(o)return this;return a}createCommand(e){return new Command(e)}createHelp(){return Object.assign(new u,this.configureHelp())}configureHelp(e){if(e===undefined)return this._helpConfiguration;this._helpConfiguration=e;return this}configureOutput(e){if(e===undefined)return this._outputConfiguration;Object.assign(this._outputConfiguration,e);return this}showHelpAfterError(e=true){if(typeof e!=="string")e=!!e;this._showHelpAfterError=e;return this}showSuggestionAfterError(e=true){this._showSuggestionAfterError=!!e;return this}addCommand(e,r){if(!e._name){throw new Error(`Command passed to .addCommand() must have a name\n- specify the name in Command constructor or using .name()`)}r=r||{};if(r.isDefault)this._defaultCommandName=e._name;if(r.noHelp||r.hidden)e._hidden=true;this.commands.push(e);e.parent=this;return this}createArgument(e,r){return new c(e,r)}argument(e,r,t,o){const s=this.createArgument(e,r);if(typeof t==="function"){s.default(o).argParser(t)}else{s.default(t)}this.addArgument(s);return this}arguments(e){e.trim().split(/ +/).forEach((e=>{this.argument(e)}));return this}addArgument(e){const r=this.registeredArguments.slice(-1)[0];if(r&&r.variadic){throw new Error(`only the last argument can be variadic '${r.name()}'`)}if(e.required&&e.defaultValue!==undefined&&e.parseArg===undefined){throw new Error(`a default value for a required argument is never used: '${e.name()}'`)}this.registeredArguments.push(e);return this}addHelpCommand(e,r){if(e===false){this._addImplicitHelpCommand=false}else{this._addImplicitHelpCommand=true;if(typeof e==="string"){this._helpCommandName=e.split(" ")[0];this._helpCommandnameAndArgs=e}this._helpCommandDescription=r||this._helpCommandDescription}return this}_hasImplicitHelpCommand(){if(this._addImplicitHelpCommand===undefined){return this.commands.length&&!this._actionHandler&&!this._findCommand("help")}return this._addImplicitHelpCommand}hook(e,r){const t=["preSubcommand","preAction","postAction"];if(!t.includes(e)){throw new Error(`Unexpected value for event passed to hook : '${e}'.\nExpecting one of '${t.join("', '")}'`)}if(this._lifeCycleHooks[e]){this._lifeCycleHooks[e].push(r)}else{this._lifeCycleHooks[e]=[r]}return this}exitOverride(e){if(e){this._exitCallback=e}else{this._exitCallback=e=>{if(e.code!=="commander.executeSubCommandAsync"){throw e}else{}}}return this}_exit(e,r,t){if(this._exitCallback){this._exitCallback(new p(e,r,t))}a.exit(e)}action(e){const listener=r=>{const t=this.registeredArguments.length;const o=r.slice(0,t);if(this._storeOptionsAsProperties){o[t]=this}else{o[t]=this.opts()}o.push(this);return e.apply(this,o)};this._actionHandler=listener;return this}createOption(e,r){return new m(e,r)}_callParseArg(e,r,t,o){try{return e.parseArg(r,t)}catch(e){if(e.code==="commander.invalidArgument"){const r=`${o} ${e.message}`;this.error(r,{exitCode:e.exitCode,code:e.code})}throw e}}addOption(e){const r=e.name();const t=e.attributeName();if(e.negate){const r=e.long.replace(/^--no-/,"--");if(!this._findOption(r)){this.setOptionValueWithSource(t,e.defaultValue===undefined?true:e.defaultValue,"default")}}else if(e.defaultValue!==undefined){this.setOptionValueWithSource(t,e.defaultValue,"default")}this.options.push(e);const handleOptionValue=(r,o,s)=>{if(r==null&&e.presetArg!==undefined){r=e.presetArg}const n=this.getOptionValue(t);if(r!==null&&e.parseArg){r=this._callParseArg(e,r,n,o)}else if(r!==null&&e.variadic){r=e._concatValue(r,n)}if(r==null){if(e.negate){r=false}else if(e.isBoolean()||e.optional){r=true}else{r=""}}this.setOptionValueWithSource(t,r,s)};this.on("option:"+r,(r=>{const t=`error: option '${e.flags}' argument '${r}' is invalid.`;handleOptionValue(r,t,"cli")}));if(e.envVar){this.on("optionEnv:"+r,(r=>{const t=`error: option '${e.flags}' value '${r}' from env '${e.envVar}' is invalid.`;handleOptionValue(r,t,"env")}))}return this}_optionEx(e,r,t,o,s){if(typeof r==="object"&&r instanceof m){throw new Error("To add an Option object use addOption() instead of option() or requiredOption()")}const n=this.createOption(r,t);n.makeOptionMandatory(!!e.mandatory);if(typeof o==="function"){n.default(s).argParser(o)}else if(o instanceof RegExp){const e=o;o=(r,t)=>{const o=e.exec(r);return o?o[0]:t};n.default(s).argParser(o)}else{n.default(o)}return this.addOption(n)}option(e,r,t,o){return this._optionEx({},e,r,t,o)}requiredOption(e,r,t,o){return this._optionEx({mandatory:true},e,r,t,o)}combineFlagAndOptionalValue(e=true){this._combineFlagAndOptionalValue=!!e;return this}allowUnknownOption(e=true){this._allowUnknownOption=!!e;return this}allowExcessArguments(e=true){this._allowExcessArguments=!!e;return this}enablePositionalOptions(e=true){this._enablePositionalOptions=!!e;return this}passThroughOptions(e=true){this._passThroughOptions=!!e;if(!!this.parent&&e&&!this.parent._enablePositionalOptions){throw new Error("passThroughOptions can not be used without turning on enablePositionalOptions for parent command(s)")}return this}storeOptionsAsProperties(e=true){if(this.options.length){throw new Error("call .storeOptionsAsProperties() before adding options")}this._storeOptionsAsProperties=!!e;return this}getOptionValue(e){if(this._storeOptionsAsProperties){return this[e]}return this._optionValues[e]}setOptionValue(e,r){return this.setOptionValueWithSource(e,r,undefined)}setOptionValueWithSource(e,r,t){if(this._storeOptionsAsProperties){this[e]=r}else{this._optionValues[e]=r}this._optionValueSources[e]=t;return this}getOptionValueSource(e){return this._optionValueSources[e]}getOptionValueSourceWithGlobals(e){let r;this._getCommandAndAncestors().forEach((t=>{if(t.getOptionValueSource(e)!==undefined){r=t.getOptionValueSource(e)}}));return r}_prepareUserArgs(e,r){if(e!==undefined&&!Array.isArray(e)){throw new Error("first parameter to parse must be array or undefined")}r=r||{};if(e===undefined){e=a.argv;if(a.versions&&a.versions.electron){r.from="electron"}}this.rawArgs=e.slice();let t;switch(r.from){case undefined:case"node":this._scriptPath=e[1];t=e.slice(2);break;case"electron":if(a.defaultApp){this._scriptPath=e[1];t=e.slice(2)}else{t=e.slice(1)}break;case"user":t=e.slice(0);break;default:throw new Error(`unexpected parse option { from: '${r.from}' }`)}if(!this._name&&this._scriptPath)this.nameFromFilename(this._scriptPath);this._name=this._name||"program";return t}parse(e,r){const t=this._prepareUserArgs(e,r);this._parseCommand([],t);return this}async parseAsync(e,r){const t=this._prepareUserArgs(e,r);await this._parseCommand([],t);return this}_executeSubCommand(e,r){r=r.slice();let t=false;const o=[".js",".ts",".tsx",".mjs",".cjs"];function findFile(e,r){const t=n.resolve(e,r);if(i.existsSync(t))return t;if(o.includes(n.extname(r)))return undefined;const s=o.find((e=>i.existsSync(`${t}${e}`)));if(s)return`${t}${s}`;return undefined}this._checkForMissingMandatoryOptions();this._checkForConflictingOptions();let c=e._executableFile||`${this._name}-${e._name}`;let l=this._executableDir||"";if(this._scriptPath){let e;try{e=i.realpathSync(this._scriptPath)}catch(r){e=this._scriptPath}l=n.resolve(n.dirname(e),l)}if(l){let r=findFile(l,c);if(!r&&!e._executableFile&&this._scriptPath){const t=n.basename(this._scriptPath,n.extname(this._scriptPath));if(t!==this._name){r=findFile(l,`${t}-${e._name}`)}}c=r||c}t=o.includes(n.extname(c));let u;if(a.platform!=="win32"){if(t){r.unshift(c);r=incrementNodeInspectorPort(a.execArgv).concat(r);u=s.spawn(a.argv[0],r,{stdio:"inherit"})}else{u=s.spawn(c,r,{stdio:"inherit"})}}else{r.unshift(c);r=incrementNodeInspectorPort(a.execArgv).concat(r);u=s.spawn(a.execPath,r,{stdio:"inherit"})}if(!u.killed){const e=["SIGUSR1","SIGUSR2","SIGTERM","SIGINT","SIGHUP"];e.forEach((e=>{a.on(e,(()=>{if(u.killed===false&&u.exitCode===null){u.kill(e)}}))}))}const m=this._exitCallback;if(!m){u.on("close",a.exit.bind(a))}else{u.on("close",(()=>{m(new p(a.exitCode||0,"commander.executeSubCommandAsync","(close)"))}))}u.on("error",(r=>{if(r.code==="ENOENT"){const r=l?`searched for local subcommand relative to directory '${l}'`:"no directory for search for local subcommand, use .executableDir() to supply a custom directory";const t=`'${c}' does not exist\n - if '${e._name}' is not meant to be an executable command, remove description parameter from '.command()' and use '.description()' instead\n - if the default executable name is not suitable, use the executableFile option to supply a custom name or path\n - ${r}`;throw new Error(t)}else if(r.code==="EACCES"){throw new Error(`'${c}' not executable`)}if(!m){a.exit(1)}else{const e=new p(1,"commander.executeSubCommandAsync","(error)");e.nestedError=r;m(e)}}));this.runningCommand=u}_dispatchSubcommand(e,r,t){const o=this._findCommand(e);if(!o)this.help({error:true});let s;s=this._chainOrCallSubCommandHook(s,o,"preSubcommand");s=this._chainOrCall(s,(()=>{if(o._executableHandler){this._executeSubCommand(o,r.concat(t))}else{return o._parseCommand(r,t)}}));return s}_dispatchHelpCommand(e){if(!e){this.help()}const r=this._findCommand(e);if(r&&!r._executableHandler){r.help()}return this._dispatchSubcommand(e,[],[this._helpLongFlag||this._helpShortFlag])}_checkNumberOfArguments(){this.registeredArguments.forEach(((e,r)=>{if(e.required&&this.args[r]==null){this.missingArgument(e.name())}}));if(this.registeredArguments.length>0&&this.registeredArguments[this.registeredArguments.length-1].variadic){return}if(this.args.length>this.registeredArguments.length){this._excessArguments(this.args)}}_processArguments(){const myParseArg=(e,r,t)=>{let o=r;if(r!==null&&e.parseArg){const s=`error: command-argument value '${r}' is invalid for argument '${e.name()}'.`;o=this._callParseArg(e,r,t,s)}return o};this._checkNumberOfArguments();const e=[];this.registeredArguments.forEach(((r,t)=>{let o=r.defaultValue;if(r.variadic){if(t<this.args.length){o=this.args.slice(t);if(r.parseArg){o=o.reduce(((e,t)=>myParseArg(r,t,e)),r.defaultValue)}}else if(o===undefined){o=[]}}else if(t<this.args.length){o=this.args[t];if(r.parseArg){o=myParseArg(r,o,r.defaultValue)}}e[t]=o}));this.processedArgs=e}_chainOrCall(e,r){if(e&&e.then&&typeof e.then==="function"){return e.then((()=>r()))}return r()}_chainOrCallHooks(e,r){let t=e;const o=[];this._getCommandAndAncestors().reverse().filter((e=>e._lifeCycleHooks[r]!==undefined)).forEach((e=>{e._lifeCycleHooks[r].forEach((r=>{o.push({hookedCommand:e,callback:r})}))}));if(r==="postAction"){o.reverse()}o.forEach((e=>{t=this._chainOrCall(t,(()=>e.callback(e.hookedCommand,this)))}));return t}_chainOrCallSubCommandHook(e,r,t){let o=e;if(this._lifeCycleHooks[t]!==undefined){this._lifeCycleHooks[t].forEach((e=>{o=this._chainOrCall(o,(()=>e(this,r)))}))}return o}_parseCommand(e,r){const t=this.parseOptions(r);this._parseOptionsEnv();this._parseOptionsImplied();e=e.concat(t.operands);r=t.unknown;this.args=e.concat(r);if(e&&this._findCommand(e[0])){return this._dispatchSubcommand(e[0],e.slice(1),r)}if(this._hasImplicitHelpCommand()&&e[0]===this._helpCommandName){return this._dispatchHelpCommand(e[1])}if(this._defaultCommandName){outputHelpIfRequested(this,r);return this._dispatchSubcommand(this._defaultCommandName,e,r)}if(this.commands.length&&this.args.length===0&&!this._actionHandler&&!this._defaultCommandName){this.help({error:true})}outputHelpIfRequested(this,t.unknown);this._checkForMissingMandatoryOptions();this._checkForConflictingOptions();const checkForUnknownOptions=()=>{if(t.unknown.length>0){this.unknownOption(t.unknown[0])}};const o=`command:${this.name()}`;if(this._actionHandler){checkForUnknownOptions();this._processArguments();let t;t=this._chainOrCallHooks(t,"preAction");t=this._chainOrCall(t,(()=>this._actionHandler(this.processedArgs)));if(this.parent){t=this._chainOrCall(t,(()=>{this.parent.emit(o,e,r)}))}t=this._chainOrCallHooks(t,"postAction");return t}if(this.parent&&this.parent.listenerCount(o)){checkForUnknownOptions();this._processArguments();this.parent.emit(o,e,r)}else if(e.length){if(this._findCommand("*")){return this._dispatchSubcommand("*",e,r)}if(this.listenerCount("command:*")){this.emit("command:*",e,r)}else if(this.commands.length){this.unknownCommand()}else{checkForUnknownOptions();this._processArguments()}}else if(this.commands.length){checkForUnknownOptions();this.help({error:true})}else{checkForUnknownOptions();this._processArguments()}}_findCommand(e){if(!e)return undefined;return this.commands.find((r=>r._name===e||r._aliases.includes(e)))}_findOption(e){return this.options.find((r=>r.is(e)))}_checkForMissingMandatoryOptions(){this._getCommandAndAncestors().forEach((e=>{e.options.forEach((r=>{if(r.mandatory&&e.getOptionValue(r.attributeName())===undefined){e.missingMandatoryOptionValue(r)}}))}))}_checkForConflictingLocalOptions(){const e=this.options.filter((e=>{const r=e.attributeName();if(this.getOptionValue(r)===undefined){return false}return this.getOptionValueSource(r)!=="default"}));const r=e.filter((e=>e.conflictsWith.length>0));r.forEach((r=>{const t=e.find((e=>r.conflictsWith.includes(e.attributeName())));if(t){this._conflictingOption(r,t)}}))}_checkForConflictingOptions(){this._getCommandAndAncestors().forEach((e=>{e._checkForConflictingLocalOptions()}))}parseOptions(e){const r=[];const t=[];let o=r;const s=e.slice();function maybeOption(e){return e.length>1&&e[0]==="-"}let n=null;while(s.length){const e=s.shift();if(e==="--"){if(o===t)o.push(e);o.push(...s);break}if(n&&!maybeOption(e)){this.emit(`option:${n.name()}`,e);continue}n=null;if(maybeOption(e)){const r=this._findOption(e);if(r){if(r.required){const e=s.shift();if(e===undefined)this.optionMissingArgument(r);this.emit(`option:${r.name()}`,e)}else if(r.optional){let e=null;if(s.length>0&&!maybeOption(s[0])){e=s.shift()}this.emit(`option:${r.name()}`,e)}else{this.emit(`option:${r.name()}`)}n=r.variadic?r:null;continue}}if(e.length>2&&e[0]==="-"&&e[1]!=="-"){const r=this._findOption(`-${e[1]}`);if(r){if(r.required||r.optional&&this._combineFlagAndOptionalValue){this.emit(`option:${r.name()}`,e.slice(2))}else{this.emit(`option:${r.name()}`);s.unshift(`-${e.slice(2)}`)}continue}}if(/^--[^=]+=/.test(e)){const r=e.indexOf("=");const t=this._findOption(e.slice(0,r));if(t&&(t.required||t.optional)){this.emit(`option:${t.name()}`,e.slice(r+1));continue}}if(maybeOption(e)){o=t}if((this._enablePositionalOptions||this._passThroughOptions)&&r.length===0&&t.length===0){if(this._findCommand(e)){r.push(e);if(s.length>0)t.push(...s);break}else if(e===this._helpCommandName&&this._hasImplicitHelpCommand()){r.push(e);if(s.length>0)r.push(...s);break}else if(this._defaultCommandName){t.push(e);if(s.length>0)t.push(...s);break}}if(this._passThroughOptions){o.push(e);if(s.length>0)o.push(...s);break}o.push(e)}return{operands:r,unknown:t}}opts(){if(this._storeOptionsAsProperties){const e={};const r=this.options.length;for(let t=0;t<r;t++){const r=this.options[t].attributeName();e[r]=r===this._versionOptionName?this._version:this[r]}return e}return this._optionValues}optsWithGlobals(){return this._getCommandAndAncestors().reduce(((e,r)=>Object.assign(e,r.opts())),{})}error(e,r){this._outputConfiguration.outputError(`${e}\n`,this._outputConfiguration.writeErr);if(typeof this._showHelpAfterError==="string"){this._outputConfiguration.writeErr(`${this._showHelpAfterError}\n`)}else if(this._showHelpAfterError){this._outputConfiguration.writeErr("\n");this.outputHelp({error:true})}const t=r||{};const o=t.exitCode||1;const s=t.code||"commander.error";this._exit(o,s,e)}_parseOptionsEnv(){this.options.forEach((e=>{if(e.envVar&&e.envVar in a.env){const r=e.attributeName();if(this.getOptionValue(r)===undefined||["default","config","env"].includes(this.getOptionValueSource(r))){if(e.required||e.optional){this.emit(`optionEnv:${e.name()}`,a.env[e.envVar])}else{this.emit(`optionEnv:${e.name()}`)}}}}))}_parseOptionsImplied(){const e=new g(this.options);const hasCustomOptionValue=e=>this.getOptionValue(e)!==undefined&&!["default","implied"].includes(this.getOptionValueSource(e));this.options.filter((r=>r.implied!==undefined&&hasCustomOptionValue(r.attributeName())&&e.valueFromOption(this.getOptionValue(r.attributeName()),r))).forEach((e=>{Object.keys(e.implied).filter((e=>!hasCustomOptionValue(e))).forEach((r=>{this.setOptionValueWithSource(r,e.implied[r],"implied")}))}))}missingArgument(e){const r=`error: missing required argument '${e}'`;this.error(r,{code:"commander.missingArgument"})}optionMissingArgument(e){const r=`error: option '${e.flags}' argument missing`;this.error(r,{code:"commander.optionMissingArgument"})}missingMandatoryOptionValue(e){const r=`error: required option '${e.flags}' not specified`;this.error(r,{code:"commander.missingMandatoryOptionValue"})}_conflictingOption(e,r){const findBestOptionFromValue=e=>{const r=e.attributeName();const t=this.getOptionValue(r);const o=this.options.find((e=>e.negate&&r===e.attributeName()));const s=this.options.find((e=>!e.negate&&r===e.attributeName()));if(o&&(o.presetArg===undefined&&t===false||o.presetArg!==undefined&&t===o.presetArg)){return o}return s||e};const getErrorMessage=e=>{const r=findBestOptionFromValue(e);const t=r.attributeName();const o=this.getOptionValueSource(t);if(o==="env"){return`environment variable '${r.envVar}'`}return`option '${r.flags}'`};const t=`error: ${getErrorMessage(e)} cannot be used with ${getErrorMessage(r)}`;this.error(t,{code:"commander.conflictingOption"})}unknownOption(e){if(this._allowUnknownOption)return;let r="";if(e.startsWith("--")&&this._showSuggestionAfterError){let t=[];let o=this;do{const e=o.createHelp().visibleOptions(o).filter((e=>e.long)).map((e=>e.long));t=t.concat(e);o=o.parent}while(o&&!o._enablePositionalOptions);r=h(e,t)}const t=`error: unknown option '${e}'${r}`;this.error(t,{code:"commander.unknownOption"})}_excessArguments(e){if(this._allowExcessArguments)return;const r=this.registeredArguments.length;const t=r===1?"":"s";const o=this.parent?` for '${this.name()}'`:"";const s=`error: too many arguments${o}. Expected ${r} argument${t} but got ${e.length}.`;this.error(s,{code:"commander.excessArguments"})}unknownCommand(){const e=this.args[0];let r="";if(this._showSuggestionAfterError){const t=[];this.createHelp().visibleCommands(this).forEach((e=>{t.push(e.name());if(e.alias())t.push(e.alias())}));r=h(e,t)}const t=`error: unknown command '${e}'${r}`;this.error(t,{code:"commander.unknownCommand"})}version(e,r,t){if(e===undefined)return this._version;this._version=e;r=r||"-V, --version";t=t||"output the version number";const o=this.createOption(r,t);this._versionOptionName=o.attributeName();this.options.push(o);this.on("option:"+o.name(),(()=>{this._outputConfiguration.writeOut(`${e}\n`);this._exit(0,"commander.version",e)}));return this}description(e,r){if(e===undefined&&r===undefined)return this._description;this._description=e;if(r){this._argsDescription=r}return this}summary(e){if(e===undefined)return this._summary;this._summary=e;return this}alias(e){if(e===undefined)return this._aliases[0];let r=this;if(this.commands.length!==0&&this.commands[this.commands.length-1]._executableHandler){r=this.commands[this.commands.length-1]}if(e===r._name)throw new Error("Command alias can't be the same as its name");r._aliases.push(e);return this}aliases(e){if(e===undefined)return this._aliases;e.forEach((e=>this.alias(e)));return this}usage(e){if(e===undefined){if(this._usage)return this._usage;const e=this.registeredArguments.map((e=>l(e)));return[].concat(this.options.length||this._hasHelpOption?"[options]":[],this.commands.length?"[command]":[],this.registeredArguments.length?e:[]).join(" ")}this._usage=e;return this}name(e){if(e===undefined)return this._name;this._name=e;return this}nameFromFilename(e){this._name=n.basename(e,n.extname(e));return this}executableDir(e){if(e===undefined)return this._executableDir;this._executableDir=e;return this}helpInformation(e){const r=this.createHelp();if(r.helpWidth===undefined){r.helpWidth=e&&e.error?this._outputConfiguration.getErrHelpWidth():this._outputConfiguration.getOutHelpWidth()}return r.formatHelp(this,r)}_getHelpContext(e){e=e||{};const r={error:!!e.error};let t;if(r.error){t=e=>this._outputConfiguration.writeErr(e)}else{t=e=>this._outputConfiguration.writeOut(e)}r.write=e.write||t;r.command=this;return r}outputHelp(e){let r;if(typeof e==="function"){r=e;e=undefined}const t=this._getHelpContext(e);this._getCommandAndAncestors().reverse().forEach((e=>e.emit("beforeAllHelp",t)));this.emit("beforeHelp",t);let o=this.helpInformation(t);if(r){o=r(o);if(typeof o!=="string"&&!Buffer.isBuffer(o)){throw new Error("outputHelp callback must return a string or a Buffer")}}t.write(o);if(this._helpLongFlag){this.emit(this._helpLongFlag)}this.emit("afterHelp",t);this._getCommandAndAncestors().forEach((e=>e.emit("afterAllHelp",t)))}helpOption(e,r){if(typeof e==="boolean"){this._hasHelpOption=e;return this}this._helpFlags=e||this._helpFlags;this._helpDescription=r||this._helpDescription;const t=d(this._helpFlags);this._helpShortFlag=t.shortFlag;this._helpLongFlag=t.longFlag;return this}help(e){this.outputHelp(e);let r=a.exitCode||0;if(r===0&&e&&typeof e!=="function"&&e.error){r=1}this._exit(r,"commander.help","(outputHelp)")}addHelpText(e,r){const t=["beforeAll","before","after","afterAll"];if(!t.includes(e)){throw new Error(`Unexpected value for position to addHelpText.\nExpecting one of '${t.join("', '")}'`)}const o=`${e}Help`;this.on(o,(e=>{let t;if(typeof r==="function"){t=r({error:e.error,command:e.command})}else{t=r}if(t){e.write(`${t}\n`)}}));return this}}function outputHelpIfRequested(e,r){const t=e._hasHelpOption&&r.find((r=>r===e._helpLongFlag||r===e._helpShortFlag));if(t){e.outputHelp();e._exit(0,"commander.helpDisplayed","(outputHelp)")}}function incrementNodeInspectorPort(e){return e.map((e=>{if(!e.startsWith("--inspect")){return e}let r;let t="127.0.0.1";let o="9229";let s;if((s=e.match(/^(--inspect(-brk)?)$/))!==null){r=s[1]}else if((s=e.match(/^(--inspect(-brk|-port)?)=([^:]+)$/))!==null){r=s[1];if(/^\d+$/.test(s[3])){o=s[3]}else{t=s[3]}}else if((s=e.match(/^(--inspect(-brk|-port)?)=([^:]+):(\d+)$/))!==null){r=s[1];t=s[3];o=s[4]}if(r&&o!=="0"){return`${r}=${t}:${parseInt(o)+1}`}return e}))}r.Command=Command},1135:(e,r)=>{class CommanderError extends Error{constructor(e,r,t){super(t);Error.captureStackTrace(this,this.constructor);this.name=this.constructor.name;this.code=r;this.exitCode=e;this.nestedError=undefined}}class InvalidArgumentError extends CommanderError{constructor(e){super(1,"commander.invalidArgument",e);Error.captureStackTrace(this,this.constructor);this.name=this.constructor.name}}r.CommanderError=CommanderError;r.InvalidArgumentError=InvalidArgumentError},9754:(e,r,t)=>{const{humanReadableArgName:o}=t(9154);class Help{constructor(){this.helpWidth=undefined;this.sortSubcommands=false;this.sortOptions=false;this.showGlobalOptions=false}visibleCommands(e){const r=e.commands.filter((e=>!e._hidden));if(e._hasImplicitHelpCommand()){const[,t,o]=e._helpCommandnameAndArgs.match(/([^ ]+) *(.*)/);const s=e.createCommand(t).helpOption(false);s.description(e._helpCommandDescription);if(o)s.arguments(o);r.push(s)}if(this.sortSubcommands){r.sort(((e,r)=>e.name().localeCompare(r.name())))}return r}compareOptions(e,r){const getSortKey=e=>e.short?e.short.replace(/^-/,""):e.long.replace(/^--/,"");return getSortKey(e).localeCompare(getSortKey(r))}visibleOptions(e){const r=e.options.filter((e=>!e.hidden));const t=e._hasHelpOption&&e._helpShortFlag&&!e._findOption(e._helpShortFlag);const o=e._hasHelpOption&&!e._findOption(e._helpLongFlag);if(t||o){let s;if(!t){s=e.createOption(e._helpLongFlag,e._helpDescription)}else if(!o){s=e.createOption(e._helpShortFlag,e._helpDescription)}else{s=e.createOption(e._helpFlags,e._helpDescription)}r.push(s)}if(this.sortOptions){r.sort(this.compareOptions)}return r}visibleGlobalOptions(e){if(!this.showGlobalOptions)return[];const r=[];for(let t=e.parent;t;t=t.parent){const e=t.options.filter((e=>!e.hidden));r.push(...e)}if(this.sortOptions){r.sort(this.compareOptions)}return r}visibleArguments(e){if(e._argsDescription){e.registeredArguments.forEach((r=>{r.description=r.description||e._argsDescription[r.name()]||""}))}if(e.registeredArguments.find((e=>e.description))){return e.registeredArguments}return[]}subcommandTerm(e){const r=e.registeredArguments.map((e=>o(e))).join(" ");return e._name+(e._aliases[0]?"|"+e._aliases[0]:"")+(e.options.length?" [options]":"")+(r?" "+r:"")}optionTerm(e){return e.flags}argumentTerm(e){return e.name()}longestSubcommandTermLength(e,r){return r.visibleCommands(e).reduce(((e,t)=>Math.max(e,r.subcommandTerm(t).length)),0)}longestOptionTermLength(e,r){return r.visibleOptions(e).reduce(((e,t)=>Math.max(e,r.optionTerm(t).length)),0)}longestGlobalOptionTermLength(e,r){return r.visibleGlobalOptions(e).reduce(((e,t)=>Math.max(e,r.optionTerm(t).length)),0)}longestArgumentTermLength(e,r){return r.visibleArguments(e).reduce(((e,t)=>Math.max(e,r.argumentTerm(t).length)),0)}commandUsage(e){let r=e._name;if(e._aliases[0]){r=r+"|"+e._aliases[0]}let t="";for(let r=e.parent;r;r=r.parent){t=r.name()+" "+t}return t+r+" "+e.usage()}commandDescription(e){return e.description()}subcommandDescription(e){return e.summary()||e.description()}optionDescription(e){const r=[];if(e.argChoices){r.push(`choices: ${e.argChoices.map((e=>JSON.stringify(e))).join(", ")}`)}if(e.defaultValue!==undefined){const t=e.required||e.optional||e.isBoolean()&&typeof e.defaultValue==="boolean";if(t){r.push(`default: ${e.defaultValueDescription||JSON.stringify(e.defaultValue)}`)}}if(e.presetArg!==undefined&&e.optional){r.push(`preset: ${JSON.stringify(e.presetArg)}`)}if(e.envVar!==undefined){r.push(`env: ${e.envVar}`)}if(r.length>0){return`${e.description} (${r.join(", ")})`}return e.description}argumentDescription(e){const r=[];if(e.argChoices){r.push(`choices: ${e.argChoices.map((e=>JSON.stringify(e))).join(", ")}`)}if(e.defaultValue!==undefined){r.push(`default: ${e.defaultValueDescription||JSON.stringify(e.defaultValue)}`)}if(r.length>0){const t=`(${r.join(", ")})`;if(e.description){return`${e.description} ${t}`}return t}return e.description}formatHelp(e,r){const t=r.padWidth(e,r);const o=r.helpWidth||80;const s=2;const n=2;function formatItem(e,i){if(i){const a=`${e.padEnd(t+n)}${i}`;return r.wrap(a,o-s,t+n)}return e}function formatList(e){return e.join("\n").replace(/^/gm," ".repeat(s))}let i=[`Usage: ${r.commandUsage(e)}`,""];const a=r.commandDescription(e);if(a.length>0){i=i.concat([r.wrap(a,o,0),""])}const c=r.visibleArguments(e).map((e=>formatItem(r.argumentTerm(e),r.argumentDescription(e))));if(c.length>0){i=i.concat(["Arguments:",formatList(c),""])}const l=r.visibleOptions(e).map((e=>formatItem(r.optionTerm(e),r.optionDescription(e))));if(l.length>0){i=i.concat(["Options:",formatList(l),""])}if(this.showGlobalOptions){const t=r.visibleGlobalOptions(e).map((e=>formatItem(r.optionTerm(e),r.optionDescription(e))));if(t.length>0){i=i.concat(["Global Options:",formatList(t),""])}}const p=r.visibleCommands(e).map((e=>formatItem(r.subcommandTerm(e),r.subcommandDescription(e))));if(p.length>0){i=i.concat(["Commands:",formatList(p),""])}return i.join("\n")}padWidth(e,r){return Math.max(r.longestOptionTermLength(e,r),r.longestGlobalOptionTermLength(e,r),r.longestSubcommandTermLength(e,r),r.longestArgumentTermLength(e,r))}wrap(e,r,t,o=40){const s=" \\f\\t\\v   -   　\ufeff";const n=new RegExp(`[\\n][${s}]+`);if(e.match(n))return e;const i=r-t;if(i<o)return e;const a=e.slice(0,t);const c=e.slice(t).replace("\r\n","\n");const l=" ".repeat(t);const p="​";const u=`\\s${p}`;const m=new RegExp(`\n|.{1,${i-1}}([${u}]|$)|[^${u}]+?([${u}]|$)`,"g");const d=c.match(m)||[];return a+d.map(((e,r)=>{if(e==="\n")return"";return(r>0?l:"")+e.trimEnd()})).join("\n")}}r.Help=Help},5240:(e,r,t)=>{const{InvalidArgumentError:o}=t(1135);class Option{constructor(e,r){this.flags=e;this.description=r||"";this.required=e.includes("<");this.optional=e.includes("[");this.variadic=/\w\.\.\.[>\]]$/.test(e);this.mandatory=false;const t=splitOptionFlags(e);this.short=t.shortFlag;this.long=t.longFlag;this.negate=false;if(this.long){this.negate=this.long.startsWith("--no-")}this.defaultValue=undefined;this.defaultValueDescription=undefined;this.presetArg=undefined;this.envVar=undefined;this.parseArg=undefined;this.hidden=false;this.argChoices=undefined;this.conflictsWith=[];this.implied=undefined}default(e,r){this.defaultValue=e;this.defaultValueDescription=r;return this}preset(e){this.presetArg=e;return this}conflicts(e){this.conflictsWith=this.conflictsWith.concat(e);return this}implies(e){let r=e;if(typeof e==="string"){r={[e]:true}}this.implied=Object.assign(this.implied||{},r);return this}env(e){this.envVar=e;return this}argParser(e){this.parseArg=e;return this}makeOptionMandatory(e=true){this.mandatory=!!e;return this}hideHelp(e=true){this.hidden=!!e;return this}_concatValue(e,r){if(r===this.defaultValue||!Array.isArray(r)){return[e]}return r.concat(e)}choices(e){this.argChoices=e.slice();this.parseArg=(e,r)=>{if(!this.argChoices.includes(e)){throw new o(`Allowed choices are ${this.argChoices.join(", ")}.`)}if(this.variadic){return this._concatValue(e,r)}return e};return this}name(){if(this.long){return this.long.replace(/^--/,"")}return this.short.replace(/^-/,"")}attributeName(){return camelcase(this.name().replace(/^no-/,""))}is(e){return this.short===e||this.long===e}isBoolean(){return!this.required&&!this.optional&&!this.negate}}class DualOptions{constructor(e){this.positiveOptions=new Map;this.negativeOptions=new Map;this.dualOptions=new Set;e.forEach((e=>{if(e.negate){this.negativeOptions.set(e.attributeName(),e)}else{this.positiveOptions.set(e.attributeName(),e)}}));this.negativeOptions.forEach(((e,r)=>{if(this.positiveOptions.has(r)){this.dualOptions.add(r)}}))}valueFromOption(e,r){const t=r.attributeName();if(!this.dualOptions.has(t))return true;const o=this.negativeOptions.get(t).presetArg;const s=o!==undefined?o:false;return r.negate===(s===e)}}function camelcase(e){return e.split("-").reduce(((e,r)=>e+r[0].toUpperCase()+r.slice(1)))}function splitOptionFlags(e){let r;let t;const o=e.split(/[ |,]+/);if(o.length>1&&!/^[[<]/.test(o[1]))r=o.shift();t=o.shift();if(!r&&/^-[^-]$/.test(t)){r=t;t=undefined}return{shortFlag:r,longFlag:t}}r.Option=Option;r.splitOptionFlags=splitOptionFlags;r.DualOptions=DualOptions},5030:(e,r)=>{const t=3;function editDistance(e,r){if(Math.abs(e.length-r.length)>t)return Math.max(e.length,r.length);const o=[];for(let r=0;r<=e.length;r++){o[r]=[r]}for(let e=0;e<=r.length;e++){o[0][e]=e}for(let t=1;t<=r.length;t++){for(let s=1;s<=e.length;s++){let n=1;if(e[s-1]===r[t-1]){n=0}else{n=1}o[s][t]=Math.min(o[s-1][t]+1,o[s][t-1]+1,o[s-1][t-1]+n);if(s>1&&t>1&&e[s-1]===r[t-2]&&e[s-2]===r[t-1]){o[s][t]=Math.min(o[s][t],o[s-2][t-2]+1)}}}return o[e.length][r.length]}function suggestSimilar(e,r){if(!r||r.length===0)return"";r=Array.from(new Set(r));const o=e.startsWith("--");if(o){e=e.slice(2);r=r.map((e=>e.slice(2)))}let s=[];let n=t;const i=.4;r.forEach((r=>{if(r.length<=1)return;const t=editDistance(e,r);const o=Math.max(e.length,r.length);const a=(o-t)/o;if(a>i){if(t<n){n=t;s=[r]}else if(t===n){s.push(r)}}}));s.sort(((e,r)=>e.localeCompare(r)));if(o){s=s.map((e=>`--${e}`))}if(s.length>1){return`\n(Did you mean one of ${s.join(", ")}?)`}if(s.length===1){return`\n(Did you mean ${s[0]}?)`}return""}r.suggestSimilar=suggestSimilar},7266:(r,t,o)=>{o.d(t,{$W:()=>m,Tn:()=>getPrivateKey,G6:()=>isTokenValid,kb:()=>updateEnvToken,$r:()=>validateConfig});var s=o(8889);var n=o(9896);const i=e(import.meta.url)("url");var a=o(6928);var c=o(5317);const l=e(import.meta.url)("module");s.config();const p=(0,i.fileURLToPath)(import.meta.url);const u=(0,a.dirname)(p);function getAppVersion(){const sanitize=e=>typeof e==="string"?e.replace(/^v/,""):e;if(process.env.GHAPP_VERSION)return sanitize(process.env.GHAPP_VERSION);try{const e=(0,c.execSync)("git describe --tags --abbrev=0",{stdio:["ignore","pipe","ignore"]}).toString().trim();if(e)return sanitize(e)}catch{}if(process.env.npm_package_version)return sanitize(process.env.npm_package_version);try{const e=(0,l.createRequire)(import.meta.url);const r=e("../../package.json");if(r?.version)return sanitize(r.version)}catch{}return"0.0.0-dev"}const m={github:{appId:parseInt(process.env.GITHUB_APP_ID),installationId:parseInt(process.env.GITHUB_INSTALLATION_ID),privateKeyPath:process.env.GITHUB_PRIVATE_KEY_PATH,token:process.env.GITHUB_APP_TOKEN,tokenExpires:process.env.GITHUB_APP_TOKEN_EXPIRES},app:{name:"ghapp",version:getAppVersion(),description:"CLI to interact with GitHub App APIs"},api:{defaultPerPage:30,maxPerPage:100,tokenRefreshBuffer:3e5},files:{envPath:".env",privateKeyPath:process.env.GITHUB_PRIVATE_KEY_PATH||"private-key.pem"},csv:{timestampFormat:"YYYY-MM-DDTHH-mm-ss-SSSZ",defaultOutputDir:"./"}};function validateConfig(){const e=["GITHUB_APP_ID","GITHUB_INSTALLATION_ID","GITHUB_PRIVATE_KEY_PATH"];const r=e.filter((e=>!process.env[e]));if(r.length>0){console.error(`❌ Missing required environment variables: ${r.join(", ")}`);return false}const t=process.env.GITHUB_PRIVATE_KEY_PATH;if(!n.existsSync(t)){console.error(`❌ Private key file not found: ${t}`);return false}return true}function getPrivateKey(){return n.readFileSync(m.github.privateKeyPath,"utf8")}function updateEnvToken(e,r){try{let t="";if(n.existsSync(m.files.envPath)){t=n.readFileSync(m.files.envPath,"utf8")}const o=t.split("\n").filter((e=>e!==undefined));let s=false;let i=false;const a=o.map((t=>{if(t.startsWith("GITHUB_APP_TOKEN=")){s=true;return`GITHUB_APP_TOKEN=${e}`}if(t.startsWith("GITHUB_APP_TOKEN_EXPIRES=")){i=true;return`GITHUB_APP_TOKEN_EXPIRES=${r}`}return t}));if(!s)a.push(`GITHUB_APP_TOKEN=${e}`);if(!i)a.push(`GITHUB_APP_TOKEN_EXPIRES=${r}`);n.writeFileSync(m.files.envPath,a.join("\n"));m.github.token=e;m.github.tokenExpires=r}catch(e){console.error(`❌ Error updating .env file: ${e.message}`);throw e}}function isTokenValid(e){if(!e)return false;try{const r=new Date(e);const t=new Date;return r.getTime()-t.getTime()>m.api.tokenRefreshBuffer}catch{return false}}const d=null&&m},169:(e,r,t)=>{t.d(r,{CT:()=>handleGitHubError,Ey:()=>fetchAllPages,getOctokitClient:()=>getOctokitClient,pV:()=>getInstallationOrg});var o=t(5772);var s=t(9653);var n=t(7266);var i=t(4810);let a=null;async function createManualJWT(){try{const e=await fetch("https://api.github.com/");const r=new Date(e.headers.get("date"));const t=Math.floor(r.getTime()/1e3);const o={iss:n.$W.github.appId,iat:t-60,exp:t+300};const i=(0,n.Tn)();return s.sign(o,i,{algorithm:"RS256"})}catch(e){throw new Error(`Failed to create JWT: ${e.message}`)}}async function getOctokitClient(){let e=n.$W.github.token;const r=n.$W.github.tokenExpires;if(!e||!(0,n.G6)(r)){(0,i.jn)("Refreshing GitHub App installation token...");try{const r=await createManualJWT();const t=await fetch(`https://api.github.com/app/installations/${n.$W.github.installationId}/access_tokens`,{method:"POST",headers:{Accept:"application/vnd.github.v3+json",Authorization:`Bearer ${r}`,"User-Agent":"ghapp-cli"}});if(!t.ok){const e=await t.text();throw new Error(`GitHub API error: ${t.status} - ${e}`)}const o=await t.json();e=o.token;(0,n.kb)(e,o.expires_at);(0,i.SW)(`Token refreshed. Expires at: ${o.expires_at}`)}catch(e){(0,i.vV)("Failed to refresh GitHub App token",e);throw e}}if(!a||a.auth!==e){a=new o.Octokit({auth:e})}return a}async function fetchAllPages(e,r={}){const t=[];let o=1;const s=Math.min(r.perPage||n.$W.api.defaultPerPage,n.$W.api.maxPerPage);try{while(true){const n=await e({...r,page:o,per_page:s});const i=Array.isArray(n.data)?n.data:n.data.repositories||n.data.items||[];t.push(...i);if(i.length<s){break}o++}}catch(e){(0,i.vV)(`Error during paginated fetch: ${e.message}`,e);throw e}return t}async function getInstallationOrg(e){try{const{data:r}=await e.rest.apps.listReposAccessibleToInstallation({per_page:1});if(r.repositories&&r.repositories.length>0){const e=r.repositories[0];if(e.owner&&e.owner.type==="Organization"){return e.owner.login}}return null}catch(e){(0,i.vV)(`Error detecting organization: ${e.message}`,e);return null}}function handleGitHubError(e,r=""){const t=r?` during ${r}`:"";switch(e.status){case 401:(0,i.vV)(`Authentication failed${t}. Please check your GitHub App credentials.`);break;case 403:(0,i.vV)(`Access forbidden${t}. Check your GitHub App permissions.`);break;case 404:(0,i.vV)(`Resource not found${t}. Verify the organization/repository exists and is accessible.`);break;case 422:(0,i.vV)(`Invalid request${t}. Check your parameters.`);break;case 500:(0,i.vV)(`GitHub server error${t}. Please try again later.`);break;default:(0,i.vV)(`GitHub API error${t}: ${e.message}`,e)}}},4810:(e,r,t)=>{t.d(r,{He:()=>setLogLevel,MD:()=>logDebug,N5:()=>logFetch,N9:()=>logFile,SW:()=>logSuccess,aL:()=>logCustom,g7:()=>logDetection,jn:()=>logTokenRefresh,p_:()=>o,rg:()=>logExport,vV:()=>logError});const o={ERROR:0,WARN:1,INFO:2,DEBUG:3};let s=o.INFO;function setLogLevel(e){s=e}function getLogLevel(){return s}function logError(e,r=null){if(s>=o.ERROR){console.error(`❌ ${e}`);if(r&&s>=o.DEBUG){console.error(r.stack||r.message)}}}function logWarning(e){if(s>=o.WARN){console.warn(`⚠️  ${e}`)}}function logInfo(e){if(s>=o.INFO){console.log(`ℹ️  ${e}`)}}function logSuccess(e){if(s>=o.INFO){console.log(`✅ ${e}`)}}function logDebug(e){if(s>=o.DEBUG){console.log(`🐛 ${e}`)}}function logFetch(e){if(s>=o.INFO){console.log(`📦 ${e}`)}}function logExport(e){if(s>=o.INFO){console.log(`📊 ${e}`)}}function logFile(e){if(s>=o.INFO){console.log(`📄 ${e}`)}}function logTokenRefresh(e){if(s>=o.INFO){console.log(`♻️  ${e}`)}}function logDetection(e){if(s>=o.INFO){console.log(`🔍 ${e}`)}}function logCustom(e,r){if(s>=o.INFO){console.log(`${e} ${r}`)}}},56:e=>{e.exports=JSON.parse('{"name":"dotenv","version":"16.6.1","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","pretest":"npm run lint && npm run dts-check","test":"tap run --allow-empty-coverage --disable-coverage --timeout=60000","test:coverage":"tap run --show-full-coverage --timeout=60000 --coverage-report=text --coverage-report=lcov","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"homepage":"https://github.com/motdotla/dotenv#readme","funding":"https://dotenvx.com","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@types/node":"^18.11.3","decache":"^4.6.2","sinon":"^14.0.1","standard":"^17.0.0","standard-version":"^9.5.0","tap":"^19.2.0","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}')}};var t={};function __nccwpck_require__(e){var o=t[e];if(o!==undefined){return o.exports}var s=t[e]={exports:{}};var n=true;try{r[e](s,s.exports,__nccwpck_require__);n=false}finally{if(n)delete t[e]}return s.exports}(()=>{__nccwpck_require__.d=(e,r)=>{for(var t in r){if(__nccwpck_require__.o(r,t)&&!__nccwpck_require__.o(e,t)){Object.defineProperty(e,t,{enumerable:true,get:r[t]})}}}})();(()=>{__nccwpck_require__.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r)})();if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=new URL(".",import.meta.url).pathname.slice(import.meta.url.match(/^file:\/\/\/\w:/)?1:0,-1)+"/";var o={};var s=__nccwpck_require__(8909);const{program:n,createCommand:i,createArgument:a,createOption:c,CommanderError:l,InvalidArgumentError:p,InvalidOptionArgumentError:u,Command:m,Argument:d,Option:g,Help:h}=s;var E=__nccwpck_require__(7266);var b=__nccwpck_require__(4810);function getRepoVisibility(e){if(e.visibility==="internal"){return"| Internal"}return e.private?"| Private":"| Public"}function getTeamVisibility(e){switch(e){case"secret":return"| Secret";case"closed":return"| Closed";case"open":return"| Open";default:return"| Unknown"}}function getPermissionDisplay(e){if(!e)return"Unknown";switch(e.permission){case"admin":return"🔴 Admin";case"maintain":return"🟠 Maintain";case"write":return"🟡 Write";case"triage":return"🔵 Triage";case"read":return"🟢 Read";case"none":return"⚪ None";case"unknown":return"❓ Unknown";default:return e.permission}}function displayRepository(e,r=false){const t=getRepoVisibility(e);const o=e.language?` (${e.language})`:"";const s=e.user_permission?` | Permission: ${getPermissionDisplay(e.user_permission)}`:"";if(r){console.log(`- ${e.full_name} ${t}${o}${s}`);if(e.description){console.log(`  Description: ${e.description}`)}const r=e.stargazers_count||0;const n=e.forks_count||0;const i=e.size||0;console.log(`  Stars: ${r} | Forks: ${n} | Size: ${i} KB`);if(e.user_permission&&e.user_permission.role_name){console.log(`  Role: ${e.user_permission.role_name}`)}if(e.updated_at){const r=new Date(e.updated_at).toLocaleDateString();console.log(`  Updated: ${r}`)}if(e.html_url){console.log(`  URL: ${e.html_url}`)}console.log("")}else{console.log(`- ${e.full_name} ${t}${o}${s}`)}}function displayTeam(e,r=false){const t=getTeamVisibility(e.privacy);let o;if(e.members_count===undefined){o="N/A"}else if(e.members_count===null){o="No access"}else{o=e.members_count}let s;if(e.repos_count===undefined){s="N/A"}else if(e.repos_count===null){s="No access"}else{s=e.repos_count}if(r){console.log(`- ${e.name} ${t} (${o} members)`);if(e.description){console.log(`  Description: ${e.description}`)}console.log(`  Repositories: ${s}`);if(e.html_url){console.log(`  URL: ${e.html_url}`)}console.log("")}else{console.log(`- ${e.name} ${t} (${o} members)`)}}function displaySummary(e,r,t="",o=null){const s=e==="repositories"?"📦":e==="teams"?"👥":e==="token"?"🔐":"📊";let n=`Found ${r} ${e}`;if(t){n+=` ${t}`}if(o!==null&&o!==r){n+=` (${o} total)`}n+=":";(0,b.aL)(s,n)}function displayTokenInfo(e,r){if(!e||!r){(0,b.aL)("❌","No token or expiry found in .env");return}const t=new Date(r);const o=new Date(t.getTime()+5.5*60*60*1e3);const s=new Date;const n=t.getTime()-s.getTime()>3e5;console.log("🔐 Token (truncated):",e.slice(0,30)+"...");console.log("⏳ Expires At (UTC):",t.toISOString());console.log("🕒 Expires At (IST):",o.toLocaleString("en-IN",{timeZone:"Asia/Kolkata"}));console.log(n?"✅ Token is still valid.":"⚠️  Token is expiring soon or expired.")}function displayHelp(e,r){console.log(`📚 ${r.title}:`);console.log("");if(r.description){console.log(r.description);console.log("")}if(r.options&&r.options.length>0){console.log("Options:");r.options.forEach((e=>{console.log(`  ${e.flags.padEnd(25)} ${e.description}`)}));console.log("")}if(r.examples&&r.examples.length>0){console.log("Examples:");r.examples.forEach((e=>{console.log(`  ${e.command.padEnd(40)} # ${e.description}`)}));console.log("")}if(r.notes&&r.notes.length>0){console.log("Notes:");r.notes.forEach((e=>{console.log(`  ${e}`)}));console.log("")}}function displayProgress(e,r,t){const o=Math.round(r/t*100);(0,b.aL)("⏳",`${e} (${r}/${t} - ${o}%)`)}function displayError(e,r){(0,b.aL)("❌",`Error ${e}:`);console.error(`   ${r.message}`);if(r.status){console.error(`   HTTP Status: ${r.status}`)}}var y=__nccwpck_require__(169);function filterRepositories(e,r={}){let t=[...e];const o=t.length;if(r.visibility){const e=r.visibility.toLowerCase();t=t.filter((r=>{const t=r.visibility||(r.private?"private":"public");return t.toLowerCase()===e}));(0,b.MD)(`Filtered by visibility (${r.visibility}): ${t.length} repositories`)}if(r.language){const e=r.language.toLowerCase();t=t.filter((r=>r.language&&r.language.toLowerCase()===e));(0,b.MD)(`Filtered by language (${r.language}): ${t.length} repositories`)}if(r.since){const e=new Date(r.since);t=t.filter((r=>{if(!r.updated_at)return false;const t=new Date(r.updated_at);return t>=e}));(0,b.MD)(`Filtered by update date (since ${r.since}): ${t.length} repositories`)}if(typeof r.minStars==="number"){t=t.filter((e=>(e.stargazers_count||0)>=r.minStars));(0,b.MD)(`Filtered by min stars (${r.minStars}): ${t.length} repositories`)}if(typeof r.maxStars==="number"){t=t.filter((e=>(e.stargazers_count||0)<=r.maxStars));(0,b.MD)(`Filtered by max stars (${r.maxStars}): ${t.length} repositories`)}if(o!==t.length){(0,b.MD)(`Repository filtering complete: ${o} → ${t.length}`)}return t}function filterTeams(e,r={}){let t=[...e];const o=t.length;if(r.visibility){const e=r.visibility.toLowerCase();t=t.filter((r=>r.privacy&&r.privacy.toLowerCase()===e));(0,b.MD)(`Filtered by privacy (${r.visibility}): ${t.length} teams`)}if(typeof r.minMembers==="number"){t=t.filter((e=>typeof e.members_count==="number"&&e.members_count>=r.minMembers));(0,b.MD)(`Filtered by min members (${r.minMembers}): ${t.length} teams`)}if(typeof r.maxMembers==="number"){t=t.filter((e=>typeof e.members_count==="number"&&e.members_count<=r.maxMembers));(0,b.MD)(`Filtered by max members (${r.maxMembers}): ${t.length} teams`)}if(o!==t.length){(0,b.MD)(`Team filtering complete: ${o} → ${t.length}`)}return t}function filterRepositoriesByNames(e,r){const t=new Set(r.map((e=>e.toLowerCase())));const o=e.filter((e=>{const r=e.name.toLowerCase();const o=e.full_name.toLowerCase();return t.has(r)||t.has(o)}));(0,b.MD)(`Filtered repositories by names: ${o.length} matches from ${r.length} requested`);return o}function sortRepositories(e,r="name",t="asc"){const o=[...e].sort(((e,o)=>{let s,n;switch(r.toLowerCase()){case"stars":s=e.stargazers_count||0;n=o.stargazers_count||0;break;case"forks":s=e.forks_count||0;n=o.forks_count||0;break;case"size":s=e.size||0;n=o.size||0;break;case"updated":s=new Date(e.updated_at||0);n=new Date(o.updated_at||0);break;case"name":default:s=(e.name||"").toLowerCase();n=(o.name||"").toLowerCase();break}if(t.toLowerCase()==="desc"){return s<n?1:s>n?-1:0}else{return s>n?1:s<n?-1:0}}));(0,b.MD)(`Sorted ${e.length} repositories by ${r} (${t})`);return o}function sortTeams(e,r="name",t="asc"){const o=[...e].sort(((e,o)=>{let s,n;switch(r.toLowerCase()){case"members":s=e.members_count||0;n=o.members_count||0;break;case"repos":s=e.repos_count||0;n=o.repos_count||0;break;case"name":default:s=(e.name||"").toLowerCase();n=(o.name||"").toLowerCase();break}if(t.toLowerCase()==="desc"){return s<n?1:s>n?-1:0}else{return s>n?1:s<n?-1:0}}));(0,b.MD)(`Sorted ${e.length} teams by ${r} (${t})`);return o}var w=__nccwpck_require__(9896);var v=__nccwpck_require__(6928);function generateCollaboratorCSV(e){const r=["Source_Organization","Source_Repository","Username","Role"];const t=[];e.forEach((e=>{if(e.collaborators&&e.collaborators.length>0){e.collaborators.forEach((r=>{const o=r.originalRole||r.role||"";t.push([e.owner?.login||"",e.name||"",r.username||"",o])}))}}));return formatCSVContent(r,t)}function generateRepositoryCSV(e){const r=["Org_Name","Repo_Name","Is_Empty","Last_Push","Last_Update","isFork","isArchive","Visibility","Repo_Size(mb)","Default_Branch","Issue_Count","Open_Issues","Closed_Issues","PR_Count","Open_PRs","Closed_PRs","PR_Review_Comment_Count","Commit_Comment_Count","Issue_Comment_Count","Release_Count","Project_Count","Branch_Count","Tag_Count","Has_Wiki","Full_URL","Created"];const t=e.map((e=>{const r=[e.owner?.login||"",e.name||"",e.isEmpty?"true":"false",e.pushed_at||"",e.updated_at||"",e.fork?"true":"false",e.archived?"true":"false",e.visibility||(e.private?"private":"public"),Math.round((e.size||0)/1024),e.default_branch||"",e.issueCount||0,e.openIssues||0,e.closedIssues||0,e.prCount||0,e.openPRs||0,e.closedPRs||0,e.prReviewCommentCount||0,e.commitCommentCount||0,e.issueCommentCount||0,e.releaseCount||0,e.projectCount||0,e.branchCount||0,e.tagCount||0,e.has_wiki?"true":"false",e.html_url||"",e.created_at||""];return r}));return formatCSVContent(r,t)}function generateTeamCSV(e){const r=["Name","Slug","Privacy","Description","Members Count","Repositories Count","HTML URL"];const t=e.map((e=>[e.name||"",e.slug||"",e.privacy||"",escapeCSVField(e.description||""),e.members_count||0,e.repos_count||0,e.html_url||""]));return formatCSVContent(r,t)}function formatCSVContent(e,r){const t=[e,...r].map((e=>e.map((e=>`"${e}"`)).join(","))).join("\n");return t}function escapeCSVField(e){return e.replace(/"/g,'""')}function createOutputDirectory(e,r="./"){const t=(new Date).toISOString().split("T")[0];const o=v.join(r,"ghapp-exports",t,e);if(!w.existsSync(o)){w.mkdirSync(o,{recursive:true})}return o}function saveCSVFileOrganized(e,r,t,o="./"){try{const s=createOutputDirectory(t,o);const n=(new Date).toISOString().replace(/[:.]/g,"-");const i=v.join(s,`${r}_${n}.csv`);w.writeFileSync(i,e,"utf8");(0,b.N9)(`📊 ${t.toUpperCase()} data saved to: ${i}`);return i}catch(e){(0,b.vV)(`Error saving ${t} CSV file: ${e.message}`,e);return null}}function saveCSVFile(e,r,t="./"){try{const o=(new Date).toISOString().replace(/[:.]/g,"-");const s=path.join(t,`${r}_${o}.csv`);if(!fs.existsSync(t)){fs.mkdirSync(t,{recursive:true})}fs.writeFileSync(s,e,"utf8");logFile(`Data saved to: ${s}`);return s}catch(e){logError(`Error saving CSV file: ${e.message}`,e);return null}}function readRepositoryCSV(e){try{if(!w.existsSync(e)){(0,b.vV)(`CSV file not found: ${e}`);return[]}const r=w.readFileSync(e,"utf8");const t=r.split("\n").map((e=>e.trim())).filter((e=>e));if(t.length===0){(0,b.vV)("CSV file is empty");return[]}const o=t[0].toLowerCase();const s=o.includes("repository name")||o.includes("repo name")||o.includes("name,")||o.startsWith("name")||o.includes("repository")&&o.includes(",");const n=s?t.slice(1):t;const i=n.map((e=>{const r=e.split(",")[0].replace(/['"]/g,"").trim();return r})).filter((e=>e));(0,b.SW)(`Found ${i.length} repository names in CSV file`);return i}catch(e){(0,b.vV)(`Error reading CSV file: ${e.message}`,e);return[]}}function validateFilePath(e){try{fs.accessSync(e,fs.constants.R_OK);return true}catch{return false}}function createFileBackup(e){try{if(!validateFilePath(e)){return null}const r=(new Date).toISOString().replace(/[:.]/g,"-");const t=`${e}.backup.${r}`;fs.copyFileSync(e,t);logSuccess(`Backup created: ${t}`);return t}catch(e){logError(`Error creating backup: ${e.message}`,e);return null}}async function handleRepositoriesCommand(e={}){try{const r=await(0,y.getOctokitClient)();let t=[];let o="all repositories";if(e.repoCsv){(0,b.N5)(`Fetching repositories from CSV file: ${e.repoCsv}...`);const s=readRepositoryCSV(e.repoCsv);if(s.length===0){displayError("reading CSV file",new Error("No valid repository names found in CSV file"));return}const n=await(0,y.Ey)((e=>r.rest.apps.listReposAccessibleToInstallation(e)),{perPage:100});t=filterRepositoriesByNames(n,s);o=`repositories from ${e.repoCsv}`}else{(0,b.N5)("Fetching all repositories...");t=await(0,y.Ey)((e=>r.rest.apps.listReposAccessibleToInstallation(e)),{perPage:100})}const s=t.length;t=filterRepositories(t,e);if(e.userPermission){(0,b.N5)("Fetching user permissions for repositories...");t=await enrichRepositoriesWithPermissions(r,t)}if(e.fetch&&!e.userPermission){(0,b.N5)("Fetching detailed metrics for repositories...");t=await enrichRepositoriesWithDetailedMetrics(r,t)}if(e.sort){t=sortRepositories(t,e.sort,e.order||"asc")}if(e.fetch){let r;let o;let s;if(e.userPermission){r=generateCollaboratorCSV(t);o="collaborators";s="collaborators"}else{r=generateRepositoryCSV(t);o="repositories";s="repositories"}const n=saveCSVFileOrganized(r,o,s);if(n){if(e.userPermission){(0,b.rg)(`Exported collaborators from ${t.length} repositories to ${n}`)}else{(0,b.rg)(`Exported ${t.length} repositories to ${n}`)}}}else{const r=s!==t.length?s:null;displaySummary("repositories",t.length,o,r);t.forEach((r=>displayRepository(r,e.detailed)))}}catch(e){(0,y.CT)(e,"fetching repositories")}}async function enrichRepositoriesWithDetailedMetrics(e,r){const t=[];console.log(`\n📊 Fetching detailed metrics for ${r.length} repositories...`);for(let o=0;o<r.length;o++){const s=r[o];console.log(`Progress: ${o+1}/${r.length} - ${s.full_name}`);try{const r={...s};try{const{data:t}=await e.rest.repos.getContent({owner:s.owner.login,repo:s.name,path:""});r.isEmpty=!t||t.length===0}catch(e){r.isEmpty=e.status===404}try{const t=await(0,y.Ey)((r=>e.rest.repos.listBranches({owner:s.owner.login,repo:s.name,...r})),{perPage:100});r.branchCount=t.length}catch(e){r.branchCount=0}try{const t=await(0,y.Ey)((r=>e.rest.issues.listForRepo({owner:s.owner.login,repo:s.name,state:"all",...r})),{perPage:100});const o=await(0,y.Ey)((r=>e.rest.issues.listForRepo({owner:s.owner.login,repo:s.name,state:"open",...r})),{perPage:100});const n=t.filter((e=>!e.pull_request));const i=t.filter((e=>e.pull_request));const a=o.filter((e=>!e.pull_request));const c=o.filter((e=>e.pull_request));r.issueCount=n.length;r.openIssues=a.length;r.closedIssues=n.length-a.length;r.prCount=i.length;r.openPRs=c.length;r.closedPRs=i.length-c.length;let l=0;for(const e of n){l+=e.comments||0}r.issueCommentCount=l}catch(e){r.issueCount=0;r.openIssues=0;r.closedIssues=0;r.prCount=0;r.openPRs=0;r.closedPRs=0;r.issueCommentCount=0}try{const t=await(0,y.Ey)((r=>e.rest.repos.listReleases({owner:s.owner.login,repo:s.name,...r})),{perPage:100});r.releaseCount=t.length}catch(e){r.releaseCount=0}try{const t=await(0,y.Ey)((r=>e.rest.repos.listTags({owner:s.owner.login,repo:s.name,...r})),{perPage:100});r.tagCount=t.length}catch(e){r.tagCount=0}r.projectCount=0;try{const t=await(0,y.Ey)((r=>e.rest.pulls.list({owner:s.owner.login,repo:s.name,state:"all",...r})),{perPage:100});let o=0;for(const r of t){try{const t=await(0,y.Ey)((t=>e.rest.pulls.listReviewComments({owner:s.owner.login,repo:s.name,pull_number:r.number,...t})),{perPage:100});o+=t.length}catch(e){}}r.prReviewCommentCount=o}catch(e){r.prReviewCommentCount=0}try{const t=await(0,y.Ey)((r=>e.rest.repos.listCommitCommentsForRepo({owner:s.owner.login,repo:s.name,...r})),{perPage:100});r.commitCommentCount=t.length}catch(e){r.commitCommentCount=0}t.push(r)}catch(e){(0,b.MD)(`Error enriching repository ${s.full_name}: ${e.message}`);t.push({...s,isEmpty:false,issueCount:0,openIssues:0,closedIssues:0,prCount:0,openPRs:0,closedPRs:0,prReviewCommentCount:0,commitCommentCount:0,issueCommentCount:0,releaseCount:0,projectCount:0,branchCount:0,tagCount:0})}}console.log(`✅ Detailed metrics collection completed for ${t.length} repositories.\n`);return t}async function enrichRepositoriesWithPermissions(e,r){const t=[];console.log(`\n📋 Fetching collaborators for ${r.length} repositories...`);for(let o=0;o<r.length;o++){const s=r[o];console.log(`Progress: ${o+1}/${r.length} - ${s.full_name}`);try{const r=await(0,y.Ey)((r=>e.rest.repos.listCollaborators({owner:s.owner.login,repo:s.name,affiliation:"direct",...r})),{perPage:100});const o=[];for(const t of r){try{const r=await e.rest.repos.getCollaboratorPermissionLevel({owner:s.owner.login,repo:s.name,username:t.login});const n=r.data.permission;const i=normalizePermission(n);if(n&&["admin","write","maintain","triage","read"].includes(n)){o.push({username:t.login,role:i,originalRole:n,source:"direct"})}}catch(e){(0,b.MD)(`Error getting permission for ${t.login} in ${s.full_name}: ${e.message}`);o.push({username:t.login,role:"unknown",originalRole:"unknown",source:"error"})}}t.push({...s,collaborators:o})}catch(e){(0,b.MD)(`Error getting collaborators for ${s.full_name}: ${e.message}`);t.push({...s,collaborators:[],error:"Unable to fetch collaborators"})}}console.log(`✅ Collaborator fetch completed for ${t.length} repositories.\n`);return t}function normalizePermission(e){const r={admin:"admin",write:"push",read:"pull",maintain:"maintain",triage:"triage"};return r[e?.toLowerCase()]||e}function getRepositoryStats(e){const r={total:e.length,public:0,private:0,internal:0,languages:{},totalStars:0,totalForks:0,totalSize:0,archived:0,hasIssues:0,hasWiki:0};e.forEach((e=>{const t=e.visibility||(e.private?"private":"public");r[t]++;if(e.language){r.languages[e.language]=(r.languages[e.language]||0)+1}r.totalStars+=e.stargazers_count||0;r.totalForks+=e.forks_count||0;r.totalSize+=e.size||0;if(e.archived)r.archived++;if(e.has_issues)r.hasIssues++;if(e.has_wiki)r.hasWiki++}));return r}function displayRepositoryStats(e){const r=getRepositoryStats(e);console.log("📊 Repository Statistics:");console.log(`   Total: ${r.total}`);console.log(`   Public: ${r.public} | Private: ${r.private} | Internal: ${r.internal}`);console.log(`   Archived: ${r.archived}`);console.log(`   With Issues: ${r.hasIssues} | With Wiki: ${r.hasWiki}`);console.log(`   Total Stars: ${r.totalStars.toLocaleString()}`);console.log(`   Total Forks: ${r.totalForks.toLocaleString()}`);console.log(`   Total Size: ${(r.totalSize/1024).toFixed(2)} MB`);const t=Object.entries(r.languages).sort((([,e],[,r])=>r-e)).slice(0,5);if(t.length>0){console.log("   Top Languages:");t.forEach((([e,r])=>{console.log(`     ${e}: ${r}`)}))}console.log("")}function validateRepositoryOptions(e){const r=[];if(e.visibility){const t=["public","private","internal"];if(!t.includes(e.visibility.toLowerCase())){r.push(`Invalid visibility: ${e.visibility}. Must be one of: ${t.join(", ")}`)}}if(e.sort){const t=["name","stars","forks","updated","size"];if(!t.includes(e.sort.toLowerCase())){r.push(`Invalid sort option: ${e.sort}. Must be one of: ${t.join(", ")}`)}}if(e.order){const t=["asc","desc"];if(!t.includes(e.order.toLowerCase())){r.push(`Invalid order option: ${e.order}. Must be one of: ${t.join(", ")}`)}}if(typeof e.minStars==="number"&&typeof e.maxStars==="number"){if(e.minStars>e.maxStars){r.push("minStars cannot be greater than maxStars")}}return{isValid:r.length===0,errors:r}}async function handleTeamsCommand(e,r={}){try{const t=await(0,y.getOctokitClient)();if(!e){(0,b.g7)("No organization specified, detecting from GitHub App installation...");e=await(0,y.pV)(t);if(!e){displayError("organization detection",new Error("Could not auto-detect organization. Please specify: ghapp teams <org>"));return}(0,b.g7)(`Detected organization: ${e}`)}(0,b.N5)(`Fetching all teams from ${e}...`);const o=await(0,y.Ey)((e=>t.rest.teams.list(e)),{org:e,perPage:100});let s=o;if(!r.skipMembers){(0,b.N5)("Enriching teams with comprehensive hierarchy and member data...");s=await enrichTeamsWithFullData(t,e,o)}const n=s.length;const i=filterTeams(s,r);let a=i;if(r.sort){a=sortTeams(i,r.sort,r.order||"asc")}if(r.fetch){const r=await generateEnhancedTeamCSV(t,e,a);const o=saveCSVFileOrganized(r,`teams_${e}`,"teams");if(o){(0,b.rg)(`Exported ${a.length} teams from ${e} to ${o}`)}}else{const t=n!==a.length?n:null;displaySummary("teams",a.length,`in ${e}`,t);a.forEach((e=>displayTeam(e,r.detailed)))}}catch(r){if(r.status===404){displayError("fetching teams",new Error(`Organization '${e}' not found or not accessible`))}else{(0,y.CT)(r,"fetching teams")}}}async function enrichTeamsWithFullData(e,r,t){const o=[];const s=await buildTeamHierarchy(e,r,t);for(let n=0;n<t.length;n++){const i=t[n];displayProgress("Enriching team data",n+1,t.length);const a=await getTeamMemberDetails(e,r,i.slug);const c=await getTeamRepoPermissions(e,r,i.slug);const l=s[i.slug]||{};o.push({...i,members_count:a.length,repos_count:c.length,member_details:a,repository_permissions:c,parent_team:l.parent,child_teams:l.children||[],direct_members_only:await getDirectMembersOnly(e,r,i.slug,l.children||[],l.parent)})}return o}async function buildTeamHierarchy(e,r,t){const o={};for(const e of t){o[e.slug]={parent:e.parent?.slug||null,children:[]}}for(const e of t){if(e.parent?.slug&&o[e.parent.slug]){o[e.parent.slug].children.push(e.slug)}}return o}async function getTeamMemberDetails(e,r,t){try{const o=await(0,y.Ey)((r=>e.rest.teams.listMembersInOrg(r)),{org:r,team_slug:t,perPage:100});const s=[];for(const n of o){try{const{data:o}=await e.rest.teams.getMembershipForUserInOrg({org:r,team_slug:t,username:n.login});s.push({username:n.login,role:o.role,state:o.state,isDirect:true})}catch(e){s.push({username:n.login,role:"member",state:"active",isDirect:true})}}return s}catch(e){(0,b.MD)(`Cannot access members for team ${t}: ${e.message}`);return[]}}async function getTeamRepoPermissions(e,r,t){try{const o=await(0,y.Ey)((r=>e.rest.teams.listReposInOrg(r)),{org:r,team_slug:t,perPage:100});return o.map((e=>({name:e.name,full_name:e.full_name,permissions:{admin:e.permissions?.admin||false,maintain:e.permissions?.maintain||false,push:e.permissions?.push||false,triage:e.permissions?.triage||false,pull:e.permissions?.pull||false},role:getRepoRoleFromPermissions(e.permissions||{})})))}catch(e){(0,b.MD)(`Cannot access repositories for team ${t}: ${e.message}`);return[]}}async function getDirectMembersOnly(e,r,t,o,s=null){try{const n=await getTeamMemberDetails(e,r,t);if(!s&&o.length===0){return n}if(!s&&o.length>0){const s=new Set;for(const t of o){const o=await getTeamMemberDetails(e,r,t);o.forEach((e=>s.add(e.username)))}const i=n.filter((e=>!s.has(e.username)));(0,b.MD)(`Parent team ${t}: Total ${n.length}, Direct ${i.length}`);return i}if(s){(0,b.MD)(`Child team ${t}: All ${n.length} members are direct`);return n}return n}catch(e){(0,b.MD)(`Cannot determine direct members for team ${t}: ${e.message}`);return[]}}function getRepoRoleFromPermissions(e){if(e.admin)return"admin";if(e.maintain)return"maintain";if(e.push)return"write";if(e.triage)return"triage";if(e.pull)return"read";return"none"}async function generateEnhancedTeamCSV(e,r,t){const o=[];o.push(["Team Name","Team Slug","Privacy","Description","Parent Team","Child Teams","Member Username","Member Role","Member State","Repository Name","Repository Full Name","Repository Role"]);for(const e of t){const r=e.parent_team||"";const t=(e.child_teams||[]).join("; ");const s=e.direct_members_only||[];const n=e.member_details||[];const i=e.repository_permissions||[];if(s.length===0&&i.length===0){o.push([e.name||"",e.slug||"",e.privacy||"",teams_escapeCSVField(e.description||""),r,t,"","","","","",""]);continue}const a=Math.max(s.length,i.length,1);for(let n=0;n<a;n++){const a=s[n];const c=i[n];o.push([e.name||"",e.slug||"",e.privacy||"",teams_escapeCSVField(e.description||""),r,t,a?.username||"",a?.role||"",a?.state||"",c?.name||"",c?.full_name||"",c?.role||""])}}return o.map((e=>e.map((e=>`"${e}"`)).join(","))).join("\n")}function formatPermissions(e){const r=[];if(e.admin)r.push("admin");if(e.maintain)r.push("maintain");if(e.push)r.push("write");if(e.triage)r.push("triage");if(e.pull)r.push("read");return r.join("; ")}function teams_escapeCSVField(e){return e.replace(/"/g,'""')}async function getTeamMemberCount(e,r,t){try{const o=await fetchAllPages((r=>e.rest.teams.listMembersInOrg(r)),{org:r,team_slug:t,perPage:100});return o.length}catch(e){logDebug(`Cannot access members for team ${t}: ${e.message}`);return null}}async function getTeamRepoCount(e,r,t){try{const o=await fetchAllPages((r=>e.rest.teams.listReposInOrg(r)),{org:r,team_slug:t,perPage:100});return o.length}catch(e){logDebug(`Cannot access repositories for team ${t}: ${e.message}`);return null}}function getTeamStats(e){const r={total:e.length,secret:0,closed:0,open:0,totalMembers:0,totalRepos:0,withMembers:0,withRepos:0,averageMembers:0,averageRepos:0};let t=0;let o=0;let s=0;let n=0;e.forEach((e=>{if(e.privacy){r[e.privacy]++}if(typeof e.members_count==="number"){t+=e.members_count;s++;if(e.members_count>0)r.withMembers++}if(typeof e.repos_count==="number"){o+=e.repos_count;n++;if(e.repos_count>0)r.withRepos++}}));r.totalMembers=t;r.totalRepos=o;r.averageMembers=s>0?(t/s).toFixed(1):0;r.averageRepos=n>0?(o/n).toFixed(1):0;return r}function displayTeamStats(e){const r=getTeamStats(e);console.log("📊 Team Statistics:");console.log(`   Total: ${r.total}`);console.log(`   Secret: ${r.secret} | Closed: ${r.closed} | Open: ${r.open}`);console.log(`   Teams with members: ${r.withMembers}`);console.log(`   Teams with repositories: ${r.withRepos}`);console.log(`   Total members: ${r.totalMembers}`);console.log(`   Total repositories: ${r.totalRepos}`);console.log(`   Average members per team: ${r.averageMembers}`);console.log(`   Average repositories per team: ${r.averageRepos}`);console.log("")}function validateTeamOptions(e){const r=[];if(e.visibility){const t=["open","closed","secret"];if(!t.includes(e.visibility.toLowerCase())){r.push(`Invalid visibility: ${e.visibility}. Must be one of: ${t.join(", ")}`)}}if(e.sort){const t=["name","members","repos"];if(!t.includes(e.sort.toLowerCase())){r.push(`Invalid sort option: ${e.sort}. Must be one of: ${t.join(", ")}`)}}if(e.order){const t=["asc","desc"];if(!t.includes(e.order.toLowerCase())){r.push(`Invalid order option: ${e.order}. Must be one of: ${t.join(", ")}`)}}if(typeof e.minMembers==="number"&&typeof e.maxMembers==="number"){if(e.minMembers>e.maxMembers){r.push("minMembers cannot be greater than maxMembers")}}return{isValid:r.length===0,errors:r}}async function fetchAllPagesQuietly(e,r={}){const t=[];let o=1;const s=Math.min(r.perPage||E.$W.api.defaultPerPage,E.$W.api.maxPerPage);while(true){const n=await e({...r,page:o,per_page:s});const i=Array.isArray(n.data)?n.data:n.data.repositories||n.data.items||[];t.push(...i);if(i.length<s){break}o++}return t}async function handleWebhooksCommand(e,r={}){try{const t=await(0,y.getOctokitClient)();if(!e){(0,b.g7)("No organization specified, detecting from GitHub App installation...");e=await(0,y.pV)(t);if(!e){displayError("organization detection",new Error("Could not auto-detect organization. Please specify: ghapp webhooks <org>"));return}(0,b.g7)(`Detected organization: ${e}`)}let o=[];if(r.repo){(0,b.N5)(`Fetching webhooks for repository ${e}/${r.repo}...`);try{const{data:s}=await t.rest.repos.get({owner:e,repo:r.repo});o=[s]}catch(t){if(t.status===404){displayError("fetching repository",new Error(`Repository '${e}/${r.repo}' not found or not accessible`));return}throw t}}else{(0,b.N5)(`Fetching all repositories from ${e}...`);o=await(0,y.Ey)((e=>t.rest.repos.listForOrg(e)),{org:e,perPage:100})}(0,b.N5)("Fetching webhook details for repositories...");const s=await enrichRepositoriesWithWebhooks(t,e,o);let n=s;const i=s.filter((e=>e.access_error==="insufficient_permissions")).length;const a=i>s.length*.5;if(!r.showAll){n=n.filter((e=>e.webhooks.length>0))}if(r.event){n=n.filter((e=>e.webhooks.some((e=>e.events.includes(r.event)))))}if(r.activeOnly){n=n.filter((e=>e.webhooks.some((e=>e.active))))}if(r.sort){n=sortWebhookData(n,r.sort,r.order||"asc")}if(r.fetch){const r=generateWebhooksCSV(n);const t=saveCSVFileOrganized(r,`webhooks_${e}`,"webhooks");if(t){const r=n.reduce(((e,r)=>e+r.webhooks.length),0);(0,b.rg)(`Exported ${r} webhooks from ${n.length} repositories in ${e} to ${t}`)}}else{const t=n.reduce(((e,r)=>e+r.webhooks.length),0);if(!r.showAll&&s.length>n.length){const e=s.length-n.length;console.log(`\n🔍 Showing ${n.length} repositories with webhooks (hiding ${e} repositories without webhooks).`);console.log("   Use --show-all to display all repositories including those without webhooks.\n")}displaySummary("webhooks",t,`across ${n.length} repositories in ${e}`);n.forEach((e=>displayRepositoryWebhooks(e,r.detailed)))}}catch(r){if(r.status===404){displayError("fetching webhooks",new Error(`Organization '${e}' not found or not accessible`))}else{(0,y.CT)(r,"fetching webhooks")}}}async function enrichRepositoriesWithWebhooks(e,r,t){const o=[];let s=0;let n=false;for(let i=0;i<t.length;i++){const a=t[i];displayProgress("Fetching webhook data",i+1,t.length);try{const t=await fetchAllPagesQuietly((r=>e.rest.repos.listWebhooks(r)),{owner:r,repo:a.name,perPage:100});const s=[];for(const o of t){try{const{data:t}=await e.rest.repos.getWebhook({owner:r,repo:a.name,hook_id:o.id});s.push({id:t.id,name:t.name||"web",active:t.active,events:t.events||[],config:{url:t.config?.url||"",content_type:t.config?.content_type||"",secret:t.config?.secret?"***configured***":"not configured",insecure_ssl:t.config?.insecure_ssl||"0"},created_at:t.created_at,updated_at:t.updated_at,ping_url:t.ping_url,test_url:t.test_url,last_response:t.last_response||{}})}catch(e){(0,b.MD)(`Cannot get details for webhook ${o.id} in ${a.name}: ${e.message}`);s.push({id:o.id,name:o.name||"web",active:o.active,events:o.events||[],config:o.config||{},created_at:o.created_at,updated_at:o.updated_at,ping_url:o.ping_url||"",test_url:o.test_url||"",last_response:o.last_response||{}})}}o.push({repository:{name:a.name,full_name:a.full_name,private:a.private,html_url:a.html_url,default_branch:a.default_branch},webhooks:s,webhook_count:s.length})}catch(e){if(e.status===403&&e.message.includes("Resource not accessible by integration")){s++;if(!n){console.log("\n⚠️  GitHub App lacks webhook read permissions. Skipping webhook data collection...");console.log("📋 To enable webhook features, update your GitHub App permissions:");console.log("   • Repository Administration: Read");console.log("   • Then update the app installation\n");n=true}(0,b.MD)(`Skipping webhooks for ${a.name} due to insufficient permissions`)}else{(0,b.MD)(`Cannot access webhooks for repository ${a.name}: ${e.message}`)}o.push({repository:{name:a.name,full_name:a.full_name,private:a.private,html_url:a.html_url,default_branch:a.default_branch},webhooks:[],webhook_count:0,access_error:e.status===403?"insufficient_permissions":"unknown_error"})}}if(s>0){console.log(`\n📊 Summary: Skipped webhook data for ${s}/${t.length} repositories due to permission restrictions.`);console.log("🔧 Update your GitHub App's 'Administration' permission to 'Read' to access webhook configurations.\n")}return o}function generateWebhooksCSV(e){const r=[];r.push(["Repository Name","Repository Full Name","Repository Private","Repository URL","Webhook ID","Webhook Name","Webhook Active","Webhook URL","Content Type","Secret Configured","Insecure SSL","Events","Created At","Updated At","Last Response Status","Last Response Message"]);for(const t of e){const e=t.repository;const o=t.webhooks;if(o.length===0){r.push([e.name||"",e.full_name||"",e.private?"true":"false",e.html_url||"","","","","","","","","","","","",""])}else{for(const t of o){r.push([e.name||"",e.full_name||"",e.private?"true":"false",e.html_url||"",t.id.toString(),t.name||"",t.active?"true":"false",t.config?.url||"",t.config?.content_type||"",t.config?.secret||"",t.config?.insecure_ssl||"",(t.events||[]).join("; "),t.created_at||"",t.updated_at||"",t.last_response?.status||"",t.last_response?.message||""])}}}return r.map((e=>e.map((e=>`"${webhooks_escapeCSVField(e)}"`)).join(","))).join("\n")}function displayRepositoryWebhooks(e,r=false){const t=e.repository;const o=e.webhooks;console.log(`📦 ${t.name} (${t.full_name})`);console.log(`   🔗 ${t.html_url}`);console.log(`   🔒 ${t.private?"Private":"Public"}`);if(o.length===0){console.log("   📡 No webhooks configured")}else{console.log(`   📡 ${o.length} webhook${o.length!==1?"s":""} configured:`);o.forEach(((e,t)=>{const o=e.active?"🟢":"🔴";console.log(`      ${t+1}. ${o} ${e.name} (ID: ${e.id})`);console.log(`         URL: ${e.config?.url||"Not configured"}`);console.log(`         Events: ${e.events.join(", ")||"None"}`);if(r){console.log(`         Content Type: ${e.config?.content_type||"Not specified"}`);console.log(`         Secret: ${e.config?.secret||"Not configured"}`);console.log(`         Insecure SSL: ${e.config?.insecure_ssl||"false"}`);console.log(`         Created: ${e.created_at||"Unknown"}`);console.log(`         Updated: ${e.updated_at||"Unknown"}`);if(e.last_response?.status){console.log(`         Last Response: ${e.last_response.status} - ${e.last_response.message||"No message"}`)}}}))}console.log("")}function sortWebhookData(e,r,t="asc"){const o=t==="desc"?-1:1;return e.sort(((e,t)=>{let s,n;switch(r.toLowerCase()){case"repo":case"repository":s=e.repository.name.toLowerCase();n=t.repository.name.toLowerCase();break;case"webhooks":case"count":s=e.webhook_count;n=t.webhook_count;break;case"url":s=e.webhooks[0]?.config?.url?.toLowerCase()||"";n=t.webhooks[0]?.config?.url?.toLowerCase()||"";break;case"events":s=e.webhooks[0]?.events?.length||0;n=t.webhooks[0]?.events?.length||0;break;case"created":s=new Date(e.webhooks[0]?.created_at||0);n=new Date(t.webhooks[0]?.created_at||0);break;default:s=e.repository.name.toLowerCase();n=t.repository.name.toLowerCase()}if(s<n)return-1*o;if(s>n)return 1*o;return 0}))}function webhooks_escapeCSVField(e){if(typeof e!=="string"){return String(e)}return e.replace(/"/g,'""')}function validateWebhookOptions(e){const r=[];if(e.sort){const t=["repo","repository","webhooks","count","url","events","created"];if(!t.includes(e.sort.toLowerCase())){r.push(`Invalid sort option: ${e.sort}. Must be one of: ${t.join(", ")}`)}}if(e.order){const t=["asc","desc"];if(!t.includes(e.order.toLowerCase())){r.push(`Invalid order option: ${e.order}. Must be one of: ${t.join(", ")}`)}}return{isValid:r.length===0,errors:r}}function getWebhookStats(e){const r={totalRepositories:e.length,repositoriesWithWebhooks:0,repositoriesWithoutWebhooks:0,totalWebhooks:0,activeWebhooks:0,inactiveWebhooks:0,mostCommonEvents:{},averageWebhooksPerRepo:0};let t=0;e.forEach((e=>{const o=e.webhooks.length;t+=o;if(o>0){r.repositoriesWithWebhooks++}else{r.repositoriesWithoutWebhooks++}e.webhooks.forEach((e=>{if(e.active){r.activeWebhooks++}else{r.inactiveWebhooks++}e.events.forEach((e=>{r.mostCommonEvents[e]=(r.mostCommonEvents[e]||0)+1}))}))}));r.totalWebhooks=t;r.averageWebhooksPerRepo=e.length>0?(t/e.length).toFixed(1):0;return r}function displayWebhookStats(e){const r=getWebhookStats(e);console.log("📊 Webhook Statistics:");console.log(`   Total repositories: ${r.totalRepositories}`);console.log(`   Repositories with webhooks: ${r.repositoriesWithWebhooks}`);console.log(`   Repositories without webhooks: ${r.repositoriesWithoutWebhooks}`);console.log(`   Total webhooks: ${r.totalWebhooks}`);console.log(`   Active webhooks: ${r.activeWebhooks}`);console.log(`   Inactive webhooks: ${r.inactiveWebhooks}`);console.log(`   Average webhooks per repository: ${r.averageWebhooksPerRepo}`);if(Object.keys(r.mostCommonEvents).length>0){console.log("   Most common events:");const e=Object.entries(r.mostCommonEvents).sort((([,e],[,r])=>r-e)).slice(0,5);e.forEach((([e,r])=>{console.log(`     ${e}: ${r}`)}))}console.log("")}async function handleTokenCommand(e={}){try{const r=E.$W.github.token;const t=E.$W.github.tokenExpires;if(e.validate){return validateTokenOnly(r,t)}if(e.refresh){await refreshTokenForce();return}displayTokenInfo(r,t)}catch(e){displayError("handling token command",e)}}function validateTokenOnly(e,r){if(!e||!r){(0,b.vV)("No token or expiry found in .env");return false}try{const e=new Date(r);const t=new Date;const o=e.getTime()-t.getTime();const s=o>3e5;if(s){console.log("✅ Token is valid");const e=Math.floor(o/6e4);console.log(`⏳ Expires in ${e} minutes`)}else{console.log("⚠️  Token is expiring soon or expired")}return s}catch(e){(0,b.vV)("Error validating token",e);return false}}async function refreshTokenForce(){try{const{getOctokitClient:e}=await Promise.resolve().then(__nccwpck_require__.bind(__nccwpck_require__,169));await e();console.log("✅ Token refresh completed");const r=E.$W.github.token;const t=E.$W.github.tokenExpires;displayTokenInfo(r,t)}catch(e){displayError("refreshing token",e)}}function getTokenExpiryInfo(){const e=config.github.tokenExpires;if(!e){return{valid:false,error:"No expiry date found"}}try{const r=new Date(e);const t=new Date;const o=r.getTime()-t.getTime();return{valid:o>3e5,expiresAt:r,timeLeft:o,minutesLeft:Math.floor(o/6e4),hoursLeft:Math.floor(o/36e5),isExpired:o<=0,isExpiringSoon:o<=3e5&&o>0}}catch(e){return{valid:false,error:e.message}}}function needsTokenRefresh(){const e=getTokenExpiryInfo();return!e.valid||e.isExpiringSoon}function getTokenSummary(){const e=config.github.token;const r=getTokenExpiryInfo();if(!e){return"❌ No token available"}if(!r.valid){return"⚠️  Token invalid or expired"}if(r.isExpiringSoon){return`⏳ Token expires in ${r.minutesLeft} minutes`}return`✅ Token valid (${r.hoursLeft}h remaining)`}function handleHelpCommand(){const e={title:`${E.$W.app.name} - ${E.$W.app.description}`,description:`Version ${E.$W.app.version}\n\nA command-line interface for interacting with GitHub App APIs.`,options:[{flags:"repos",description:"List all repositories accessible to the installation"},{flags:"teams [org]",description:"List all teams (auto-detects org if not specified)"},{flags:"webhooks [org]",description:"List webhooks configured for repositories"},{flags:"token",description:"Show token and expiry information"},{flags:"help-repos",description:"Show detailed help for repos command"},{flags:"help-teams",description:"Show detailed help for teams command"},{flags:"help-webhooks",description:"Show detailed help for webhooks command"},{flags:"help-token",description:"Show detailed help for token command"},{flags:"--version",description:"Show version information"}],examples:[{command:"ghapp repos",description:"List all repositories"},{command:"ghapp repos --visibility private",description:"List only private repositories"},{command:"ghapp teams",description:"List all teams (auto-detect org)"},{command:"ghapp teams myorg",description:"List teams in specific organization"},{command:"ghapp webhooks",description:"List webhooks for all repositories"},{command:"ghapp webhooks --repo myrepo",description:"Check webhooks for specific repository"},{command:"ghapp token",description:"Show current token status"}],notes:["Use --help with any command for detailed options","All commands support --fetch to export data to CSV","GitHub App credentials must be configured in .env file"]};displayHelp("help",e)}function handleReposHelpCommand(){const e={title:"Repository Commands Help",description:"List and manage repositories accessible to your GitHub App installation.",options:[{flags:"-v, --visibility <type>",description:"Filter by visibility (public, private, internal)"},{flags:"-l, --language <lang>",description:"Filter by programming language"},{flags:"--repo-csv <file>",description:"Get specific repositories from CSV file"},{flags:"--detailed",description:"Show detailed repository information"},{flags:"--fetch",description:"Export to CSV file with detailed metrics instead of displaying"},{flags:"--user-permission",description:"Fetch collaborators and their roles for each repository"},{flags:"--since <date>",description:"Filter by last update date (ISO 8601)"},{flags:"--min-stars <num>",description:"Minimum number of stars"},{flags:"--max-stars <num>",description:"Maximum number of stars"},{flags:"--sort <field>",description:"Sort by (name, stars, forks, updated, size)"},{flags:"--order <order>",description:"Sort order (asc, desc)"},{flags:"--stats",description:"Show repository statistics"}],examples:[{command:"ghapp repos",description:"Get all repositories"},{command:"ghapp repos --visibility private",description:"Only private repositories"},{command:"ghapp repos --language javascript",description:"Only JavaScript repositories"},{command:"ghapp repos --repo-csv myrepos.csv",description:"Get specific repos from CSV"},{command:"ghapp repos --detailed",description:"Show detailed information"},{command:"ghapp repos --user-permission",description:"Get collaborators and their roles"},{command:"ghapp repos --user-permission --fetch",description:"Export collaborators to CSV"},{command:"ghapp repos --fetch",description:"Save to CSV file with detailed metrics"},{command:"ghapp repos --min-stars 10",description:"Repositories with 10+ stars"},{command:"ghapp repos --sort stars --order desc",description:"Sort by stars (most first)"},{command:"ghapp repos --since 2024-01-01",description:"Updated since Jan 1, 2024"}],notes:["CSV input format: repository names, one per line","Output CSV includes: org name, repo name, empty status, dates, counts for issues/PRs/releases, etc.","Files are saved with timestamp: repositories_YYYY-MM-DDTHH-mm-ss-SSSZ.csv","Use --detailed for description, URLs, and additional metrics in console output","Use --fetch for comprehensive repository analytics CSV export","Use --user-permission to get collaborator roles (admin, maintain, push, triage, pull)","--user-permission and --fetch may take longer as they require additional API calls per repository"]};displayHelp("repos",e)}function handleTeamsHelpCommand(){const e={title:"Teams Commands Help",description:"List and manage teams in GitHub organizations.",options:[{flags:"[org]",description:"Organization name (auto-detects if not provided)"},{flags:"-v, --visibility <type>",description:"Filter by visibility (open, closed, secret)"},{flags:"--detailed",description:"Show detailed team information"},{flags:"--fetch",description:"Export to CSV file instead of displaying"},{flags:"--skip-members",description:"Skip fetching member/repo counts (faster)"},{flags:"--min-members <num>",description:"Minimum number of members"},{flags:"--max-members <num>",description:"Maximum number of members"},{flags:"--sort <field>",description:"Sort by (name, members, repos)"},{flags:"--order <order>",description:"Sort order (asc, desc)"},{flags:"--stats",description:"Show team statistics"}],examples:[{command:"ghapp teams",description:"All teams (auto-detect org)"},{command:"ghapp teams myorg",description:"All teams in specific organization"},{command:"ghapp teams --visibility secret",description:"Only secret teams"},{command:"ghapp teams --detailed",description:"Show detailed team information"},{command:"ghapp teams --fetch",description:"Export to CSV file"},{command:"ghapp teams --skip-members",description:"Skip member counts (faster)"},{command:"ghapp teams --min-members 5",description:"Teams with 5+ members"},{command:"ghapp teams --sort members --order desc",description:"Sort by member count"}],notes:["Organization is auto-detected from GitHub App installation if not specified","Member and repository counts require additional API calls (slower)","Use --skip-members for faster results when counts are not needed","Output CSV includes: name, privacy, members count, repositories count, etc.",'Some teams may show "No access" for counts due to permissions']};displayHelp("teams",e)}function handleTokenHelpCommand(){const e={title:"Token Commands Help",description:"Manage and inspect GitHub App authentication tokens.",options:[{flags:"--refresh",description:"Force refresh the token"},{flags:"--validate",description:"Validate token without showing details"}],examples:[{command:"ghapp token",description:"Show current token status and expiry"},{command:"ghapp token --validate",description:"Check if token is valid"},{command:"ghapp token --refresh",description:"Force refresh the token"}],notes:["Tokens are automatically refreshed when expired","Token expiry is shown in both UTC and IST time zones","Tokens are valid for 1 hour from GitHub App","A 5-minute buffer is used for refresh timing"]};displayHelp("token",e)}function handleWebhooksHelpCommand(){const e={title:"Webhooks Command Help",description:"List and analyze webhooks configured for repositories in your GitHub organization.",usage:["ghapp webhooks [org] [options]","ghapp webhooks --repo <repository-name> [options]","ghapp webhooks myorg --fetch","ghapp webhooks --event push --active-only"],arguments:[{name:"org",description:"Organization name (auto-detects if not provided)"}],options:[{flags:"--repo <name>",description:"Check webhooks for specific repository only"},{flags:"--fetch",description:"Save webhook data to CSV file instead of displaying"},{flags:"--detailed",description:"Show detailed webhook information including config"},{flags:"--event <type>",description:"Filter by specific event type (push, pull_request, etc.)"},{flags:"--active-only",description:"Show only active webhooks"},{flags:"--show-all",description:"Show all repositories even those without webhooks"},{flags:"--sort <field>",description:"Sort by: repo, webhooks, url, events, created"},{flags:"--order <order>",description:"Sort order: asc, desc (default: asc)"},{flags:"--stats",description:"Show webhook statistics summary"},{flags:"-v, --verbose",description:"Enable verbose logging"},{flags:"-q, --quiet",description:"Suppress non-error output"},{flags:"-h, --help",description:"Show this help message"}],examples:[{command:"ghapp webhooks",description:"List webhooks for all repositories (auto-detect org)"},{command:"ghapp webhooks myorg",description:"List webhooks for all repositories in myorg"},{command:"ghapp webhooks --repo myrepo",description:"Check webhooks for specific repository"},{command:"ghapp webhooks --fetch",description:"Export webhook data to CSV file"},{command:"ghapp webhooks --event push",description:"Show repositories with push event webhooks"},{command:"ghapp webhooks --active-only --detailed",description:"Show detailed info for active webhooks only"},{command:"ghapp webhooks --sort webhooks --order desc",description:"Sort by webhook count (highest first)"},{command:"ghapp webhooks --stats",description:"Show webhook statistics"}],notes:["Organization is auto-detected if your GitHub App is installed at organization level","CSV export includes webhook configuration details and last response status","Use --detailed to see webhook configuration including secret status","Common webhook events: push, pull_request, issues, release, create, delete","Requires appropriate GitHub App permissions to access repository webhooks"]};displayHelp("webhooks",e)}function showVersion(){console.log(`${E.$W.app.name} version ${E.$W.app.version}`);console.log(`${E.$W.app.description}`)}function showQuickHelp(){console.log(`Usage: ${E.$W.app.name} <command> [options]`);console.log("");console.log("Commands:");console.log("  repos                   List repositories");console.log("  teams [org]             List teams");console.log("  webhooks [org]          List webhooks");console.log("  token                   Show token info");console.log("  help                    Show this help");console.log("");console.log(`Run '${E.$W.app.name} help' for more information.`)}function getCommandHelp(e){const r={repos:handleReposHelpCommand,teams:handleTeamsHelpCommand,webhooks:handleWebhooksHelpCommand,token:handleTokenHelpCommand,help:handleHelpCommand};return r[e]||null}const T=new m;T.name(E.$W.app.name).description(E.$W.app.description).version(E.$W.app.version).option("-v, --verbose","Enable verbose logging").option("-q, --quiet","Suppress non-error output").hook("preAction",((e,r)=>{const t=e.opts();if(t.verbose){(0,b.He)(b.p_.DEBUG)}else if(t.quiet){(0,b.He)(b.p_.ERROR)}if(!(0,E.$r)()){process.exit(1)}}));T.command("repos").description("List repositories accessible to the installation").option("-v, --visibility <type>","Filter by visibility (public, private, internal)").option("-l, --language <lang>","Filter by programming language").option("--repo-csv <file>","Get specific repositories from CSV file").option("--detailed","Show detailed information including description").option("--fetch","Save data to CSV file instead of displaying").option("--user-permission","Fetch collaborators and their roles for each repository").option("--since <date>","Filter by last update date (ISO 8601)").option("--min-stars <num>","Minimum number of stars",parseInt).option("--max-stars <num>","Maximum number of stars",parseInt).option("--sort <field>","Sort by (name, stars, forks, updated, size)").option("--order <order>","Sort order (asc, desc)").option("--stats","Show repository statistics").action((async e=>{try{const r=validateRepositoryOptions(e);if(!r.isValid){r.errors.forEach((e=>(0,b.vV)(e)));process.exit(1)}await handleRepositoriesCommand(e)}catch(e){displayError("executing repos command",e);process.exit(1)}}));T.command("teams").argument("[org]","Organization name (auto-detects if not provided)").description("List teams in the organization (auto-detects org if GitHub App is installed at org level)").option("-v, --visibility <type>","Filter by visibility (open, closed, secret)").option("--detailed","Show detailed information including description").option("--fetch","Save data to CSV file instead of displaying").option("--skip-members","Skip fetching member and repository counts for better performance").option("--min-members <num>","Minimum number of members",parseInt).option("--max-members <num>","Maximum number of members",parseInt).option("--sort <field>","Sort by (name, members, repos)").option("--order <order>","Sort order (asc, desc)").option("--stats","Show team statistics").action((async(e,r)=>{try{const t=validateTeamOptions(r);if(!t.isValid){t.errors.forEach((e=>(0,b.vV)(e)));process.exit(1)}await handleTeamsCommand(e,r)}catch(e){displayError("executing teams command",e);process.exit(1)}}));T.command("webhooks").argument("[org]","Organization name (auto-detects if not provided)").description("List webhooks configured for repositories in the organization").option("--repo <name>","Check webhooks for specific repository only").option("--fetch","Save data to CSV file instead of displaying").option("--detailed","Show detailed webhook information").option("--event <type>","Filter by specific event type (push, pull_request, etc.)").option("--active-only","Show only active webhooks").option("--show-all","Show all repositories even those without webhooks").option("--sort <field>","Sort by (repo, webhooks, url, events, created)").option("--order <order>","Sort order (asc, desc)").option("--stats","Show webhook statistics").action((async(e,r)=>{try{const t=validateWebhookOptions(r);if(!t.isValid){t.errors.forEach((e=>(0,b.vV)(e)));process.exit(1)}await handleWebhooksCommand(e,r)}catch(e){displayError("executing webhooks command",e);process.exit(1)}}));T.command("token").description("Show current GitHub App token and expiry information").option("--refresh","Force refresh the token").option("--validate","Validate token without showing details").action((async e=>{try{await handleTokenCommand(e)}catch(e){displayError("executing token command",e);process.exit(1)}}));T.command("help").description("Show help information").action((()=>{handleHelpCommand()}));T.command("help-repos").description("Show detailed help for repos command").action((()=>{handleReposHelpCommand()}));T.command("help-teams").description("Show detailed help for teams command").action((()=>{handleTeamsHelpCommand()}));T.command("help-webhooks").description("Show detailed help for webhooks command").action((()=>{handleWebhooksHelpCommand()}));T.command("help-token").description("Show detailed help for token command").action((()=>{handleTokenHelpCommand()}));T.command("help-pagination").description("Show command options and examples (legacy)").action((()=>{console.log("⚠️  This command is deprecated. Use 'ghapp help-repos' or 'ghapp help-teams' instead.");handleReposHelpCommand()}));T.on("command:*",(e=>{(0,b.vV)(`Unknown command: ${e[0]}`);showQuickHelp();process.exit(1)}));T.on("option:version",(()=>{showVersion();process.exit(0)}));process.on("unhandledRejection",((e,r)=>{(0,b.vV)("Unhandled Rejection at:",r);(0,b.vV)("Reason:",e);process.exit(1)}));process.on("uncaughtException",(e=>{(0,b.vV)("Uncaught Exception:",e);process.exit(1)}));try{T.parse()}catch(e){displayError("parsing command line arguments",e);process.exit(1)}